Search.setIndex({"alltitles": {"3D wavelet denoising": [[15, "d-wavelet-denoising"]], "A tour of blur operators": [[2, "a-tour-of-blur-operators"]], "A tour of forward sensing operators": [[11, "a-tour-of-forward-sensing-operators"]], "ADMMIteration": [[135, "admmiteration"]], "Advanced": [[14, "advanced"]], "Affine": [[210, "affine"]], "AmplitudeLoss": [[112, "amplitudeloss"]], "Apply matched filtering to recover the signal and plot the results": [[6, "apply-matched-filtering-to-recover-the-signal-and-plot-the-results"]], "ArtifactRemoval": [[89, "artifactremoval"]], "AutoEncoder": [[90, "autoencoder"]], "BM3D": [[91, "bm3d"]], "BaseDEQ": [[214, "basedeq"]], "BaseOptim": [[113, "baseoptim"]], "BaseUnfold": [[215, "baseunfold"]], "Basics": [[14, "basics"]], "Benefits of using a decomposable forward operator.": [[10, "benefits-of-using-a-decomposable-forward-operator"]], "Blur": [[2, "blur"], [11, "blur"], [146, "blur"]], "Blur & Super-Resolution": [[56, "blur-super-resolution"]], "BlurFFT": [[147, "blurfft"]], "Build Sampler class": [[27, "build-sampler-class"]], "Building your custom sampling algorithm.": [[27, "building-your-custom-sampling-algorithm"]], "CPIteration": [[136, "cpiteration"]], "Classical Denoisers": [[49, "classical-denoisers"]], "Complex Denoisers": [[49, "complex-denoisers"]], "Compressed Sensing": [[11, "compressed-sensing"]], "CompressedSensing": [[148, "compressedsensing"]], "Compressive operators": [[56, "compressive-operators"]], "Computation times": [[1, "computation-times"], [13, "computation-times"], [18, "computation-times"], [21, "computation-times"], [26, "computation-times"], [32, "computation-times"], [38, "computation-times"], [39, "computation-times"], [46, "computation-times"], [61, "computation-times"]], "Computed Tomography": [[11, "computed-tomography"]], "Concatenating forward operators.": [[8, "concatenating-forward-operators"]], "ConvDecoder": [[92, "convdecoder"]], "Create a Monte Carlo sampler": [[28, "create-a-monte-carlo-sampler"]], "Create a dataloader": [[4, "create-a-dataloader"]], "Create forward model": [[6, "create-forward-model"]], "Create the MCMC sampler": [[31, "create-the-mcmc-sampler"]], "Create the Monte Carlo sampler": [[28, "create-the-monte-carlo-sampler"]], "Create the denoising operator and solve the problem.": [[15, "create-the-denoising-operator-and-solve-the-problem"]], "Create the preconditioned and standard ULA samplers": [[27, "create-the-preconditioned-and-standard-ula-samplers"]], "Creating a custom forward operator.": [[10, "creating-a-custom-forward-operator"]], "Creating a decomposable forward operator.": [[10, "creating-a-decomposable-forward-operator"]], "Creating a forward operator.": [[10, "creating-a-forward-operator"]], "Creating your own dataset": [[4, "creating-your-own-dataset"]], "DDRM": [[197, "ddrm"]], "DEQ_builder": [[216, "deq-builder"]], "DIV2K": [[63, "div2k"]], "DPIR": [[114, "dpir"]], "DPIR method for PnP image deblurring.": [[22, "dpir-method-for-pnp-image-deblurring"]], "DPS": [[198, "dps"]], "DPS Algorithm": [[30, "dps-algorithm"]], "DPS approximation": [[30, "dps-approximation"]], "DRSIteration": [[137, "drsiteration"]], "DRUNet": [[93, "drunet"]], "Data Fidelity": [[54, "data-fidelity"]], "Data fidelity step": [[29, "data-fidelity-step"]], "DataFidelity": [[115, "datafidelity"]], "Datasets": [[48, "datasets"]], "Decolorize": [[11, "decolorize"], [149, "decolorize"]], "DecomposablePhysics": [[150, "decomposablephysics"]], "Deep Denoisers": [[49, "deep-denoisers"]], "Deep Equilibrium": [[58, "deep-equilibrium"]], "Deep Equilibrium (DEQ) algorithms for image deblurring": [[40, "deep-equilibrium-deq-algorithms-for-image-deblurring"]], "Deep Image Prior": [[50, "deep-image-prior"]], "DeepImagePrior": [[94, "deepimageprior"]], "DeepInverse: a Pytorch library for imaging with deep learning": [[60, "deepinverse-a-pytorch-library-for-imaging-with-deep-learning"]], "Define a custom iterator for the PDNet learned primal-dual algorithm.": [[43, "define-a-custom-iterator-for-the-pdnet-learned-primal-dual-algorithm"]], "Define a custom optimization algorithm": [[23, "define-a-custom-optimization-algorithm"]], "Define a forward operator": [[7, "define-a-forward-operator"]], "Define a model": [[7, "define-a-model"]], "Define diffusion schedule": [[30, "define-diffusion-schedule"]], "Define forward operator and generate dataset": [[12, "define-forward-operator-and-generate-dataset"], [44, "define-forward-operator-and-generate-dataset"]], "Define forward operator and noise model": [[5, "define-forward-operator-and-noise-model"], [27, "define-forward-operator-and-noise-model"], [28, "define-forward-operator-and-noise-model"], [31, "define-forward-operator-and-noise-model"]], "Define physics operator": [[3, "define-physics-operator"]], "Define the  DEQ algorithm.": [[40, "define-the-deq-algorithm"]], "Define the MMSE denoiser": [[28, "define-the-mmse-denoiser"]], "Define the custom fStep and gStep modules": [[23, "define-the-custom-fstep-and-gstep-modules"]], "Define the deep image prior": [[5, "define-the-deep-image-prior"]], "Define the likelihood": [[31, "define-the-likelihood"]], "Define the model.": [[43, "define-the-model"]], "Define the prior": [[27, "define-the-prior"], [31, "define-the-prior"]], "Define the sampling iteration": [[27, "define-the-sampling-iteration"]], "Define the trainable prior and data fidelity terms.": [[43, "define-the-trainable-prior-and-data-fidelity-terms"]], "Define the training parameters.": [[40, "define-the-training-parameters"], [41, "define-the-training-parameters"], [42, "define-the-training-parameters"], [43, "define-the-training-parameters"], [45, "define-the-training-parameters"]], "Define the unfolded PnP algorithm.": [[45, "define-the-unfolded-pnp-algorithm"]], "Define the unfolded Proximal Gradient algorithm.": [[41, "define-the-unfolded-proximal-gradient-algorithm"], [42, "define-the-unfolded-proximal-gradient-algorithm"]], "Define the unfolded trainable model.": [[43, "define-the-unfolded-trainable-model"]], "Defining new operators": [[56, "defining-new-operators"]], "Definition of forward operator and noise model": [[20, "definition-of-forward-operator-and-noise-model"]], "Dehazing": [[56, "dehazing"]], "Denoisers": [[49, "denoisers"]], "Denoising": [[11, "denoising"], [19, "denoising"], [151, "denoising"]], "Denoising step": [[29, "denoising-step"], [30, "denoising-step"]], "DiffPIR": [[199, "diffpir"]], "DiffUNet": [[95, "diffunet"]], "Diffraction blur generators": [[2, "diffraction-blur-generators"]], "DiffractionBlurGenerator": [[189, "diffractionblurgenerator"]], "Diffusion": [[57, "diffusion"]], "Diffusion Algorithms": [[57, "diffusion-algorithms"]], "Diffusion model loading": [[30, "diffusion-model-loading"]], "DiffusionSampler": [[200, "diffusionsampler"]], "DnCNN": [[96, "dncnn"]], "Downsampling": [[152, "downsampling"]], "EILoss": [[68, "eiloss"]], "EPLL": [[116, "epll"]], "EPLLDenoiser": [[97, "eplldenoiser"]], "EquispacedMaskGenerator": [[190, "equispacedmaskgenerator"]], "Equivariant Denoisers": [[49, "equivariant-denoisers"]], "EquivariantDenoiser": [[98, "equivariantdenoiser"]], "Euclidean": [[211, "euclidean"]], "Evaluate the model on the problem and plot the results.": [[16, "evaluate-the-model-on-the-problem-and-plot-the-results"], [17, "evaluate-the-model-on-the-problem-and-plot-the-results"], [23, "evaluate-the-model-on-the-problem-and-plot-the-results"], [25, "evaluate-the-model-on-the-problem-and-plot-the-results"]], "Evaluate the model on the problem.": [[22, "evaluate-the-model-on-the-problem"], [24, "evaluate-the-model-on-the-problem"]], "Evaluate the reconstruction algorithm on the problem.": [[3, "evaluate-the-reconstruction-algorithm-on-the-problem"]], "Examples": [[14, "examples"]], "Examples using Affine:": [[210, "examples-using-affine"]], "Examples using ArtifactRemoval:": [[89, "examples-using-artifactremoval"]], "Examples using BaseDEQ:": [[214, "examples-using-basedeq"]], "Examples using BaseOptim:": [[113, "examples-using-baseoptim"]], "Examples using BaseUnfold:": [[215, "examples-using-baseunfold"]], "Examples using Blur:": [[146, "examples-using-blur"]], "Examples using BlurFFT:": [[147, "examples-using-blurfft"]], "Examples using CPIteration:": [[136, "examples-using-cpiteration"]], "Examples using CompressedSensing:": [[148, "examples-using-compressedsensing"]], "Examples using ConvDecoder:": [[92, "examples-using-convdecoder"]], "Examples using DDRM:": [[197, "examples-using-ddrm"]], "Examples using DEQ_builder:": [[216, "examples-using-deq-builder"]], "Examples using DPIR:": [[114, "examples-using-dpir"]], "Examples using DPS:": [[198, "examples-using-dps"]], "Examples using DRUNet:": [[93, "examples-using-drunet"]], "Examples using DataFidelity:": [[115, "examples-using-datafidelity"]], "Examples using Decolorize:": [[149, "examples-using-decolorize"]], "Examples using DecomposablePhysics:": [[150, "examples-using-decomposablephysics"]], "Examples using DeepImagePrior:": [[94, "examples-using-deepimageprior"]], "Examples using Denoising:": [[151, "examples-using-denoising"]], "Examples using DiffPIR:": [[199, "examples-using-diffpir"]], "Examples using DiffUNet:": [[95, "examples-using-diffunet"]], "Examples using DiffractionBlurGenerator:": [[189, "examples-using-diffractionblurgenerator"]], "Examples using DiffusionSampler:": [[200, "examples-using-diffusionsampler"]], "Examples using DnCNN:": [[96, "examples-using-dncnn"]], "Examples using Downsampling:": [[152, "examples-using-downsampling"]], "Examples using EILoss:": [[68, "examples-using-eiloss"]], "Examples using EPLL:": [[116, "examples-using-epll"]], "Examples using EquispacedMaskGenerator:": [[190, "examples-using-equispacedmaskgenerator"]], "Examples using Euclidean:": [[211, "examples-using-euclidean"]], "Examples using FNEJacobianSpectralNorm:": [[69, "examples-using-fnejacobianspectralnorm"]], "Examples using GSDRUNet:": [[99, "examples-using-gsdrunet"]], "Examples using GaussianMaskGenerator:": [[191, "examples-using-gaussianmaskgenerator"]], "Examples using GaussianNoise:": [[153, "examples-using-gaussiannoise"]], "Examples using GeneratorMixture:": [[192, "examples-using-generatormixture"]], "Examples using HDF5Dataset:": [[64, "examples-using-hdf5dataset"]], "Examples using Homography:": [[206, "examples-using-homography"]], "Examples using IndicatorL2:": [[118, "examples-using-indicatorl2"]], "Examples using Inpainting:": [[155, "examples-using-inpainting"]], "Examples using L2:": [[121, "examples-using-l2"]], "Examples using LPIPS:": [[71, "examples-using-lpips"]], "Examples using LinearPhysics:": [[156, "examples-using-linearphysics"]], "Examples using LogPoissonLikelihood:": [[122, "examples-using-logpoissonlikelihood"]], "Examples using LogPoissonNoise:": [[157, "examples-using-logpoissonnoise"]], "Examples using Loss:": [[72, "examples-using-loss"]], "Examples using MCLoss:": [[74, "examples-using-mcloss"]], "Examples using MOILoss:": [[75, "examples-using-moiloss"]], "Examples using MRI:": [[158, "examples-using-mri"]], "Examples using MedianFilter:": [[100, "examples-using-medianfilter"]], "Examples using MonteCarlo:": [[201, "examples-using-montecarlo"]], "Examples using MotionBlurGenerator:": [[193, "examples-using-motionblurgenerator"]], "Examples using Neighbor2Neighbor:": [[77, "examples-using-neighbor2neighbor"]], "Examples using OptimIterator:": [[123, "examples-using-optimiterator"]], "Examples using PDNet_DualBlock:": [[101, "examples-using-pdnet-dualblock"]], "Examples using PDNet_PrimalBlock:": [[102, "examples-using-pdnet-primalblock"]], "Examples using PGDIteration:": [[141, "examples-using-pgditeration"]], "Examples using PSNR:": [[78, "examples-using-psnr"]], "Examples using PanTiltRotate:": [[212, "examples-using-pantiltrotate"]], "Examples using Pansharpen:": [[159, "examples-using-pansharpen"]], "Examples using PatchDataset:": [[65, "examples-using-patchdataset"]], "Examples using PatchNR:": [[124, "examples-using-patchnr"]], "Examples using PatchPrior:": [[125, "examples-using-patchprior"]], "Examples using PhaseRetrieval:": [[160, "examples-using-phaseretrieval"]], "Examples using Physics:": [[161, "examples-using-physics"]], "Examples using PhysicsGenerator:": [[194, "examples-using-physicsgenerator"]], "Examples using PnP:": [[126, "examples-using-pnp"]], "Examples using PoissonGaussianNoise:": [[162, "examples-using-poissongaussiannoise"]], "Examples using PoissonLikelihood:": [[127, "examples-using-poissonlikelihood"]], "Examples using PoissonNoise:": [[163, "examples-using-poissonnoise"]], "Examples using Prior:": [[128, "examples-using-prior"]], "Examples using RED:": [[129, "examples-using-red"]], "Examples using RadioInterferometry:": [[164, "examples-using-radiointerferometry"]], "Examples using RandomMaskGenerator:": [[195, "examples-using-randommaskgenerator"]], "Examples using RandomPhaseRetrieval:": [[165, "examples-using-randomphaseretrieval"]], "Examples using Rotate:": [[207, "examples-using-rotate"]], "Examples using Scale:": [[208, "examples-using-scale"]], "Examples using ScorePrior:": [[130, "examples-using-scoreprior"]], "Examples using Shift:": [[209, "examples-using-shift"]], "Examples using Similarity:": [[213, "examples-using-similarity"]], "Examples using SinglePhotonLidar:": [[166, "examples-using-singlephotonlidar"]], "Examples using SinglePixelCamera:": [[167, "examples-using-singlepixelcamera"]], "Examples using SpaceVaryingBlur:": [[168, "examples-using-spacevaryingblur"]], "Examples using SupLoss:": [[82, "examples-using-suploss"]], "Examples using SureGaussianLoss:": [[83, "examples-using-suregaussianloss"]], "Examples using SurePGLoss:": [[84, "examples-using-surepgloss"]], "Examples using SurePoissonLoss:": [[85, "examples-using-surepoissonloss"]], "Examples using TVPrior:": [[131, "examples-using-tvprior"]], "Examples using TensorList:": [[218, "examples-using-tensorlist"]], "Examples using Tomography:": [[169, "examples-using-tomography"]], "Examples using Trainer:": [[62, "examples-using-trainer"]], "Examples using ULA:": [[203, "examples-using-ula"]], "Examples using UNet:": [[108, "examples-using-unet"]], "Examples using UniformNoise:": [[171, "examples-using-uniformnoise"]], "Examples using WaveletDenoiser:": [[109, "examples-using-waveletdenoiser"]], "Examples using WaveletDictDenoiser:": [[110, "examples-using-waveletdictdenoiser"]], "Examples using WaveletPrior:": [[133, "examples-using-waveletprior"]], "Examples using cal_psnr:": [[219, "examples-using-cal-psnr"]], "Examples using gaussian_blur:": [[175, "examples-using-gaussian-blur"]], "Examples using generate_dataset:": [[67, "examples-using-generate-dataset"]], "Examples using get_freer_gpu:": [[220, "examples-using-get-freer-gpu"]], "Examples using load_url_image:": [[221, "examples-using-load-url-image"]], "Examples using optim_builder:": [[134, "examples-using-optim-builder"]], "Examples using plot:": [[223, "examples-using-plot"]], "Examples using plot_curves:": [[224, "examples-using-plot-curves"]], "Examples using plot_inset:": [[225, "examples-using-plot-inset"]], "Examples using plot_parameters:": [[226, "examples-using-plot-parameters"]], "Examples using test:": [[204, "examples-using-test"]], "Examples using unfolded_builder:": [[217, "examples-using-unfolded-builder"]], "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting": [[19, "expected-patch-log-likelihood-epll-for-denoising-and-inpainting"]], "Exploring the total variation prior.": [[16, "exploring-the-total-variation-prior"]], "Exploring the wavelet prior.": [[17, "exploring-the-wavelet-prior"]], "Extension to multiple wavelet bases.": [[15, "extension-to-multiple-wavelet-bases"]], "FISTAIteration": [[138, "fistaiteration"]], "FNEJacobianSpectralNorm": [[69, "fnejacobianspectralnorm"]], "Featuring": [[60, "featuring"]], "Finding Help": [[60, "finding-help"]], "FixedPoint": [[117, "fixedpoint"]], "Forward operators": [[56, "forward-operators"]], "Functional": [[56, "functional"]], "GDIteration": [[139, "gditeration"]], "GSDRUNet": [[99, "gsdrunet"]], "GaussianMaskGenerator": [[191, "gaussianmaskgenerator"]], "GaussianMixtureModel": [[143, "gaussianmixturemodel"]], "GaussianNoise": [[153, "gaussiannoise"]], "General setup": [[9, "general-setup"]], "Generate a dataset of blurred images": [[3, "generate-a-dataset-of-blurred-images"]], "Generate a dataset of blurred images and load it.": [[16, "generate-a-dataset-of-blurred-images-and-load-it"], [22, "generate-a-dataset-of-blurred-images-and-load-it"]], "Generate a dataset of compressed measurements and load it.": [[41, "generate-a-dataset-of-compressed-measurements-and-load-it"], [42, "generate-a-dataset-of-compressed-measurements-and-load-it"]], "Generate a dataset of degraded images and load it.": [[4, "generate-a-dataset-of-degraded-images-and-load-it"]], "Generate a dataset of knee images and load it.": [[34, "generate-a-dataset-of-knee-images-and-load-it"]], "Generate a dataset of low resolution images and load it.": [[40, "generate-a-dataset-of-low-resolution-images-and-load-it"], [45, "generate-a-dataset-of-low-resolution-images-and-load-it"]], "Generate a dataset of noisy images": [[36, "generate-a-dataset-of-noisy-images"], [37, "generate-a-dataset-of-noisy-images"]], "Generate a dataset of subsampled images and load it.": [[35, "generate-a-dataset-of-subsampled-images-and-load-it"]], "Generate an inpainting problem": [[17, "generate-an-inpainting-problem"]], "Generate an inverse problem": [[29, "generate-an-inverse-problem"]], "Generate the measurement": [[5, "generate-the-measurement"], [27, "generate-the-measurement"], [28, "generate-the-measurement"], [31, "generate-the-measurement"]], "Generate toy image": [[8, "generate-toy-image"], [10, "generate-toy-image"]], "Generate toy signal and measurement": [[6, "generate-toy-signal-and-measurement"]], "GeneratorMixture": [[192, "generatormixture"]], "Generic Optimizers": [[54, "generic-optimizers"]], "Getting Started": [[60, "getting-started"]], "Groundtruth image": [[0, "groundtruth-image"]], "HD5Dataset": [[48, "hd5dataset"]], "HDF5Dataset": [[64, "hdf5dataset"]], "HQSIteration": [[140, "hqsiteration"]], "Haze": [[154, "haze"]], "Homography": [[206, "homography"]], "How to Contribute": [[47, "how-to-contribute"]], "IRadon": [[176, "iradon"]], "Image Datasets": [[48, "image-datasets"]], "Image deblurring with Total-Variation (TV) prior": [[16, "image-deblurring-with-total-variation-tv-prior"]], "Image deblurring with custom deep explicit prior.": [[3, "image-deblurring-with-custom-deep-explicit-prior"]], "Image inpainting with wavelet prior": [[17, "image-inpainting-with-wavelet-prior"]], "Image reconstruction with a diffusion model": [[28, "image-reconstruction-with-a-diffusion-model"]], "Image transformations for Equivariant Imaging": [[33, "image-transformations-for-equivariant-imaging"]], "Implementing DPS": [[30, "implementing-dps"]], "Implementing DiffPIR": [[29, "implementing-diffpir"]], "Implementing an Algorithm": [[50, "implementing-an-algorithm"]], "Import required packages": [[0, "import-required-packages"]], "IndicatorL2": [[118, "indicatorl2"]], "Inpainting": [[11, "inpainting"], [19, "inpainting"], [155, "inpainting"]], "Installation": [[60, "installation"]], "Introduction": [[51, "introduction"], [56, "introduction"]], "Iterating the Dykstra-like algorithm.": [[15, "iterating-the-dykstra-like-algorithm"]], "Iterative Reconstruction (PnP, RED, etc.)": [[50, "iterative-reconstruction-pnp-red-etc"]], "Iterators": [[54, "iterators"]], "JacobianSpectralNorm": [[70, "jacobianspectralnorm"]], "L1": [[119, "l1"]], "L1Prior": [[120, "l1prior"]], "L2": [[121, "l2"]], "LPIPS": [[71, "lpips"]], "Lead Developers": [[60, "lead-developers"]], "Learned Filtered Back-Projection": [[55, "learned-filtered-back-projection"]], "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing": [[41, "learned-iterative-soft-thresholding-algorithm-lista-for-compressed-sensing"]], "Learned Primal-Dual algorithm for CT scan.": [[43, "learned-primal-dual-algorithm-for-ct-scan"]], "Learned iterative custom prior": [[42, "learned-iterative-custom-prior"]], "Linear operators": [[56, "linear-operators"]], "LinearPhysics": [[156, "linearphysics"]], "List of mathematical symbols": [[53, "id1"]], "Load base image datasets": [[4, "load-base-image-datasets"], [36, "load-base-image-datasets"], [37, "load-base-image-datasets"]], "Load base image datasets and degradation operators.": [[3, "load-base-image-datasets-and-degradation-operators"], [12, "load-base-image-datasets-and-degradation-operators"], [16, "load-base-image-datasets-and-degradation-operators"], [17, "load-base-image-datasets-and-degradation-operators"], [22, "load-base-image-datasets-and-degradation-operators"], [23, "load-base-image-datasets-and-degradation-operators"], [24, "load-base-image-datasets-and-degradation-operators"], [34, "load-base-image-datasets-and-degradation-operators"], [35, "load-base-image-datasets-and-degradation-operators"], [40, "load-base-image-datasets-and-degradation-operators"], [41, "load-base-image-datasets-and-degradation-operators"], [42, "load-base-image-datasets-and-degradation-operators"], [44, "load-base-image-datasets-and-degradation-operators"], [45, "load-base-image-datasets-and-degradation-operators"]], "Load base volume image and denoising operators.": [[15, "load-base-volume-image-and-denoising-operators"]], "Load degradation operator.": [[43, "load-degradation-operator"]], "Load example image from the internet": [[28, "load-example-image-from-the-internet"]], "Load image and parameters": [[25, "load-image-and-parameters"]], "Load image from the internet": [[5, "load-image-from-the-internet"], [9, "load-image-from-the-internet"], [11, "load-image-from-the-internet"], [27, "load-image-from-the-internet"], [31, "load-image-from-the-internet"]], "Load test image and model": [[19, "load-test-image-and-model"]], "Load test images": [[2, "load-test-images"]], "Load training and test images": [[20, "load-training-and-test-images"]], "Loading the model": [[44, "loading-the-model"]], "LogPoissonLikelihood": [[122, "logpoissonlikelihood"]], "LogPoissonNoise": [[157, "logpoissonnoise"]], "Loss": [[51, "loss"], [72, "loss"]], "LpNorm": [[73, "lpnorm"]], "MCLoss": [[74, "mcloss"]], "MOILoss": [[75, "moiloss"]], "MRI": [[11, "mri"], [158, "mri"]], "Magnetic Resonance Imaging": [[56, "magnetic-resonance-imaging"]], "Markov Chain Monte Carlo Langevin": [[57, "markov-chain-monte-carlo-langevin"]], "Math Notation": [[53, "math-notation"]], "Measurements generation": [[9, "measurements-generation"]], "MedianFilter": [[100, "medianfilter"]], "Metrics": [[51, "metrics"]], "MonteCarlo": [[201, "montecarlo"]], "Motion blur generators": [[2, "motion-blur-generators"]], "MotionBlurGenerator": [[193, "motionblurgenerator"]], "NIQE": [[76, "niqe"]], "Natural weighting and Briggs weighting": [[0, "natural-weighting-and-briggs-weighting"]], "Neighbor2Neighbor": [[77, "neighbor2neighbor"]], "Network Regularization": [[51, "network-regularization"]], "Noise distributions": [[56, "noise-distributions"]], "Optim": [[54, "optim"]], "OptimIterator": [[123, "optimiterator"]], "Optimization": [[14, "optimization"]], "Other": [[59, "other"]], "Other Reconstruction Methods": [[55, "other-reconstruction-methods"]], "Overall comparison": [[9, "overall-comparison"]], "PDNet_DualBlock": [[101, "pdnet-dualblock"]], "PDNet_PrimalBlock": [[102, "pdnet-primalblock"]], "PGDIteration": [[141, "pgditeration"]], "PSNR": [[78, "psnr"]], "Pan-sharpening": [[11, "pan-sharpening"]], "PanTiltRotate": [[212, "pantiltrotate"]], "Pansharpen": [[159, "pansharpen"]], "Parameter-dependent operators": [[56, "parameter-dependent-operators"]], "Parameters": [[54, "parameters"]], "Patch Priors": [[14, "patch-priors"]], "Patch priors for limited-angle computed tomography": [[20, "patch-priors-for-limited-angle-computed-tomography"]], "PatchDataset": [[48, "patchdataset"], [65, "patchdataset"]], "PatchNR": [[124, "patchnr"]], "PatchPrior": [[125, "patchprior"]], "Phase correction and signal reconstruction": [[9, "phase-correction-and-signal-reconstruction"], [9, "id1"], [9, "id2"], [9, "id3"]], "Phase retrieval": [[56, "phase-retrieval"]], "PhaseRetrieval": [[160, "phaseretrieval"]], "Physics": [[56, "physics"], [161, "physics"]], "Physics Generators": [[56, "physics-generators"]], "PhysicsGenerator": [[194, "physicsgenerator"]], "Pixelwise operators": [[56, "pixelwise-operators"]], "Plotting": [[59, "plotting"]], "Plotting the learned parameters.": [[41, "plotting-the-learned-parameters"]], "Plotting the trained parameters.": [[45, "plotting-the-trained-parameters"]], "Plotting the weights of the network.": [[42, "plotting-the-weights-of-the-network"]], "Plug-and-Play": [[14, "plug-and-play"]], "PnP": [[126, "pnp"]], "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)": [[23, "pnp-with-custom-optimization-algorithm-condat-vu-primal-dual"]], "PoissonGaussianNoise": [[162, "poissongaussiannoise"]], "PoissonLikelihood": [[127, "poissonlikelihood"]], "PoissonNoise": [[163, "poissonnoise"]], "Predefined Iterative Algorithms": [[50, "predefined-iterative-algorithms"]], "Pretrained Weights": [[49, "pretrained-weights"]], "Prior": [[128, "prior"]], "Priors": [[54, "priors"]], "Putting it all together: the DiffPIR algorithm": [[29, "putting-it-all-together-the-diffpir-algorithm"]], "R2RLoss": [[79, "r2rloss"]], "RED": [[129, "red"]], "Radio interferometric imaging": [[56, "radio-interferometric-imaging"]], "Radio interferometric imaging with deepinverse": [[0, "radio-interferometric-imaging-with-deepinverse"]], "RadioInterferometry": [[164, "radiointerferometry"]], "Radon": [[177, "radon"]], "Random phase retrieval and reconstruction methods.": [[9, "random-phase-retrieval-and-reconstruction-methods"]], "RandomMaskGenerator": [[195, "randommaskgenerator"]], "RandomPhaseRetrieval": [[165, "randomphaseretrieval"]], "Reconstructing an image using the deep image prior.": [[5, "reconstructing-an-image-using-the-deep-image-prior"]], "Reconstruction loop": [[20, "reconstruction-loop"]], "Reconstruction with gradient descent and PnP denoisers": [[9, "reconstruction-with-gradient-descent-and-pnp-denoisers"]], "Reconstruction with gradient descent and random initialization": [[9, "reconstruction-with-gradient-descent-and-random-initialization"]], "Reconstruction with gradient descent and spectral methods initialization": [[9, "reconstruction-with-gradient-descent-and-spectral-methods-initialization"]], "Reconstruction with spectral methods": [[9, "reconstruction-with-spectral-methods"]], "Regularization by Denoising (RED) for Super-Resolution.": [[24, "regularization-by-denoising-red-for-super-resolution"]], "Remote Sensing": [[56, "remote-sensing"]], "Restormer": [[103, "restormer"]], "Rotate": [[207, "rotate"]], "Run DIP algorithm and plot results": [[5, "run-dip-algorithm-and-plot-results"]], "Run and plot": [[20, "run-and-plot"]], "Run sampling algorithm and plot results": [[28, "run-sampling-algorithm-and-plot-results"], [31, "run-sampling-algorithm-and-plot-results"]], "Run sampling algorithms and plot results": [[27, "run-sampling-algorithms-and-plot-results"]], "Run the diffusion algorithm and plot results": [[28, "run-the-diffusion-algorithm-and-plot-results"]], "SCUNet": [[104, "scunet"]], "SKRock": [[202, "skrock"]], "SMIteration": [[142, "smiteration"]], "SSIM": [[80, "ssim"]], "Sampling": [[14, "sampling"]], "Sampling pattern": [[0, "sampling-pattern"]], "Sampling step": [[29, "sampling-step"]], "Saving and loading models": [[7, "saving-and-loading-models"]], "Saving the model": [[44, "saving-the-model"]], "Scale": [[208, "scale"]], "ScorePrior": [[130, "scoreprior"]], "Self-Supervised Learning": [[14, "self-supervised-learning"], [51, "self-supervised-learning"]], "Self-supervised denoising with the Neighbor2Neighbor loss.": [[36, "self-supervised-denoising-with-the-neighbor2neighbor-loss"]], "Self-supervised denoising with the SURE loss.": [[37, "self-supervised-denoising-with-the-sure-loss"]], "Self-supervised learning from incomplete measurements of multiple operators.": [[35, "self-supervised-learning-from-incomplete-measurements-of-multiple-operators"]], "Self-supervised learning with Equivariant Imaging for MRI.": [[34, "self-supervised-learning-with-equivariant-imaging-for-mri"]], "Set parameters for EPLL and PatchNR": [[20, "set-parameters-for-epll-and-patchnr"]], "Set the forward operator": [[23, "set-the-forward-operator"], [25, "set-the-forward-operator"]], "Set up the DPIR algorithm to solve the inverse problem.": [[22, "set-up-the-dpir-algorithm-to-solve-the-inverse-problem"]], "Set up the PnP algorithm to solve the inverse problem.": [[23, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"], [25, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"]], "Set up the denoiser network": [[36, "set-up-the-denoiser-network"], [37, "set-up-the-denoiser-network"]], "Set up the optimization algorithm to solve the inverse problem.": [[3, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [16, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [17, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"]], "Set up the reconstruction network": [[12, "set-up-the-reconstruction-network"], [34, "set-up-the-reconstruction-network"], [35, "set-up-the-reconstruction-network"], [44, "set-up-the-reconstruction-network"]], "Set up the training parameters": [[34, "set-up-the-training-parameters"], [35, "set-up-the-training-parameters"], [36, "set-up-the-training-parameters"], [37, "set-up-the-training-parameters"]], "Setup paths for data loading and results.": [[3, "setup-paths-for-data-loading-and-results"], [4, "setup-paths-for-data-loading-and-results"], [7, "setup-paths-for-data-loading-and-results"], [12, "setup-paths-for-data-loading-and-results"], [15, "setup-paths-for-data-loading-and-results"], [16, "setup-paths-for-data-loading-and-results"], [17, "setup-paths-for-data-loading-and-results"], [22, "setup-paths-for-data-loading-and-results"], [23, "setup-paths-for-data-loading-and-results"], [24, "setup-paths-for-data-loading-and-results"], [25, "setup-paths-for-data-loading-and-results"], [34, "setup-paths-for-data-loading-and-results"], [35, "setup-paths-for-data-loading-and-results"], [36, "setup-paths-for-data-loading-and-results"], [37, "setup-paths-for-data-loading-and-results"], [40, "setup-paths-for-data-loading-and-results"], [41, "setup-paths-for-data-loading-and-results"], [42, "setup-paths-for-data-loading-and-results"], [43, "setup-paths-for-data-loading-and-results"], [44, "setup-paths-for-data-loading-and-results"], [45, "setup-paths-for-data-loading-and-results"]], "Setup the PnP algorithm. This involves in particular the definition of a custom prior class.": [[24, "setup-the-pnp-algorithm-this-involves-in-particular-the-definition-of-a-custom-prior-class"]], "Shift": [[209, "shift"]], "SigmaGenerator": [[196, "sigmagenerator"]], "Signal construction": [[9, "signal-construction"]], "Similarity": [[213, "similarity"]], "Simulating the measurements": [[0, "simulating-the-measurements"]], "Single photon lidar operator for depth ranging.": [[6, "single-photon-lidar-operator-for-depth-ranging"]], "Single-Pixel Camera": [[11, "single-pixel-camera"]], "Single-photon lidar": [[56, "single-photon-lidar"]], "SinglePhotonLidar": [[166, "singlephotonlidar"]], "SinglePixelCamera": [[167, "singlepixelcamera"]], "Solving the problem with a wavelet prior": [[0, "solving-the-problem-with-a-wavelet-prior"]], "SpaceVaryingBlur": [[168, "spacevaryingblur"]], "SplittingLoss": [[81, "splittingloss"]], "Stacking and concatenating forward operators.": [[8, "stacking-and-concatenating-forward-operators"]], "Stacking forward operators.": [[8, "stacking-forward-operators"]], "Summary of pretrained weights": [[49, "id13"]], "SupLoss": [[82, "suploss"]], "Super-Resolution": [[11, "super-resolution"]], "Supervised Learning": [[51, "supervised-learning"]], "SureGaussianLoss": [[83, "suregaussianloss"]], "SurePGLoss": [[84, "surepgloss"]], "SurePoissonLoss": [[85, "surepoissonloss"]], "SwinIR": [[105, "swinir"]], "TGVDenoiser": [[106, "tgvdenoiser"]], "TVDenoiser": [[107, "tvdenoiser"]], "TVLoss": [[86, "tvloss"]], "TVPrior": [[131, "tvprior"]], "TensorList": [[59, "tensorlist"], [218, "tensorlist"]], "Test the network": [[12, "test-the-network"], [34, "test-the-network"], [35, "test-the-network"], [36, "test-the-network"], [37, "test-the-network"], [40, "test-the-network"], [43, "test-the-network"], [44, "test-the-network"], [45, "test-the-network"]], "Test the network.": [[41, "test-the-network"], [42, "test-the-network"]], "The DPS algorithm": [[30, "the-dps-algorithm"]], "The DiffPIR algorithm": [[29, "the-diffpir-algorithm"]], "The RI measurement operator": [[0, "the-ri-measurement-operator"]], "Tikhonov": [[132, "tikhonov"]], "Tomography": [[56, "tomography"], [169, "tomography"]], "Train the model": [[12, "train-the-model"], [44, "train-the-model"]], "Train the network": [[34, "train-the-network"], [35, "train-the-network"], [36, "train-the-network"], [37, "train-the-network"], [40, "train-the-network"], [43, "train-the-network"], [45, "train-the-network"]], "Train the network.": [[41, "train-the-network"], [42, "train-the-network"]], "Trainer": [[62, "trainer"]], "Training / EM algorithm": [[20, "training-em-algorithm"]], "Training a reconstruction network.": [[12, "training-a-reconstruction-network"]], "Training and Testing": [[59, "training-and-testing"]], "Training dataset of random phantoms.": [[43, "training-dataset-of-random-phantoms"]], "Transforms": [[51, "transforms"]], "ULA": [[203, "ula"]], "UNet": [[108, "unet"]], "Uncertainty quantification with PnP-ULA.": [[31, "uncertainty-quantification-with-pnp-ula"]], "Unfolded": [[14, "unfolded"], [58, "id1"]], "Unfolded Algorithms": [[58, "unfolded-algorithms"]], "Unfolded Chambolle-Pock for constrained image inpainting": [[44, "unfolded-chambolle-pock-for-constrained-image-inpainting"]], "UniformGaussianNoise": [[170, "uniformgaussiannoise"]], "UniformNoise": [[171, "uniformnoise"]], "Urban100HR": [[66, "urban100hr"]], "Using DPS in your inverse problem": [[30, "using-dps-in-your-inverse-problem"]], "Using multiple GPUs": [[52, "using-multiple-gpus"]], "Using the DiffPIR algorithm in your inverse problem": [[29, "using-the-diffpir-algorithm-in-your-inverse-problem"]], "Using the Dykstra-like algorithm for wavelet denoising.": [[15, "using-the-dykstra-like-algorithm-for-wavelet-denoising"]], "Utils": [[51, "utils"], [54, "utils"], [58, "utils"], [59, "utils"]], "Vanilla PnP for computed tomography (CT).": [[25, "vanilla-pnp-for-computed-tomography-ct"]], "Vanilla Unfolded algorithm for super-resolution": [[45, "vanilla-unfolded-algorithm-for-super-resolution"]], "Verifying our linear operator": [[10, "verifying-our-linear-operator"]], "Verifying the concatenated operator": [[8, "verifying-the-concatenated-operator"]], "Verifying the stacked operator": [[8, "verifying-the-stacked-operator"]], "Visualization": [[9, "visualization"]], "WaveletDenoiser": [[109, "waveletdenoiser"]], "WaveletDictDenoiser": [[110, "waveletdictdenoiser"]], "WaveletPrior": [[133, "waveletprior"]], "adjoint_function": [[172, "adjoint-function"]], "bicubic_filter": [[173, "bicubic-filter"]], "bilinear_filter": [[174, "bilinear-filter"]], "cal_psnr": [[219, "cal-psnr"]], "conjugate_gradient": [[144, "conjugate-gradient"]], "conv2d": [[178, "conv2d"]], "conv2d_fft": [[179, "conv2d-fft"]], "conv3d": [[180, "conv3d"]], "conv_transpose2d": [[181, "conv-transpose2d"]], "conv_transpose2d_fft": [[182, "conv-transpose2d-fft"]], "conv_transpose3d": [[183, "conv-transpose3d"]], "gaussian_blur": [[175, "gaussian-blur"]], "generate_dataset": [[67, "generate-dataset"]], "get_freer_gpu": [[220, "get-freer-gpu"]], "gradient_descent": [[145, "gradient-descent"]], "histogram": [[184, "histogram"]], "histogramdd": [[185, "histogramdd"]], "load_url_image": [[221, "load-url-image"]], "multiplier": [[186, "multiplier"]], "multiplier_adjoint": [[187, "multiplier-adjoint"]], "ones_like": [[222, "ones-like"]], "optim_builder": [[134, "optim-builder"]], "plot": [[223, "plot"]], "plot_curves": [[224, "plot-curves"]], "plot_inset": [[225, "plot-inset"]], "plot_parameters": [[226, "plot-parameters"]], "product_convolution2d": [[188, "product-convolution2d"]], "r2r_eval": [[87, "r2r-eval"]], "rand_like": [[227, "rand-like"]], "randn_like": [[228, "randn-like"]], "splitting_eval": [[88, "splitting-eval"]], "test": [[204, "test"]], "to_complex_denoiser": [[111, "to-complex-denoiser"]], "train": [[205, "train"]], "unfolded_builder": [[217, "unfolded-builder"]], "zeros_like": [[229, "zeros-like"]]}, "docnames": ["auto_examples/advanced/demo_ri_basic", "auto_examples/advanced/sg_execution_times", "auto_examples/basics/demo_blur_tour", "auto_examples/basics/demo_custom_prior", "auto_examples/basics/demo_dataset", "auto_examples/basics/demo_dip", "auto_examples/basics/demo_lidar", "auto_examples/basics/demo_loading", "auto_examples/basics/demo_pansharpening", "auto_examples/basics/demo_phase_retrieval", "auto_examples/basics/demo_physics", "auto_examples/basics/demo_physics_tour", "auto_examples/basics/demo_train_inpainting", "auto_examples/basics/sg_execution_times", "auto_examples/index", "auto_examples/optimization/demo_3D_wavelets", "auto_examples/optimization/demo_TV_minimisation", "auto_examples/optimization/demo_wavelet_prior", "auto_examples/optimization/sg_execution_times", "auto_examples/patch-priors/demo_epll", "auto_examples/patch-priors/demo_patch_priors_CT", "auto_examples/patch-priors/sg_execution_times", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur", "auto_examples/plug-and-play/demo_PnP_custom_optim", "auto_examples/plug-and-play/demo_RED_GSPnP_SR", "auto_examples/plug-and-play/demo_vanilla_PnP", "auto_examples/plug-and-play/sg_execution_times", "auto_examples/sampling/demo_custom_kernel", "auto_examples/sampling/demo_ddrm", "auto_examples/sampling/demo_diffpir", "auto_examples/sampling/demo_dps", "auto_examples/sampling/demo_sampling", "auto_examples/sampling/sg_execution_times", "auto_examples/self-supervised-learning/demo_ei_transforms", "auto_examples/self-supervised-learning/demo_equivariant_imaging", "auto_examples/self-supervised-learning/demo_multioperator_imaging", "auto_examples/self-supervised-learning/demo_n2n_denoising", "auto_examples/self-supervised-learning/demo_sure_denoising", "auto_examples/self-supervised-learning/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/unfolded/demo_DEQ", "auto_examples/unfolded/demo_LISTA", "auto_examples/unfolded/demo_custom_prior_unfolded", "auto_examples/unfolded/demo_learned_primal_dual", "auto_examples/unfolded/demo_unfolded_constrained_LISTA", "auto_examples/unfolded/demo_vanilla_unfolded", "auto_examples/unfolded/sg_execution_times", "deepinv.contributing", "deepinv.datasets", "deepinv.denoisers", "deepinv.iterative", "deepinv.loss", "deepinv.multigpu", "deepinv.notation", "deepinv.optim", "deepinv.other_models", "deepinv.physics", "deepinv.sampling", "deepinv.unfolded", "deepinv.utils", "index", "sg_execution_times", "stubs/deepinv.Trainer", "stubs/deepinv.datasets.DIV2K", "stubs/deepinv.datasets.HDF5Dataset", "stubs/deepinv.datasets.PatchDataset", "stubs/deepinv.datasets.Urban100HR", "stubs/deepinv.datasets.generate_dataset", "stubs/deepinv.loss.EILoss", "stubs/deepinv.loss.FNEJacobianSpectralNorm", "stubs/deepinv.loss.JacobianSpectralNorm", "stubs/deepinv.loss.LPIPS", "stubs/deepinv.loss.Loss", "stubs/deepinv.loss.LpNorm", "stubs/deepinv.loss.MCLoss", "stubs/deepinv.loss.MOILoss", "stubs/deepinv.loss.NIQE", "stubs/deepinv.loss.Neighbor2Neighbor", "stubs/deepinv.loss.PSNR", "stubs/deepinv.loss.R2RLoss", "stubs/deepinv.loss.SSIM", "stubs/deepinv.loss.SplittingLoss", "stubs/deepinv.loss.SupLoss", "stubs/deepinv.loss.SureGaussianLoss", "stubs/deepinv.loss.SurePGLoss", "stubs/deepinv.loss.SurePoissonLoss", "stubs/deepinv.loss.TVLoss", "stubs/deepinv.loss.r2r_eval", "stubs/deepinv.loss.splitting_eval", "stubs/deepinv.models.ArtifactRemoval", "stubs/deepinv.models.AutoEncoder", "stubs/deepinv.models.BM3D", "stubs/deepinv.models.ConvDecoder", "stubs/deepinv.models.DRUNet", "stubs/deepinv.models.DeepImagePrior", "stubs/deepinv.models.DiffUNet", "stubs/deepinv.models.DnCNN", "stubs/deepinv.models.EPLLDenoiser", "stubs/deepinv.models.EquivariantDenoiser", "stubs/deepinv.models.GSDRUNet", "stubs/deepinv.models.MedianFilter", "stubs/deepinv.models.PDNet_DualBlock", "stubs/deepinv.models.PDNet_PrimalBlock", "stubs/deepinv.models.Restormer", "stubs/deepinv.models.SCUNet", "stubs/deepinv.models.SwinIR", "stubs/deepinv.models.TGVDenoiser", "stubs/deepinv.models.TVDenoiser", "stubs/deepinv.models.UNet", "stubs/deepinv.models.WaveletDenoiser", "stubs/deepinv.models.WaveletDictDenoiser", "stubs/deepinv.models.complex.to_complex_denoiser", "stubs/deepinv.optim.AmplitudeLoss", "stubs/deepinv.optim.BaseOptim", "stubs/deepinv.optim.DPIR", "stubs/deepinv.optim.DataFidelity", "stubs/deepinv.optim.EPLL", "stubs/deepinv.optim.FixedPoint", "stubs/deepinv.optim.IndicatorL2", "stubs/deepinv.optim.L1", "stubs/deepinv.optim.L1Prior", "stubs/deepinv.optim.L2", "stubs/deepinv.optim.LogPoissonLikelihood", "stubs/deepinv.optim.OptimIterator", "stubs/deepinv.optim.PatchNR", "stubs/deepinv.optim.PatchPrior", "stubs/deepinv.optim.PnP", "stubs/deepinv.optim.PoissonLikelihood", "stubs/deepinv.optim.Prior", "stubs/deepinv.optim.RED", "stubs/deepinv.optim.ScorePrior", "stubs/deepinv.optim.TVPrior", "stubs/deepinv.optim.Tikhonov", "stubs/deepinv.optim.WaveletPrior", "stubs/deepinv.optim.optim_builder", "stubs/deepinv.optim.optim_iterators.ADMMIteration", "stubs/deepinv.optim.optim_iterators.CPIteration", "stubs/deepinv.optim.optim_iterators.DRSIteration", "stubs/deepinv.optim.optim_iterators.FISTAIteration", "stubs/deepinv.optim.optim_iterators.GDIteration", "stubs/deepinv.optim.optim_iterators.HQSIteration", "stubs/deepinv.optim.optim_iterators.PGDIteration", "stubs/deepinv.optim.optim_iterators.SMIteration", "stubs/deepinv.optim.utils.GaussianMixtureModel", "stubs/deepinv.optim.utils.conjugate_gradient", "stubs/deepinv.optim.utils.gradient_descent", "stubs/deepinv.physics.Blur", "stubs/deepinv.physics.BlurFFT", "stubs/deepinv.physics.CompressedSensing", "stubs/deepinv.physics.Decolorize", "stubs/deepinv.physics.DecomposablePhysics", "stubs/deepinv.physics.Denoising", "stubs/deepinv.physics.Downsampling", "stubs/deepinv.physics.GaussianNoise", "stubs/deepinv.physics.Haze", "stubs/deepinv.physics.Inpainting", "stubs/deepinv.physics.LinearPhysics", "stubs/deepinv.physics.LogPoissonNoise", "stubs/deepinv.physics.MRI", "stubs/deepinv.physics.Pansharpen", "stubs/deepinv.physics.PhaseRetrieval", "stubs/deepinv.physics.Physics", "stubs/deepinv.physics.PoissonGaussianNoise", "stubs/deepinv.physics.PoissonNoise", "stubs/deepinv.physics.RadioInterferometry", "stubs/deepinv.physics.RandomPhaseRetrieval", "stubs/deepinv.physics.SinglePhotonLidar", "stubs/deepinv.physics.SinglePixelCamera", "stubs/deepinv.physics.SpaceVaryingBlur", "stubs/deepinv.physics.Tomography", "stubs/deepinv.physics.UniformGaussianNoise", "stubs/deepinv.physics.UniformNoise", "stubs/deepinv.physics.adjoint_function", "stubs/deepinv.physics.blur.bicubic_filter", "stubs/deepinv.physics.blur.bilinear_filter", "stubs/deepinv.physics.blur.gaussian_blur", "stubs/deepinv.physics.functional.IRadon", "stubs/deepinv.physics.functional.Radon", "stubs/deepinv.physics.functional.conv2d", "stubs/deepinv.physics.functional.conv2d_fft", "stubs/deepinv.physics.functional.conv3d", "stubs/deepinv.physics.functional.conv_transpose2d", "stubs/deepinv.physics.functional.conv_transpose2d_fft", "stubs/deepinv.physics.functional.conv_transpose3d", "stubs/deepinv.physics.functional.histogram", "stubs/deepinv.physics.functional.histogramdd", "stubs/deepinv.physics.functional.multiplier", "stubs/deepinv.physics.functional.multiplier_adjoint", "stubs/deepinv.physics.functional.product_convolution2d", "stubs/deepinv.physics.generator.DiffractionBlurGenerator", "stubs/deepinv.physics.generator.EquispacedMaskGenerator", "stubs/deepinv.physics.generator.GaussianMaskGenerator", "stubs/deepinv.physics.generator.GeneratorMixture", "stubs/deepinv.physics.generator.MotionBlurGenerator", "stubs/deepinv.physics.generator.PhysicsGenerator", "stubs/deepinv.physics.generator.RandomMaskGenerator", "stubs/deepinv.physics.generator.SigmaGenerator", "stubs/deepinv.sampling.DDRM", "stubs/deepinv.sampling.DPS", "stubs/deepinv.sampling.DiffPIR", "stubs/deepinv.sampling.DiffusionSampler", "stubs/deepinv.sampling.MonteCarlo", "stubs/deepinv.sampling.SKRock", "stubs/deepinv.sampling.ULA", "stubs/deepinv.test", "stubs/deepinv.train", "stubs/deepinv.transform.Homography", "stubs/deepinv.transform.Rotate", "stubs/deepinv.transform.Scale", "stubs/deepinv.transform.Shift", "stubs/deepinv.transform.projective.Affine", "stubs/deepinv.transform.projective.Euclidean", "stubs/deepinv.transform.projective.PanTiltRotate", "stubs/deepinv.transform.projective.Similarity", "stubs/deepinv.unfolded.BaseDEQ", "stubs/deepinv.unfolded.BaseUnfold", "stubs/deepinv.unfolded.DEQ_builder", "stubs/deepinv.unfolded.unfolded_builder", "stubs/deepinv.utils.TensorList", "stubs/deepinv.utils.cal_psnr", "stubs/deepinv.utils.get_freer_gpu", "stubs/deepinv.utils.load_url_image", "stubs/deepinv.utils.ones_like", "stubs/deepinv.utils.plot", "stubs/deepinv.utils.plot_curves", "stubs/deepinv.utils.plot_inset", "stubs/deepinv.utils.plot_parameters", "stubs/deepinv.utils.rand_like", "stubs/deepinv.utils.randn_like", "stubs/deepinv.utils.zeros_like"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["auto_examples/advanced/demo_ri_basic.rst", "auto_examples/advanced/sg_execution_times.rst", "auto_examples/basics/demo_blur_tour.rst", "auto_examples/basics/demo_custom_prior.rst", "auto_examples/basics/demo_dataset.rst", "auto_examples/basics/demo_dip.rst", "auto_examples/basics/demo_lidar.rst", "auto_examples/basics/demo_loading.rst", "auto_examples/basics/demo_pansharpening.rst", "auto_examples/basics/demo_phase_retrieval.rst", "auto_examples/basics/demo_physics.rst", "auto_examples/basics/demo_physics_tour.rst", "auto_examples/basics/demo_train_inpainting.rst", "auto_examples/basics/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/optimization/demo_3D_wavelets.rst", "auto_examples/optimization/demo_TV_minimisation.rst", "auto_examples/optimization/demo_wavelet_prior.rst", "auto_examples/optimization/sg_execution_times.rst", "auto_examples/patch-priors/demo_epll.rst", "auto_examples/patch-priors/demo_patch_priors_CT.rst", "auto_examples/patch-priors/sg_execution_times.rst", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur.rst", "auto_examples/plug-and-play/demo_PnP_custom_optim.rst", "auto_examples/plug-and-play/demo_RED_GSPnP_SR.rst", "auto_examples/plug-and-play/demo_vanilla_PnP.rst", "auto_examples/plug-and-play/sg_execution_times.rst", "auto_examples/sampling/demo_custom_kernel.rst", "auto_examples/sampling/demo_ddrm.rst", "auto_examples/sampling/demo_diffpir.rst", "auto_examples/sampling/demo_dps.rst", "auto_examples/sampling/demo_sampling.rst", "auto_examples/sampling/sg_execution_times.rst", "auto_examples/self-supervised-learning/demo_ei_transforms.rst", "auto_examples/self-supervised-learning/demo_equivariant_imaging.rst", "auto_examples/self-supervised-learning/demo_multioperator_imaging.rst", "auto_examples/self-supervised-learning/demo_n2n_denoising.rst", "auto_examples/self-supervised-learning/demo_sure_denoising.rst", "auto_examples/self-supervised-learning/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/unfolded/demo_DEQ.rst", "auto_examples/unfolded/demo_LISTA.rst", "auto_examples/unfolded/demo_custom_prior_unfolded.rst", "auto_examples/unfolded/demo_learned_primal_dual.rst", "auto_examples/unfolded/demo_unfolded_constrained_LISTA.rst", "auto_examples/unfolded/demo_vanilla_unfolded.rst", "auto_examples/unfolded/sg_execution_times.rst", "deepinv.contributing.rst", "deepinv.datasets.rst", "deepinv.denoisers.rst", "deepinv.iterative.rst", "deepinv.loss.rst", "deepinv.multigpu.rst", "deepinv.notation.rst", "deepinv.optim.rst", "deepinv.other_models.rst", "deepinv.physics.rst", "deepinv.sampling.rst", "deepinv.unfolded.rst", "deepinv.utils.rst", "index.rst", "sg_execution_times.rst", "stubs/deepinv.Trainer.rst", "stubs/deepinv.datasets.DIV2K.rst", "stubs/deepinv.datasets.HDF5Dataset.rst", "stubs/deepinv.datasets.PatchDataset.rst", "stubs/deepinv.datasets.Urban100HR.rst", "stubs/deepinv.datasets.generate_dataset.rst", "stubs/deepinv.loss.EILoss.rst", "stubs/deepinv.loss.FNEJacobianSpectralNorm.rst", "stubs/deepinv.loss.JacobianSpectralNorm.rst", "stubs/deepinv.loss.LPIPS.rst", "stubs/deepinv.loss.Loss.rst", "stubs/deepinv.loss.LpNorm.rst", "stubs/deepinv.loss.MCLoss.rst", "stubs/deepinv.loss.MOILoss.rst", "stubs/deepinv.loss.NIQE.rst", "stubs/deepinv.loss.Neighbor2Neighbor.rst", "stubs/deepinv.loss.PSNR.rst", "stubs/deepinv.loss.R2RLoss.rst", "stubs/deepinv.loss.SSIM.rst", "stubs/deepinv.loss.SplittingLoss.rst", "stubs/deepinv.loss.SupLoss.rst", "stubs/deepinv.loss.SureGaussianLoss.rst", "stubs/deepinv.loss.SurePGLoss.rst", "stubs/deepinv.loss.SurePoissonLoss.rst", "stubs/deepinv.loss.TVLoss.rst", "stubs/deepinv.loss.r2r_eval.rst", "stubs/deepinv.loss.splitting_eval.rst", "stubs/deepinv.models.ArtifactRemoval.rst", "stubs/deepinv.models.AutoEncoder.rst", "stubs/deepinv.models.BM3D.rst", "stubs/deepinv.models.ConvDecoder.rst", "stubs/deepinv.models.DRUNet.rst", "stubs/deepinv.models.DeepImagePrior.rst", "stubs/deepinv.models.DiffUNet.rst", "stubs/deepinv.models.DnCNN.rst", "stubs/deepinv.models.EPLLDenoiser.rst", "stubs/deepinv.models.EquivariantDenoiser.rst", "stubs/deepinv.models.GSDRUNet.rst", "stubs/deepinv.models.MedianFilter.rst", "stubs/deepinv.models.PDNet_DualBlock.rst", "stubs/deepinv.models.PDNet_PrimalBlock.rst", "stubs/deepinv.models.Restormer.rst", "stubs/deepinv.models.SCUNet.rst", "stubs/deepinv.models.SwinIR.rst", "stubs/deepinv.models.TGVDenoiser.rst", "stubs/deepinv.models.TVDenoiser.rst", "stubs/deepinv.models.UNet.rst", "stubs/deepinv.models.WaveletDenoiser.rst", "stubs/deepinv.models.WaveletDictDenoiser.rst", "stubs/deepinv.models.complex.to_complex_denoiser.rst", "stubs/deepinv.optim.AmplitudeLoss.rst", "stubs/deepinv.optim.BaseOptim.rst", "stubs/deepinv.optim.DPIR.rst", "stubs/deepinv.optim.DataFidelity.rst", "stubs/deepinv.optim.EPLL.rst", "stubs/deepinv.optim.FixedPoint.rst", "stubs/deepinv.optim.IndicatorL2.rst", "stubs/deepinv.optim.L1.rst", "stubs/deepinv.optim.L1Prior.rst", "stubs/deepinv.optim.L2.rst", "stubs/deepinv.optim.LogPoissonLikelihood.rst", "stubs/deepinv.optim.OptimIterator.rst", "stubs/deepinv.optim.PatchNR.rst", "stubs/deepinv.optim.PatchPrior.rst", "stubs/deepinv.optim.PnP.rst", "stubs/deepinv.optim.PoissonLikelihood.rst", "stubs/deepinv.optim.Prior.rst", "stubs/deepinv.optim.RED.rst", "stubs/deepinv.optim.ScorePrior.rst", "stubs/deepinv.optim.TVPrior.rst", "stubs/deepinv.optim.Tikhonov.rst", "stubs/deepinv.optim.WaveletPrior.rst", "stubs/deepinv.optim.optim_builder.rst", "stubs/deepinv.optim.optim_iterators.ADMMIteration.rst", "stubs/deepinv.optim.optim_iterators.CPIteration.rst", "stubs/deepinv.optim.optim_iterators.DRSIteration.rst", "stubs/deepinv.optim.optim_iterators.FISTAIteration.rst", "stubs/deepinv.optim.optim_iterators.GDIteration.rst", "stubs/deepinv.optim.optim_iterators.HQSIteration.rst", "stubs/deepinv.optim.optim_iterators.PGDIteration.rst", "stubs/deepinv.optim.optim_iterators.SMIteration.rst", "stubs/deepinv.optim.utils.GaussianMixtureModel.rst", "stubs/deepinv.optim.utils.conjugate_gradient.rst", "stubs/deepinv.optim.utils.gradient_descent.rst", "stubs/deepinv.physics.Blur.rst", "stubs/deepinv.physics.BlurFFT.rst", "stubs/deepinv.physics.CompressedSensing.rst", "stubs/deepinv.physics.Decolorize.rst", "stubs/deepinv.physics.DecomposablePhysics.rst", "stubs/deepinv.physics.Denoising.rst", "stubs/deepinv.physics.Downsampling.rst", "stubs/deepinv.physics.GaussianNoise.rst", "stubs/deepinv.physics.Haze.rst", "stubs/deepinv.physics.Inpainting.rst", "stubs/deepinv.physics.LinearPhysics.rst", "stubs/deepinv.physics.LogPoissonNoise.rst", "stubs/deepinv.physics.MRI.rst", "stubs/deepinv.physics.Pansharpen.rst", "stubs/deepinv.physics.PhaseRetrieval.rst", "stubs/deepinv.physics.Physics.rst", "stubs/deepinv.physics.PoissonGaussianNoise.rst", "stubs/deepinv.physics.PoissonNoise.rst", "stubs/deepinv.physics.RadioInterferometry.rst", "stubs/deepinv.physics.RandomPhaseRetrieval.rst", "stubs/deepinv.physics.SinglePhotonLidar.rst", "stubs/deepinv.physics.SinglePixelCamera.rst", "stubs/deepinv.physics.SpaceVaryingBlur.rst", "stubs/deepinv.physics.Tomography.rst", "stubs/deepinv.physics.UniformGaussianNoise.rst", "stubs/deepinv.physics.UniformNoise.rst", "stubs/deepinv.physics.adjoint_function.rst", "stubs/deepinv.physics.blur.bicubic_filter.rst", "stubs/deepinv.physics.blur.bilinear_filter.rst", "stubs/deepinv.physics.blur.gaussian_blur.rst", "stubs/deepinv.physics.functional.IRadon.rst", "stubs/deepinv.physics.functional.Radon.rst", "stubs/deepinv.physics.functional.conv2d.rst", "stubs/deepinv.physics.functional.conv2d_fft.rst", "stubs/deepinv.physics.functional.conv3d.rst", "stubs/deepinv.physics.functional.conv_transpose2d.rst", "stubs/deepinv.physics.functional.conv_transpose2d_fft.rst", "stubs/deepinv.physics.functional.conv_transpose3d.rst", "stubs/deepinv.physics.functional.histogram.rst", "stubs/deepinv.physics.functional.histogramdd.rst", "stubs/deepinv.physics.functional.multiplier.rst", "stubs/deepinv.physics.functional.multiplier_adjoint.rst", "stubs/deepinv.physics.functional.product_convolution2d.rst", "stubs/deepinv.physics.generator.DiffractionBlurGenerator.rst", "stubs/deepinv.physics.generator.EquispacedMaskGenerator.rst", "stubs/deepinv.physics.generator.GaussianMaskGenerator.rst", "stubs/deepinv.physics.generator.GeneratorMixture.rst", "stubs/deepinv.physics.generator.MotionBlurGenerator.rst", "stubs/deepinv.physics.generator.PhysicsGenerator.rst", "stubs/deepinv.physics.generator.RandomMaskGenerator.rst", "stubs/deepinv.physics.generator.SigmaGenerator.rst", "stubs/deepinv.sampling.DDRM.rst", "stubs/deepinv.sampling.DPS.rst", "stubs/deepinv.sampling.DiffPIR.rst", "stubs/deepinv.sampling.DiffusionSampler.rst", "stubs/deepinv.sampling.MonteCarlo.rst", "stubs/deepinv.sampling.SKRock.rst", "stubs/deepinv.sampling.ULA.rst", "stubs/deepinv.test.rst", "stubs/deepinv.train.rst", "stubs/deepinv.transform.Homography.rst", "stubs/deepinv.transform.Rotate.rst", "stubs/deepinv.transform.Scale.rst", "stubs/deepinv.transform.Shift.rst", "stubs/deepinv.transform.projective.Affine.rst", "stubs/deepinv.transform.projective.Euclidean.rst", "stubs/deepinv.transform.projective.PanTiltRotate.rst", "stubs/deepinv.transform.projective.Similarity.rst", "stubs/deepinv.unfolded.BaseDEQ.rst", "stubs/deepinv.unfolded.BaseUnfold.rst", "stubs/deepinv.unfolded.DEQ_builder.rst", "stubs/deepinv.unfolded.unfolded_builder.rst", "stubs/deepinv.utils.TensorList.rst", "stubs/deepinv.utils.cal_psnr.rst", "stubs/deepinv.utils.get_freer_gpu.rst", "stubs/deepinv.utils.load_url_image.rst", "stubs/deepinv.utils.ones_like.rst", "stubs/deepinv.utils.plot.rst", "stubs/deepinv.utils.plot_curves.rst", "stubs/deepinv.utils.plot_inset.rst", "stubs/deepinv.utils.plot_parameters.rst", "stubs/deepinv.utils.rand_like.rst", "stubs/deepinv.utils.randn_like.rst", "stubs/deepinv.utils.zeros_like.rst"], "indexentries": {"__add__() (deepinv.physics.generator.physicsgenerator method)": [[194, "deepinv.physics.generator.PhysicsGenerator.__add__", false]], "__add__() (deepinv.physics.linearphysics method)": [[156, "deepinv.physics.LinearPhysics.__add__", false]], "__add__() (deepinv.physics.physics method)": [[161, "deepinv.physics.Physics.__add__", false]], "__add__() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.__add__", false]], "__mul__() (deepinv.physics.linearphysics method)": [[156, "deepinv.physics.LinearPhysics.__mul__", false]], "__mul__() (deepinv.physics.physics method)": [[161, "deepinv.physics.Physics.__mul__", false]], "__mul__() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.__mul__", false]], "__neg__() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.__neg__", false]], "__sub__() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.__sub__", false]], "__truediv__() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.__truediv__", false]], "a() (deepinv.physics.blur method)": [[146, "deepinv.physics.Blur.A", false]], "a() (deepinv.physics.blurfft method)": [[147, "deepinv.physics.BlurFFT.A", false]], "a() (deepinv.physics.compressedsensing method)": [[148, "deepinv.physics.CompressedSensing.A", false]], "a() (deepinv.physics.decomposablephysics method)": [[150, "deepinv.physics.DecomposablePhysics.A", false]], "a() (deepinv.physics.downsampling method)": [[152, "deepinv.physics.Downsampling.A", false]], "a() (deepinv.physics.haze method)": [[154, "deepinv.physics.Haze.A", false]], "a() (deepinv.physics.mri method)": [[158, "deepinv.physics.MRI.A", false]], "a() (deepinv.physics.pansharpen method)": [[159, "deepinv.physics.Pansharpen.A", false]], "a() (deepinv.physics.phaseretrieval method)": [[160, "deepinv.physics.PhaseRetrieval.A", false]], "a() (deepinv.physics.physics method)": [[161, "deepinv.physics.Physics.A", false]], "a() (deepinv.physics.radiointerferometry method)": [[164, "deepinv.physics.RadioInterferometry.A", false]], "a() (deepinv.physics.singlephotonlidar method)": [[166, "deepinv.physics.SinglePhotonLidar.A", false]], "a() (deepinv.physics.spacevaryingblur method)": [[168, "deepinv.physics.SpaceVaryingBlur.A", false]], "a() (deepinv.physics.tomography method)": [[169, "deepinv.physics.Tomography.A", false]], "a_adjoint() (deepinv.physics.blur method)": [[146, "deepinv.physics.Blur.A_adjoint", false]], "a_adjoint() (deepinv.physics.blurfft method)": [[147, "deepinv.physics.BlurFFT.A_adjoint", false]], "a_adjoint() (deepinv.physics.compressedsensing method)": [[148, "deepinv.physics.CompressedSensing.A_adjoint", false]], "a_adjoint() (deepinv.physics.decomposablephysics method)": [[150, "deepinv.physics.DecomposablePhysics.A_adjoint", false]], "a_adjoint() (deepinv.physics.downsampling method)": [[152, "deepinv.physics.Downsampling.A_adjoint", false]], "a_adjoint() (deepinv.physics.linearphysics method)": [[156, "deepinv.physics.LinearPhysics.A_adjoint", false]], "a_adjoint() (deepinv.physics.pansharpen method)": [[159, "deepinv.physics.Pansharpen.A_adjoint", false]], "a_adjoint() (deepinv.physics.radiointerferometry method)": [[164, "deepinv.physics.RadioInterferometry.A_adjoint", false]], "a_adjoint() (deepinv.physics.spacevaryingblur method)": [[168, "deepinv.physics.SpaceVaryingBlur.A_adjoint", false]], "a_adjoint() (deepinv.physics.tomography method)": [[169, "deepinv.physics.Tomography.A_adjoint", false]], "a_dagger() (deepinv.physics.compressedsensing method)": [[148, "deepinv.physics.CompressedSensing.A_dagger", false]], "a_dagger() (deepinv.physics.decomposablephysics method)": [[150, "deepinv.physics.DecomposablePhysics.A_dagger", false]], "a_dagger() (deepinv.physics.haze method)": [[154, "deepinv.physics.Haze.A_dagger", false]], "a_dagger() (deepinv.physics.linearphysics method)": [[156, "deepinv.physics.LinearPhysics.A_dagger", false]], "a_dagger() (deepinv.physics.phaseretrieval method)": [[160, "deepinv.physics.PhaseRetrieval.A_dagger", false]], "a_dagger() (deepinv.physics.physics method)": [[161, "deepinv.physics.Physics.A_dagger", false]], "a_dagger() (deepinv.physics.singlephotonlidar method)": [[166, "deepinv.physics.SinglePhotonLidar.A_dagger", false]], "a_dagger() (deepinv.physics.tomography method)": [[169, "deepinv.physics.Tomography.A_dagger", false]], "a_vjp() (deepinv.physics.linearphysics method)": [[156, "deepinv.physics.LinearPhysics.A_vjp", false]], "a_vjp() (deepinv.physics.phaseretrieval method)": [[160, "deepinv.physics.PhaseRetrieval.A_vjp", false]], "a_vjp() (deepinv.physics.physics method)": [[161, "deepinv.physics.Physics.A_vjp", false]], "adjoint_function (class in deepinv.physics)": [[172, "deepinv.physics.adjoint_function", false]], "adjointness_test() (deepinv.physics.linearphysics method)": [[156, "deepinv.physics.LinearPhysics.adjointness_test", false]], "admmiteration (class in deepinv.optim.optim_iterators)": [[135, "deepinv.optim.optim_iterators.ADMMIteration", false]], "affine (class in deepinv.transform.projective)": [[210, "deepinv.transform.projective.Affine", false]], "amplitudeloss (class in deepinv.optim)": [[112, "deepinv.optim.AmplitudeLoss", false]], "anderson_acceleration_step() (deepinv.optim.fixedpoint method)": [[117, "deepinv.optim.FixedPoint.anderson_acceleration_step", false]], "append() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.append", false]], "artifactremoval (class in deepinv.models)": [[89, "deepinv.models.ArtifactRemoval", false]], "autoencoder (class in deepinv.models)": [[90, "deepinv.models.AutoEncoder", false]], "b_dagger() (deepinv.physics.phaseretrieval method)": [[160, "deepinv.physics.PhaseRetrieval.B_dagger", false]], "basedeq (class in deepinv.unfolded)": [[214, "deepinv.unfolded.BaseDEQ", false]], "baseoptim (class in deepinv.optim)": [[113, "deepinv.optim.BaseOptim", false]], "baseunfold (class in deepinv.unfolded)": [[215, "deepinv.unfolded.BaseUnfold", false]], "bicubic_filter() (in module deepinv.physics.blur)": [[173, "deepinv.physics.blur.bicubic_filter", false]], "bilinear_filter() (in module deepinv.physics.blur)": [[174, "deepinv.physics.blur.bilinear_filter", false]], "blur (class in deepinv.physics)": [[146, "deepinv.physics.Blur", false]], "blurfft (class in deepinv.physics)": [[147, "deepinv.physics.BlurFFT", false]], "bm3d (class in deepinv.models)": [[91, "deepinv.models.BM3D", false]], "cal_psnr() (in module deepinv.utils)": [[219, "deepinv.utils.cal_psnr", false]], "check_clip_grad() (deepinv.trainer method)": [[62, "deepinv.Trainer.check_clip_grad", false]], "check_conv_fn() (deepinv.optim.baseoptim method)": [[113, "deepinv.optim.BaseOptim.check_conv_fn", false]], "check_dataset_exists() (deepinv.datasets.urban100hr method)": [[66, "deepinv.datasets.Urban100HR.check_dataset_exists", false]], "check_iteration_fn() (deepinv.optim.baseoptim method)": [[113, "deepinv.optim.BaseOptim.check_iteration_fn", false]], "classify() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.classify", false]], "component_log_likelihoods() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.component_log_likelihoods", false]], "compressedsensing (class in deepinv.physics)": [[148, "deepinv.physics.CompressedSensing", false]], "compute_alpha_betas() (deepinv.sampling.dps method)": [[198, "deepinv.sampling.DPS.compute_alpha_betas", false]], "compute_loss() (deepinv.trainer method)": [[62, "deepinv.Trainer.compute_loss", false]], "compute_metrics() (deepinv.trainer method)": [[62, "deepinv.Trainer.compute_metrics", false]], "compute_norm() (deepinv.physics.linearphysics method)": [[156, "deepinv.physics.LinearPhysics.compute_norm", false]], "conj() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.conj", false]], "conjugate_gradient (class in deepinv.optim.utils)": [[144, "deepinv.optim.utils.conjugate_gradient", false]], "conv2d (class in deepinv.physics.functional)": [[178, "deepinv.physics.functional.conv2d", false]], "conv2d_fft (class in deepinv.physics.functional)": [[179, "deepinv.physics.functional.conv2d_fft", false]], "conv3d (class in deepinv.physics.functional)": [[180, "deepinv.physics.functional.conv3d", false]], "conv_transpose2d (class in deepinv.physics.functional)": [[181, "deepinv.physics.functional.conv_transpose2d", false]], "conv_transpose2d_fft (class in deepinv.physics.functional)": [[182, "deepinv.physics.functional.conv_transpose2d_fft", false]], "conv_transpose3d (class in deepinv.physics.functional)": [[183, "deepinv.physics.functional.conv_transpose3d", false]], "convdecoder (class in deepinv.models)": [[92, "deepinv.models.ConvDecoder", false]], "convert_to_fp16() (deepinv.models.diffunet method)": [[95, "deepinv.models.DiffUNet.convert_to_fp16", false]], "convert_to_fp32() (deepinv.models.diffunet method)": [[95, "deepinv.models.DiffUNet.convert_to_fp32", false]], "cpiteration (class in deepinv.optim.optim_iterators)": [[136, "deepinv.optim.optim_iterators.CPIteration", false]], "crop_output() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.crop_output", false]], "d() (deepinv.optim.amplitudeloss method)": [[112, "deepinv.optim.AmplitudeLoss.d", false]], "d() (deepinv.optim.datafidelity method)": [[115, "deepinv.optim.DataFidelity.d", false]], "d() (deepinv.optim.indicatorl2 method)": [[118, "deepinv.optim.IndicatorL2.d", false]], "d() (deepinv.optim.l1 method)": [[119, "deepinv.optim.L1.d", false]], "d() (deepinv.optim.l2 method)": [[121, "deepinv.optim.L2.d", false]], "d() (deepinv.optim.logpoissonlikelihood method)": [[122, "deepinv.optim.LogPoissonLikelihood.d", false]], "d() (deepinv.optim.poissonlikelihood method)": [[127, "deepinv.optim.PoissonLikelihood.d", false]], "datafidelity (class in deepinv.optim)": [[115, "deepinv.optim.DataFidelity", false]], "ddrm (class in deepinv.sampling)": [[197, "deepinv.sampling.DDRM", false]], "decolorize (class in deepinv.physics)": [[149, "deepinv.physics.Decolorize", false]], "decomposablephysics (class in deepinv.physics)": [[150, "deepinv.physics.DecomposablePhysics", false]], "deepimageprior (class in deepinv.models)": [[94, "deepinv.models.DeepImagePrior", false]], "denoising (class in deepinv.physics)": [[151, "deepinv.physics.Denoising", false]], "deq_builder() (in module deepinv.unfolded)": [[216, "deepinv.unfolded.DEQ_builder", false]], "diffpir (class in deepinv.sampling)": [[199, "deepinv.sampling.DiffPIR", false]], "diffractionblurgenerator (class in deepinv.physics.generator)": [[189, "deepinv.physics.generator.DiffractionBlurGenerator", false]], "diffunet (class in deepinv.models)": [[95, "deepinv.models.DiffUNet", false]], "diffusionsampler (class in deepinv.sampling)": [[200, "deepinv.sampling.DiffusionSampler", false]], "div2k (class in deepinv.datasets)": [[63, "deepinv.datasets.DIV2K", false]], "dncnn (class in deepinv.models)": [[96, "deepinv.models.DnCNN", false]], "downsampling (class in deepinv.physics)": [[152, "deepinv.physics.Downsampling", false]], "dpir (class in deepinv.optim)": [[114, "deepinv.optim.DPIR", false]], "dps (class in deepinv.sampling)": [[198, "deepinv.sampling.DPS", false]], "drsiteration (class in deepinv.optim.optim_iterators)": [[137, "deepinv.optim.optim_iterators.DRSIteration", false]], "drunet (class in deepinv.models)": [[93, "deepinv.models.DRUNet", false]], "dwt() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.dwt", false]], "eiloss (class in deepinv.loss)": [[68, "deepinv.loss.EILoss", false]], "epll (class in deepinv.optim)": [[116, "deepinv.optim.EPLL", false]], "eplldenoiser (class in deepinv.models)": [[97, "deepinv.models.EPLLDenoiser", false]], "epsilon() (deepinv.models.tgvdenoiser static method)": [[106, "deepinv.models.TGVDenoiser.epsilon", false]], "epsilon_adjoint() (deepinv.models.tgvdenoiser static method)": [[106, "deepinv.models.TGVDenoiser.epsilon_adjoint", false]], "equispacedmaskgenerator (class in deepinv.physics.generator)": [[190, "deepinv.physics.generator.EquispacedMaskGenerator", false]], "equivariantdenoiser (class in deepinv.models)": [[98, "deepinv.models.EquivariantDenoiser", false]], "euclidean (class in deepinv.transform.projective)": [[211, "deepinv.transform.projective.Euclidean", false]], "f_matern() (deepinv.physics.generator.motionblurgenerator method)": [[193, "deepinv.physics.generator.MotionBlurGenerator.f_matern", false]], "find_nearest() (deepinv.models.diffunet method)": [[95, "deepinv.models.DiffUNet.find_nearest", false]], "find_nearest() (deepinv.sampling.diffpir method)": [[199, "deepinv.sampling.DiffPIR.find_nearest", false]], "fistaiteration (class in deepinv.optim.optim_iterators)": [[138, "deepinv.optim.optim_iterators.FISTAIteration", false]], "fit() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.fit", false]], "fixedpoint (class in deepinv.optim)": [[117, "deepinv.optim.FixedPoint", false]], "flatten() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.flatten", false]], "flatten_coeffs() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.flatten_coeffs", false]], "fnejacobianspectralnorm (class in deepinv.loss)": [[69, "deepinv.loss.FNEJacobianSpectralNorm", false]], "forward() (deepinv.loss.eiloss method)": [[68, "deepinv.loss.EILoss.forward", false]], "forward() (deepinv.loss.fnejacobianspectralnorm method)": [[69, "deepinv.loss.FNEJacobianSpectralNorm.forward", false]], "forward() (deepinv.loss.jacobianspectralnorm method)": [[70, "deepinv.loss.JacobianSpectralNorm.forward", false]], "forward() (deepinv.loss.loss method)": [[72, "deepinv.loss.Loss.forward", false]], "forward() (deepinv.loss.lpips method)": [[71, "deepinv.loss.LPIPS.forward", false]], "forward() (deepinv.loss.lpnorm method)": [[73, "deepinv.loss.LpNorm.forward", false]], "forward() (deepinv.loss.mcloss method)": [[74, "deepinv.loss.MCLoss.forward", false]], "forward() (deepinv.loss.moiloss method)": [[75, "deepinv.loss.MOILoss.forward", false]], "forward() (deepinv.loss.neighbor2neighbor method)": [[77, "deepinv.loss.Neighbor2Neighbor.forward", false]], "forward() (deepinv.loss.niqe method)": [[76, "deepinv.loss.NIQE.forward", false]], "forward() (deepinv.loss.psnr method)": [[78, "deepinv.loss.PSNR.forward", false]], "forward() (deepinv.loss.r2rloss method)": [[79, "deepinv.loss.R2RLoss.forward", false]], "forward() (deepinv.loss.splittingloss method)": [[81, "deepinv.loss.SplittingLoss.forward", false]], "forward() (deepinv.loss.ssim method)": [[80, "deepinv.loss.SSIM.forward", false]], "forward() (deepinv.loss.suploss method)": [[82, "deepinv.loss.SupLoss.forward", false]], "forward() (deepinv.loss.suregaussianloss method)": [[83, "deepinv.loss.SureGaussianLoss.forward", false]], "forward() (deepinv.loss.surepgloss method)": [[84, "deepinv.loss.SurePGLoss.forward", false]], "forward() (deepinv.loss.surepoissonloss method)": [[85, "deepinv.loss.SurePoissonLoss.forward", false]], "forward() (deepinv.loss.tvloss method)": [[86, "deepinv.loss.TVLoss.forward", false]], "forward() (deepinv.models.artifactremoval method)": [[89, "deepinv.models.ArtifactRemoval.forward", false]], "forward() (deepinv.models.autoencoder method)": [[90, "deepinv.models.AutoEncoder.forward", false]], "forward() (deepinv.models.bm3d method)": [[91, "deepinv.models.BM3D.forward", false]], "forward() (deepinv.models.convdecoder method)": [[92, "deepinv.models.ConvDecoder.forward", false]], "forward() (deepinv.models.deepimageprior method)": [[94, "deepinv.models.DeepImagePrior.forward", false]], "forward() (deepinv.models.diffunet method)": [[95, "deepinv.models.DiffUNet.forward", false]], "forward() (deepinv.models.dncnn method)": [[96, "deepinv.models.DnCNN.forward", false]], "forward() (deepinv.models.drunet method)": [[93, "deepinv.models.DRUNet.forward", false]], "forward() (deepinv.models.eplldenoiser method)": [[97, "deepinv.models.EPLLDenoiser.forward", false]], "forward() (deepinv.models.equivariantdenoiser method)": [[98, "deepinv.models.EquivariantDenoiser.forward", false]], "forward() (deepinv.models.medianfilter method)": [[100, "deepinv.models.MedianFilter.forward", false]], "forward() (deepinv.models.pdnet_dualblock method)": [[101, "deepinv.models.PDNet_DualBlock.forward", false]], "forward() (deepinv.models.pdnet_primalblock method)": [[102, "deepinv.models.PDNet_PrimalBlock.forward", false]], "forward() (deepinv.models.restormer method)": [[103, "deepinv.models.Restormer.forward", false]], "forward() (deepinv.models.scunet method)": [[104, "deepinv.models.SCUNet.forward", false]], "forward() (deepinv.models.swinir method)": [[105, "deepinv.models.SwinIR.forward", false]], "forward() (deepinv.models.tgvdenoiser method)": [[106, "deepinv.models.TGVDenoiser.forward", false]], "forward() (deepinv.models.tvdenoiser method)": [[107, "deepinv.models.TVDenoiser.forward", false]], "forward() (deepinv.models.unet method)": [[108, "deepinv.models.UNet.forward", false]], "forward() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.forward", false]], "forward() (deepinv.models.waveletdictdenoiser method)": [[110, "deepinv.models.WaveletDictDenoiser.forward", false]], "forward() (deepinv.optim.baseoptim method)": [[113, "deepinv.optim.BaseOptim.forward", false]], "forward() (deepinv.optim.datafidelity method)": [[115, "deepinv.optim.DataFidelity.forward", false]], "forward() (deepinv.optim.epll method)": [[116, "deepinv.optim.EPLL.forward", false]], "forward() (deepinv.optim.fixedpoint method)": [[117, "deepinv.optim.FixedPoint.forward", false]], "forward() (deepinv.optim.optim_iterators.admmiteration method)": [[135, "deepinv.optim.optim_iterators.ADMMIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.cpiteration method)": [[136, "deepinv.optim.optim_iterators.CPIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.drsiteration method)": [[137, "deepinv.optim.optim_iterators.DRSIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.fistaiteration method)": [[138, "deepinv.optim.optim_iterators.FISTAIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.gditeration method)": [[139, "deepinv.optim.optim_iterators.GDIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.smiteration method)": [[142, "deepinv.optim.optim_iterators.SMIteration.forward", false]], "forward() (deepinv.optim.optimiterator method)": [[123, "deepinv.optim.OptimIterator.forward", false]], "forward() (deepinv.optim.patchnr method)": [[124, "deepinv.optim.PatchNR.forward", false]], "forward() (deepinv.optim.prior method)": [[128, "deepinv.optim.Prior.forward", false]], "forward() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.forward", false]], "forward() (deepinv.physics.functional.iradon method)": [[176, "deepinv.physics.functional.IRadon.forward", false]], "forward() (deepinv.physics.functional.radon method)": [[177, "deepinv.physics.functional.Radon.forward", false]], "forward() (deepinv.physics.gaussiannoise method)": [[153, "deepinv.physics.GaussianNoise.forward", false]], "forward() (deepinv.physics.logpoissonnoise method)": [[157, "deepinv.physics.LogPoissonNoise.forward", false]], "forward() (deepinv.physics.pansharpen method)": [[159, "deepinv.physics.Pansharpen.forward", false]], "forward() (deepinv.physics.phaseretrieval method)": [[160, "deepinv.physics.PhaseRetrieval.forward", false]], "forward() (deepinv.physics.physics method)": [[161, "deepinv.physics.Physics.forward", false]], "forward() (deepinv.physics.poissongaussiannoise method)": [[162, "deepinv.physics.PoissonGaussianNoise.forward", false]], "forward() (deepinv.physics.poissonnoise method)": [[163, "deepinv.physics.PoissonNoise.forward", false]], "forward() (deepinv.physics.uniformgaussiannoise method)": [[170, "deepinv.physics.UniformGaussianNoise.forward", false]], "forward() (deepinv.physics.uniformnoise method)": [[171, "deepinv.physics.UniformNoise.forward", false]], "forward() (deepinv.sampling.ddrm method)": [[197, "deepinv.sampling.DDRM.forward", false]], "forward() (deepinv.sampling.diffpir method)": [[199, "deepinv.sampling.DiffPIR.forward", false]], "forward() (deepinv.sampling.dps method)": [[198, "deepinv.sampling.DPS.forward", false]], "forward() (deepinv.sampling.montecarlo method)": [[201, "deepinv.sampling.MonteCarlo.forward", false]], "forward() (deepinv.transform.homography method)": [[206, "deepinv.transform.Homography.forward", false]], "forward() (deepinv.transform.projective.affine method)": [[210, "deepinv.transform.projective.Affine.forward", false]], "forward() (deepinv.transform.projective.euclidean method)": [[211, "deepinv.transform.projective.Euclidean.forward", false]], "forward() (deepinv.transform.projective.pantiltrotate method)": [[212, "deepinv.transform.projective.PanTiltRotate.forward", false]], "forward() (deepinv.transform.projective.similarity method)": [[213, "deepinv.transform.projective.Similarity.forward", false]], "forward() (deepinv.transform.rotate method)": [[207, "deepinv.transform.Rotate.forward", false]], "forward() (deepinv.transform.scale method)": [[208, "deepinv.transform.Scale.forward", false]], "forward() (deepinv.transform.shift method)": [[209, "deepinv.transform.Shift.forward", false]], "forward() (deepinv.unfolded.basedeq method)": [[214, "deepinv.unfolded.BaseDEQ.forward", false]], "forward_denoise() (deepinv.models.diffunet method)": [[95, "deepinv.models.DiffUNet.forward_denoise", false]], "forward_diffusion() (deepinv.models.diffunet method)": [[95, "deepinv.models.DiffUNet.forward_diffusion", false]], "forward_restormer() (deepinv.models.restormer method)": [[103, "deepinv.models.Restormer.forward_restormer", false]], "g() (deepinv.optim.l1prior method)": [[120, "deepinv.optim.L1Prior.g", false]], "g() (deepinv.optim.patchprior method)": [[125, "deepinv.optim.PatchPrior.g", false]], "g() (deepinv.optim.prior method)": [[128, "deepinv.optim.Prior.g", false]], "g() (deepinv.optim.tikhonov method)": [[132, "deepinv.optim.Tikhonov.g", false]], "g() (deepinv.optim.tvprior method)": [[131, "deepinv.optim.TVPrior.g", false]], "g() (deepinv.optim.waveletprior method)": [[133, "deepinv.optim.WaveletPrior.g", false]], "gaussian_blur() (in module deepinv.physics.blur)": [[175, "deepinv.physics.blur.gaussian_blur", false]], "gaussianmaskgenerator (class in deepinv.physics.generator)": [[191, "deepinv.physics.generator.GaussianMaskGenerator", false]], "gaussianmixturemodel (class in deepinv.optim.utils)": [[143, "deepinv.optim.utils.GaussianMixtureModel", false]], "gaussiannoise (class in deepinv.physics)": [[153, "deepinv.physics.GaussianNoise", false]], "gditeration (class in deepinv.optim.optim_iterators)": [[139, "deepinv.optim.optim_iterators.GDIteration", false]], "generate_coeff() (deepinv.physics.generator.diffractionblurgenerator method)": [[189, "deepinv.physics.generator.DiffractionBlurGenerator.generate_coeff", false]], "generate_dataset (class in deepinv.datasets)": [[67, "deepinv.datasets.generate_dataset", false]], "generatormixture (class in deepinv.physics.generator)": [[192, "deepinv.physics.generator.GeneratorMixture", false]], "get_alpha_beta() (deepinv.sampling.diffpir method)": [[199, "deepinv.sampling.DiffPIR.get_alpha_beta", false]], "get_alpha_prod() (deepinv.models.diffunet method)": [[95, "deepinv.models.DiffUNet.get_alpha_prod", false]], "get_alpha_prod() (deepinv.sampling.diffpir method)": [[199, "deepinv.sampling.DiffPIR.get_alpha_prod", false]], "get_chain() (deepinv.sampling.montecarlo method)": [[201, "deepinv.sampling.MonteCarlo.get_chain", false]], "get_cov() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.get_cov", false]], "get_cov_inv_reg() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.get_cov_inv_reg", false]], "get_freer_gpu() (in module deepinv.utils)": [[220, "deepinv.utils.get_freer_gpu", false]], "get_noise_schedule() (deepinv.sampling.diffpir method)": [[199, "deepinv.sampling.DiffPIR.get_noise_schedule", false]], "get_pdf() (deepinv.physics.generator.gaussianmaskgenerator method)": [[191, "deepinv.physics.generator.GaussianMaskGenerator.get_pdf", false]], "get_pdf() (deepinv.physics.generator.randommaskgenerator method)": [[195, "deepinv.physics.generator.RandomMaskGenerator.get_pdf", false]], "get_samples() (deepinv.trainer method)": [[62, "deepinv.Trainer.get_samples", false]], "get_samples_offline() (deepinv.trainer method)": [[62, "deepinv.Trainer.get_samples_offline", false]], "get_samples_online() (deepinv.trainer method)": [[62, "deepinv.Trainer.get_samples_online", false]], "get_weights() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.get_weights", false]], "grad() (deepinv.optim.datafidelity method)": [[115, "deepinv.optim.DataFidelity.grad", false]], "grad() (deepinv.optim.prior method)": [[128, "deepinv.optim.Prior.grad", false]], "grad() (deepinv.optim.red method)": [[129, "deepinv.optim.RED.grad", false]], "grad() (deepinv.optim.scoreprior method)": [[130, "deepinv.optim.ScorePrior.grad", false]], "grad() (deepinv.optim.tikhonov method)": [[132, "deepinv.optim.Tikhonov.grad", false]], "grad_d() (deepinv.optim.amplitudeloss method)": [[112, "deepinv.optim.AmplitudeLoss.grad_d", false]], "grad_d() (deepinv.optim.datafidelity method)": [[115, "deepinv.optim.DataFidelity.grad_d", false]], "grad_d() (deepinv.optim.l1 method)": [[119, "deepinv.optim.L1.grad_d", false]], "grad_d() (deepinv.optim.l2 method)": [[121, "deepinv.optim.L2.grad_d", false]], "grad_d() (deepinv.optim.poissonlikelihood method)": [[127, "deepinv.optim.PoissonLikelihood.grad_d", false]], "gradient_descent (class in deepinv.optim.utils)": [[145, "deepinv.optim.utils.gradient_descent", false]], "gsdrunet (class in deepinv.models)": [[99, "deepinv.models.GSDRUNet", false]], "hard_threshold_topk() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.hard_threshold_topk", false]], "haze (class in deepinv.physics)": [[154, "deepinv.physics.Haze", false]], "hdf5dataset (class in deepinv.datasets)": [[64, "deepinv.datasets.HDF5Dataset", false]], "histogram (class in deepinv.physics.functional)": [[184, "deepinv.physics.functional.histogram", false]], "histogramdd (class in deepinv.physics.functional)": [[185, "deepinv.physics.functional.histogramdd", false]], "homography (class in deepinv.transform)": [[206, "deepinv.transform.Homography", false]], "hqsiteration (class in deepinv.optim.optim_iterators)": [[140, "deepinv.optim.optim_iterators.HQSIteration", false]], "indicatorl2 (class in deepinv.optim)": [[118, "deepinv.optim.IndicatorL2", false]], "init_anderson_acceleration() (deepinv.optim.fixedpoint method)": [[117, "deepinv.optim.FixedPoint.init_anderson_acceleration", false]], "init_iterate_fn() (deepinv.optim.baseoptim method)": [[113, "deepinv.optim.BaseOptim.init_iterate_fn", false]], "init_metrics_fn() (deepinv.optim.baseoptim method)": [[113, "deepinv.optim.BaseOptim.init_metrics_fn", false]], "inpainting (class in deepinv.physics)": [[155, "deepinv.physics.Inpainting", false]], "iradon (class in deepinv.physics.functional)": [[176, "deepinv.physics.functional.IRadon", false]], "is_standard_deblurring_network() (deepinv.models.restormer method)": [[103, "deepinv.models.Restormer.is_standard_deblurring_network", false]], "is_standard_denoising_network() (deepinv.models.restormer method)": [[103, "deepinv.models.Restormer.is_standard_denoising_network", false]], "is_standard_deraining_network() (deepinv.models.restormer method)": [[103, "deepinv.models.Restormer.is_standard_deraining_network", false]], "iwt() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.iwt", false]], "jacobianspectralnorm (class in deepinv.loss)": [[70, "deepinv.loss.JacobianSpectralNorm", false]], "l1 (class in deepinv.optim)": [[119, "deepinv.optim.L1", false]], "l1prior (class in deepinv.optim)": [[120, "deepinv.optim.L1Prior", false]], "l2 (class in deepinv.optim)": [[121, "deepinv.optim.L2", false]], "linearphysics (class in deepinv.physics)": [[156, "deepinv.physics.LinearPhysics", false]], "load_state_dict() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.load_state_dict", false]], "load_url_image() (in module deepinv.utils)": [[221, "deepinv.utils.load_url_image", false]], "log_metrics_wandb() (deepinv.trainer method)": [[62, "deepinv.Trainer.log_metrics_wandb", false]], "logpoissonlikelihood (class in deepinv.optim)": [[122, "deepinv.optim.LogPoissonLikelihood", false]], "logpoissonnoise (class in deepinv.physics)": [[157, "deepinv.physics.LogPoissonNoise", false]], "loss (class in deepinv.loss)": [[72, "deepinv.loss.Loss", false]], "lpips (class in deepinv.loss)": [[71, "deepinv.loss.LPIPS", false]], "lpnorm (class in deepinv.loss)": [[73, "deepinv.loss.LpNorm", false]], "matern_kernel() (deepinv.physics.generator.motionblurgenerator method)": [[193, "deepinv.physics.generator.MotionBlurGenerator.matern_kernel", false]], "mcloss (class in deepinv.loss)": [[74, "deepinv.loss.MCLoss", false]], "mean_has_converged() (deepinv.sampling.montecarlo method)": [[201, "deepinv.sampling.MonteCarlo.mean_has_converged", false]], "medianfilter (class in deepinv.models)": [[100, "deepinv.models.MedianFilter", false]], "model_inference() (deepinv.trainer method)": [[62, "deepinv.Trainer.model_inference", false]], "moiloss (class in deepinv.loss)": [[75, "deepinv.loss.MOILoss", false]], "montecarlo (class in deepinv.sampling)": [[201, "deepinv.sampling.MonteCarlo", false]], "motionblurgenerator (class in deepinv.physics.generator)": [[193, "deepinv.physics.generator.MotionBlurGenerator", false]], "mri (class in deepinv.physics)": [[158, "deepinv.physics.MRI", false]], "multiplier (class in deepinv.physics.functional)": [[186, "deepinv.physics.functional.multiplier", false]], "multiplier_adjoint (class in deepinv.physics.functional)": [[187, "deepinv.physics.functional.multiplier_adjoint", false]], "nabla() (deepinv.models.tgvdenoiser static method)": [[106, "deepinv.models.TGVDenoiser.nabla", false]], "nabla() (deepinv.models.tvdenoiser static method)": [[107, "deepinv.models.TVDenoiser.nabla", false]], "nabla() (deepinv.optim.tvprior method)": [[131, "deepinv.optim.TVPrior.nabla", false]], "nabla_adjoint() (deepinv.models.tgvdenoiser static method)": [[106, "deepinv.models.TGVDenoiser.nabla_adjoint", false]], "nabla_adjoint() (deepinv.models.tvdenoiser static method)": [[107, "deepinv.models.TVDenoiser.nabla_adjoint", false]], "nabla_adjoint() (deepinv.optim.tvprior method)": [[131, "deepinv.optim.TVPrior.nabla_adjoint", false]], "negative_log_likelihood() (deepinv.optim.epll method)": [[116, "deepinv.optim.EPLL.negative_log_likelihood", false]], "neighbor2neighbor (class in deepinv.loss)": [[77, "deepinv.loss.Neighbor2Neighbor", false]], "niqe (class in deepinv.loss)": [[76, "deepinv.loss.NIQE", false]], "noise() (deepinv.physics.inpainting method)": [[155, "deepinv.physics.Inpainting.noise", false]], "noise() (deepinv.physics.physics method)": [[161, "deepinv.physics.Physics.noise", false]], "ones_like() (in module deepinv.utils)": [[222, "deepinv.utils.ones_like", false]], "optim_builder() (in module deepinv.optim)": [[134, "deepinv.optim.optim_builder", false]], "optimiterator (class in deepinv.optim)": [[123, "deepinv.optim.OptimIterator", false]], "pad_input() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.pad_input", false]], "pansharpen (class in deepinv.physics)": [[159, "deepinv.physics.Pansharpen", false]], "pantiltrotate (class in deepinv.transform.projective)": [[212, "deepinv.transform.projective.PanTiltRotate", false]], "patchdataset (class in deepinv.datasets)": [[65, "deepinv.datasets.PatchDataset", false]], "patchnr (class in deepinv.optim)": [[124, "deepinv.optim.PatchNR", false]], "patchprior (class in deepinv.optim)": [[125, "deepinv.optim.PatchPrior", false]], "pdnet_dualblock (class in deepinv.models)": [[101, "deepinv.models.PDNet_DualBlock", false]], "pdnet_primalblock (class in deepinv.models)": [[102, "deepinv.models.PDNet_PrimalBlock", false]], "pgditeration (class in deepinv.optim.optim_iterators)": [[141, "deepinv.optim.optim_iterators.PGDIteration", false]], "phaseretrieval (class in deepinv.physics)": [[160, "deepinv.physics.PhaseRetrieval", false]], "physics (class in deepinv.physics)": [[161, "deepinv.physics.Physics", false]], "physicsgenerator (class in deepinv.physics.generator)": [[194, "deepinv.physics.generator.PhysicsGenerator", false]], "plot() (deepinv.trainer method)": [[62, "deepinv.Trainer.plot", false]], "plot() (in module deepinv.utils)": [[223, "deepinv.utils.plot", false]], "plot_curves() (in module deepinv.utils)": [[224, "deepinv.utils.plot_curves", false]], "plot_inset() (in module deepinv.utils)": [[225, "deepinv.utils.plot_inset", false]], "plot_parameters() (in module deepinv.utils)": [[226, "deepinv.utils.plot_parameters", false]], "pnp (class in deepinv.optim)": [[126, "deepinv.optim.PnP", false]], "poissongaussiannoise (class in deepinv.physics)": [[162, "deepinv.physics.PoissonGaussianNoise", false]], "poissonlikelihood (class in deepinv.optim)": [[127, "deepinv.optim.PoissonLikelihood", false]], "poissonnoise (class in deepinv.physics)": [[163, "deepinv.physics.PoissonNoise", false]], "prepare_images() (deepinv.trainer method)": [[62, "deepinv.Trainer.prepare_images", false]], "prior (class in deepinv.optim)": [[128, "deepinv.optim.Prior", false]], "product_convolution2d (class in deepinv.physics.functional)": [[188, "deepinv.physics.functional.product_convolution2d", false]], "prox() (deepinv.optim.datafidelity method)": [[115, "deepinv.optim.DataFidelity.prox", false]], "prox() (deepinv.optim.indicatorl2 method)": [[118, "deepinv.optim.IndicatorL2.prox", false]], "prox() (deepinv.optim.l1 method)": [[119, "deepinv.optim.L1.prox", false]], "prox() (deepinv.optim.l1prior method)": [[120, "deepinv.optim.L1Prior.prox", false]], "prox() (deepinv.optim.l2 method)": [[121, "deepinv.optim.L2.prox", false]], "prox() (deepinv.optim.pnp method)": [[126, "deepinv.optim.PnP.prox", false]], "prox() (deepinv.optim.prior method)": [[128, "deepinv.optim.Prior.prox", false]], "prox() (deepinv.optim.tikhonov method)": [[132, "deepinv.optim.Tikhonov.prox", false]], "prox() (deepinv.optim.tvprior method)": [[131, "deepinv.optim.TVPrior.prox", false]], "prox() (deepinv.optim.waveletprior method)": [[133, "deepinv.optim.WaveletPrior.prox", false]], "prox_conjugate() (deepinv.optim.datafidelity method)": [[115, "deepinv.optim.DataFidelity.prox_conjugate", false]], "prox_conjugate() (deepinv.optim.prior method)": [[128, "deepinv.optim.Prior.prox_conjugate", false]], "prox_d() (deepinv.optim.datafidelity method)": [[115, "deepinv.optim.DataFidelity.prox_d", false]], "prox_d() (deepinv.optim.indicatorl2 method)": [[118, "deepinv.optim.IndicatorL2.prox_d", false]], "prox_d() (deepinv.optim.l1 method)": [[119, "deepinv.optim.L1.prox_d", false]], "prox_d() (deepinv.optim.l2 method)": [[121, "deepinv.optim.L2.prox_d", false]], "prox_d() (deepinv.optim.poissonlikelihood method)": [[127, "deepinv.optim.PoissonLikelihood.prox_d", false]], "prox_d_conjugate() (deepinv.optim.datafidelity method)": [[115, "deepinv.optim.DataFidelity.prox_d_conjugate", false]], "prox_l0() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.prox_l0", false]], "prox_l1() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.prox_l1", false]], "prox_l2() (deepinv.physics.decomposablephysics method)": [[150, "deepinv.physics.DecomposablePhysics.prox_l2", false]], "prox_l2() (deepinv.physics.downsampling method)": [[152, "deepinv.physics.Downsampling.prox_l2", false]], "prox_l2() (deepinv.physics.linearphysics method)": [[156, "deepinv.physics.LinearPhysics.prox_l2", false]], "prox_tau_fx() (deepinv.models.tvdenoiser method)": [[107, "deepinv.models.TVDenoiser.prox_tau_fx", false]], "psi() (deepinv.models.waveletdenoiser static method)": [[109, "deepinv.models.WaveletDenoiser.psi", false]], "psi() (deepinv.models.waveletdictdenoiser method)": [[110, "deepinv.models.WaveletDictDenoiser.psi", false]], "psi() (deepinv.optim.waveletprior method)": [[133, "deepinv.optim.WaveletPrior.psi", false]], "psnr (class in deepinv.loss)": [[78, "deepinv.loss.PSNR", false]], "r2r_eval (class in deepinv.loss)": [[87, "deepinv.loss.r2r_eval", false]], "r2rloss (class in deepinv.loss)": [[79, "deepinv.loss.R2RLoss", false]], "radiointerferometry (class in deepinv.physics)": [[164, "deepinv.physics.RadioInterferometry", false]], "radon (class in deepinv.physics.functional)": [[177, "deepinv.physics.functional.Radon", false]], "rand_like() (in module deepinv.utils)": [[227, "deepinv.utils.rand_like", false]], "randn_like() (in module deepinv.utils)": [[228, "deepinv.utils.randn_like", false]], "randommaskgenerator (class in deepinv.physics.generator)": [[195, "deepinv.physics.generator.RandomMaskGenerator", false]], "randomphaseretrieval (class in deepinv.physics)": [[165, "deepinv.physics.RandomPhaseRetrieval", false]], "red (class in deepinv.optim)": [[129, "deepinv.optim.RED", false]], "relaxation_step() (deepinv.optim.optimiterator method)": [[123, "deepinv.optim.OptimIterator.relaxation_step", false]], "reset() (deepinv.sampling.montecarlo method)": [[201, "deepinv.sampling.MonteCarlo.reset", false]], "reshape() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.reshape", false]], "reshape_ths() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.reshape_ths", false]], "restormer (class in deepinv.models)": [[103, "deepinv.models.Restormer", false]], "rotate (class in deepinv.transform)": [[207, "deepinv.transform.Rotate", false]], "sample_mask() (deepinv.physics.generator.equispacedmaskgenerator method)": [[190, "deepinv.physics.generator.EquispacedMaskGenerator.sample_mask", false]], "sample_mask() (deepinv.physics.generator.randommaskgenerator method)": [[195, "deepinv.physics.generator.RandomMaskGenerator.sample_mask", false]], "save_model() (deepinv.trainer method)": [[62, "deepinv.Trainer.save_model", false]], "scale (class in deepinv.transform)": [[208, "deepinv.transform.Scale", false]], "scoreprior (class in deepinv.optim)": [[130, "deepinv.optim.ScorePrior", false]], "scunet (class in deepinv.models)": [[104, "deepinv.models.SCUNet", false]], "sensor() (deepinv.physics.physics method)": [[161, "deepinv.physics.Physics.sensor", false]], "set_cov() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.set_cov", false]], "set_cov_reg() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.set_cov_reg", false]], "set_weights() (deepinv.optim.utils.gaussianmixturemodel method)": [[143, "deepinv.optim.utils.GaussianMixtureModel.set_weights", false]], "setup_train() (deepinv.trainer method)": [[62, "deepinv.Trainer.setup_train", false]], "shift (class in deepinv.transform)": [[209, "deepinv.transform.Shift", false]], "sigmagenerator (class in deepinv.physics.generator)": [[196, "deepinv.physics.generator.SigmaGenerator", false]], "similarity (class in deepinv.transform.projective)": [[213, "deepinv.transform.projective.Similarity", false]], "singlephotonlidar (class in deepinv.physics)": [[166, "deepinv.physics.SinglePhotonLidar", false]], "singlepixelcamera (class in deepinv.physics)": [[167, "deepinv.physics.SinglePixelCamera", false]], "skrock (class in deepinv.sampling)": [[202, "deepinv.sampling.SKRock", false]], "smiteration (class in deepinv.optim.optim_iterators)": [[142, "deepinv.optim.optim_iterators.SMIteration", false]], "spacevaryingblur (class in deepinv.physics)": [[168, "deepinv.physics.SpaceVaryingBlur", false]], "splitting_eval (class in deepinv.loss)": [[88, "deepinv.loss.splitting_eval", false]], "splittingloss (class in deepinv.loss)": [[81, "deepinv.loss.SplittingLoss", false]], "ssim (class in deepinv.loss)": [[80, "deepinv.loss.SSIM", false]], "step() (deepinv.physics.generator.diffractionblurgenerator method)": [[189, "deepinv.physics.generator.DiffractionBlurGenerator.step", false]], "step() (deepinv.physics.generator.generatormixture method)": [[192, "deepinv.physics.generator.GeneratorMixture.step", false]], "step() (deepinv.physics.generator.motionblurgenerator method)": [[193, "deepinv.physics.generator.MotionBlurGenerator.step", false]], "step() (deepinv.physics.generator.physicsgenerator method)": [[194, "deepinv.physics.generator.PhysicsGenerator.step", false]], "step() (deepinv.physics.generator.sigmagenerator method)": [[196, "deepinv.physics.generator.SigmaGenerator.step", false]], "step() (deepinv.trainer method)": [[62, "deepinv.Trainer.step", false]], "sum() (deepinv.utils.tensorlist method)": [[218, "deepinv.utils.TensorList.sum", false]], "suploss (class in deepinv.loss)": [[82, "deepinv.loss.SupLoss", false]], "suregaussianloss (class in deepinv.loss)": [[83, "deepinv.loss.SureGaussianLoss", false]], "surepgloss (class in deepinv.loss)": [[84, "deepinv.loss.SurePGLoss", false]], "surepoissonloss (class in deepinv.loss)": [[85, "deepinv.loss.SurePoissonLoss", false]], "swinir (class in deepinv.models)": [[105, "deepinv.models.SwinIR", false]], "tensorlist (class in deepinv.utils)": [[218, "deepinv.utils.TensorList", false]], "test() (deepinv.trainer method)": [[62, "deepinv.Trainer.test", false]], "test() (in module deepinv)": [[204, "deepinv.test", false]], "tgvdenoiser (class in deepinv.models)": [[106, "deepinv.models.TGVDenoiser", false]], "threshold_3d() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.threshold_3D", false]], "threshold_nd() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.threshold_ND", false]], "thresold_2d() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.thresold_2D", false]], "thresold_func() (deepinv.models.waveletdenoiser method)": [[109, "deepinv.models.WaveletDenoiser.thresold_func", false]], "tikhonov (class in deepinv.optim)": [[132, "deepinv.optim.Tikhonov", false]], "to_complex_denoiser (class in deepinv.models.complex)": [[111, "deepinv.models.complex.to_complex_denoiser", false]], "tomography (class in deepinv.physics)": [[169, "deepinv.physics.Tomography", false]], "train() (deepinv.trainer method)": [[62, "deepinv.Trainer.train", false]], "train() (in module deepinv)": [[205, "deepinv.train", false]], "trainer (class in deepinv)": [[62, "deepinv.Trainer", false]], "tvdenoiser (class in deepinv.models)": [[107, "deepinv.models.TVDenoiser", false]], "tvloss (class in deepinv.loss)": [[86, "deepinv.loss.TVLoss", false]], "tvprior (class in deepinv.optim)": [[131, "deepinv.optim.TVPrior", false]], "ula (class in deepinv.sampling)": [[203, "deepinv.sampling.ULA", false]], "unet (class in deepinv.models)": [[108, "deepinv.models.UNet", false]], "unfolded_builder() (in module deepinv.unfolded)": [[217, "deepinv.unfolded.unfolded_builder", false]], "uniformgaussiannoise (class in deepinv.physics)": [[170, "deepinv.physics.UniformGaussianNoise", false]], "uniformnoise (class in deepinv.physics)": [[171, "deepinv.physics.UniformNoise", false]], "update() (deepinv.physics.physics method)": [[161, "deepinv.physics.Physics.update", false]], "update_data_fidelity_fn() (deepinv.optim.baseoptim method)": [[113, "deepinv.optim.BaseOptim.update_data_fidelity_fn", false]], "update_metrics_fn() (deepinv.optim.baseoptim method)": [[113, "deepinv.optim.BaseOptim.update_metrics_fn", false]], "update_parameters() (deepinv.physics.blur method)": [[146, "deepinv.physics.Blur.update_parameters", false]], "update_parameters() (deepinv.physics.blurfft method)": [[147, "deepinv.physics.BlurFFT.update_parameters", false]], "update_parameters() (deepinv.physics.decomposablephysics method)": [[150, "deepinv.physics.DecomposablePhysics.update_parameters", false]], "update_parameters() (deepinv.physics.gaussiannoise method)": [[153, "deepinv.physics.GaussianNoise.update_parameters", false]], "update_parameters() (deepinv.physics.logpoissonnoise method)": [[157, "deepinv.physics.LogPoissonNoise.update_parameters", false]], "update_parameters() (deepinv.physics.poissongaussiannoise method)": [[162, "deepinv.physics.PoissonGaussianNoise.update_parameters", false]], "update_parameters() (deepinv.physics.poissonnoise method)": [[163, "deepinv.physics.PoissonNoise.update_parameters", false]], "update_parameters() (deepinv.physics.spacevaryingblur method)": [[168, "deepinv.physics.SpaceVaryingBlur.update_parameters", false]], "update_parameters() (deepinv.physics.uniformnoise method)": [[171, "deepinv.physics.UniformNoise.update_parameters", false]], "update_params_fn() (deepinv.optim.baseoptim method)": [[113, "deepinv.optim.BaseOptim.update_params_fn", false]], "update_prior_fn() (deepinv.optim.baseoptim method)": [[113, "deepinv.optim.BaseOptim.update_prior_fn", false]], "urban100hr (class in deepinv.datasets)": [[66, "deepinv.datasets.Urban100HR", false]], "var_has_converged() (deepinv.sampling.montecarlo method)": [[201, "deepinv.sampling.MonteCarlo.var_has_converged", false]], "waveletdenoiser (class in deepinv.models)": [[109, "deepinv.models.WaveletDenoiser", false]], "waveletdictdenoiser (class in deepinv.models)": [[110, "deepinv.models.WaveletDictDenoiser", false]], "waveletprior (class in deepinv.optim)": [[133, "deepinv.optim.WaveletPrior", false]], "zeros_like() (in module deepinv.utils)": [[229, "deepinv.utils.zeros_like", false]]}, "objects": {"deepinv": [[62, 0, 1, "", "Trainer"], [204, 2, 1, "", "test"], [205, 2, 1, "", "train"]], "deepinv.Trainer": [[62, 1, 1, "", "check_clip_grad"], [62, 1, 1, "", "compute_loss"], [62, 1, 1, "", "compute_metrics"], [62, 1, 1, "", "get_samples"], [62, 1, 1, "", "get_samples_offline"], [62, 1, 1, "", "get_samples_online"], [62, 1, 1, "", "log_metrics_wandb"], [62, 1, 1, "", "model_inference"], [62, 1, 1, "", "plot"], [62, 1, 1, "", "prepare_images"], [62, 1, 1, "", "save_model"], [62, 1, 1, "", "setup_train"], [62, 1, 1, "", "step"], [62, 1, 1, "", "test"], [62, 1, 1, "", "train"]], "deepinv.datasets": [[63, 0, 1, "", "DIV2K"], [64, 0, 1, "", "HDF5Dataset"], [65, 0, 1, "", "PatchDataset"], [66, 0, 1, "", "Urban100HR"], [67, 0, 1, "", "generate_dataset"]], "deepinv.datasets.Urban100HR": [[66, 1, 1, "", "check_dataset_exists"]], "deepinv.loss": [[68, 0, 1, "", "EILoss"], [69, 0, 1, "", "FNEJacobianSpectralNorm"], [70, 0, 1, "", "JacobianSpectralNorm"], [71, 0, 1, "", "LPIPS"], [72, 0, 1, "", "Loss"], [73, 0, 1, "", "LpNorm"], [74, 0, 1, "", "MCLoss"], [75, 0, 1, "", "MOILoss"], [76, 0, 1, "", "NIQE"], [77, 0, 1, "", "Neighbor2Neighbor"], [78, 0, 1, "", "PSNR"], [79, 0, 1, "", "R2RLoss"], [80, 0, 1, "", "SSIM"], [81, 0, 1, "", "SplittingLoss"], [82, 0, 1, "", "SupLoss"], [83, 0, 1, "", "SureGaussianLoss"], [84, 0, 1, "", "SurePGLoss"], [85, 0, 1, "", "SurePoissonLoss"], [86, 0, 1, "", "TVLoss"], [87, 0, 1, "", "r2r_eval"], [88, 0, 1, "", "splitting_eval"]], "deepinv.loss.EILoss": [[68, 1, 1, "", "forward"]], "deepinv.loss.FNEJacobianSpectralNorm": [[69, 1, 1, "", "forward"]], "deepinv.loss.JacobianSpectralNorm": [[70, 1, 1, "", "forward"]], "deepinv.loss.LPIPS": [[71, 1, 1, "", "forward"]], "deepinv.loss.Loss": [[72, 1, 1, "", "forward"]], "deepinv.loss.LpNorm": [[73, 1, 1, "", "forward"]], "deepinv.loss.MCLoss": [[74, 1, 1, "", "forward"]], "deepinv.loss.MOILoss": [[75, 1, 1, "", "forward"]], "deepinv.loss.NIQE": [[76, 1, 1, "", "forward"]], "deepinv.loss.Neighbor2Neighbor": [[77, 1, 1, "", "forward"]], "deepinv.loss.PSNR": [[78, 1, 1, "", "forward"]], "deepinv.loss.R2RLoss": [[79, 1, 1, "", "forward"]], "deepinv.loss.SSIM": [[80, 1, 1, "", "forward"]], "deepinv.loss.SplittingLoss": [[81, 1, 1, "", "forward"]], "deepinv.loss.SupLoss": [[82, 1, 1, "", "forward"]], "deepinv.loss.SureGaussianLoss": [[83, 1, 1, "", "forward"]], "deepinv.loss.SurePGLoss": [[84, 1, 1, "", "forward"]], "deepinv.loss.SurePoissonLoss": [[85, 1, 1, "", "forward"]], "deepinv.loss.TVLoss": [[86, 1, 1, "", "forward"]], "deepinv.models": [[89, 0, 1, "", "ArtifactRemoval"], [90, 0, 1, "", "AutoEncoder"], [91, 0, 1, "", "BM3D"], [92, 0, 1, "", "ConvDecoder"], [93, 0, 1, "", "DRUNet"], [94, 0, 1, "", "DeepImagePrior"], [95, 0, 1, "", "DiffUNet"], [96, 0, 1, "", "DnCNN"], [97, 0, 1, "", "EPLLDenoiser"], [98, 0, 1, "", "EquivariantDenoiser"], [99, 0, 1, "", "GSDRUNet"], [100, 0, 1, "", "MedianFilter"], [101, 0, 1, "", "PDNet_DualBlock"], [102, 0, 1, "", "PDNet_PrimalBlock"], [103, 0, 1, "", "Restormer"], [104, 0, 1, "", "SCUNet"], [105, 0, 1, "", "SwinIR"], [106, 0, 1, "", "TGVDenoiser"], [107, 0, 1, "", "TVDenoiser"], [108, 0, 1, "", "UNet"], [109, 0, 1, "", "WaveletDenoiser"], [110, 0, 1, "", "WaveletDictDenoiser"]], "deepinv.models.ArtifactRemoval": [[89, 1, 1, "", "forward"]], "deepinv.models.AutoEncoder": [[90, 1, 1, "", "forward"]], "deepinv.models.BM3D": [[91, 1, 1, "", "forward"]], "deepinv.models.ConvDecoder": [[92, 1, 1, "", "forward"]], "deepinv.models.DRUNet": [[93, 1, 1, "", "forward"]], "deepinv.models.DeepImagePrior": [[94, 1, 1, "", "forward"]], "deepinv.models.DiffUNet": [[95, 1, 1, "", "convert_to_fp16"], [95, 1, 1, "", "convert_to_fp32"], [95, 1, 1, "", "find_nearest"], [95, 1, 1, "", "forward"], [95, 1, 1, "", "forward_denoise"], [95, 1, 1, "", "forward_diffusion"], [95, 1, 1, "", "get_alpha_prod"]], "deepinv.models.DnCNN": [[96, 1, 1, "", "forward"]], "deepinv.models.EPLLDenoiser": [[97, 1, 1, "", "forward"]], "deepinv.models.EquivariantDenoiser": [[98, 1, 1, "", "forward"]], "deepinv.models.MedianFilter": [[100, 1, 1, "", "forward"]], "deepinv.models.PDNet_DualBlock": [[101, 1, 1, "", "forward"]], "deepinv.models.PDNet_PrimalBlock": [[102, 1, 1, "", "forward"]], "deepinv.models.Restormer": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "forward_restormer"], [103, 1, 1, "", "is_standard_deblurring_network"], [103, 1, 1, "", "is_standard_denoising_network"], [103, 1, 1, "", "is_standard_deraining_network"]], "deepinv.models.SCUNet": [[104, 1, 1, "", "forward"]], "deepinv.models.SwinIR": [[105, 1, 1, "", "forward"]], "deepinv.models.TGVDenoiser": [[106, 1, 1, "", "epsilon"], [106, 1, 1, "", "epsilon_adjoint"], [106, 1, 1, "", "forward"], [106, 1, 1, "", "nabla"], [106, 1, 1, "", "nabla_adjoint"]], "deepinv.models.TVDenoiser": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "nabla"], [107, 1, 1, "", "nabla_adjoint"], [107, 1, 1, "", "prox_tau_fx"]], "deepinv.models.UNet": [[108, 1, 1, "", "forward"]], "deepinv.models.WaveletDenoiser": [[109, 1, 1, "", "crop_output"], [109, 1, 1, "", "dwt"], [109, 1, 1, "", "flatten_coeffs"], [109, 1, 1, "", "forward"], [109, 1, 1, "", "hard_threshold_topk"], [109, 1, 1, "", "iwt"], [109, 1, 1, "", "pad_input"], [109, 1, 1, "", "prox_l0"], [109, 1, 1, "", "prox_l1"], [109, 1, 1, "", "psi"], [109, 1, 1, "", "reshape_ths"], [109, 1, 1, "", "threshold_3D"], [109, 1, 1, "", "threshold_ND"], [109, 1, 1, "", "thresold_2D"], [109, 1, 1, "", "thresold_func"]], "deepinv.models.WaveletDictDenoiser": [[110, 1, 1, "", "forward"], [110, 1, 1, "", "psi"]], "deepinv.models.complex": [[111, 0, 1, "", "to_complex_denoiser"]], "deepinv.optim": [[112, 0, 1, "", "AmplitudeLoss"], [113, 0, 1, "", "BaseOptim"], [114, 0, 1, "", "DPIR"], [115, 0, 1, "", "DataFidelity"], [116, 0, 1, "", "EPLL"], [117, 0, 1, "", "FixedPoint"], [118, 0, 1, "", "IndicatorL2"], [119, 0, 1, "", "L1"], [120, 0, 1, "", "L1Prior"], [121, 0, 1, "", "L2"], [122, 0, 1, "", "LogPoissonLikelihood"], [123, 0, 1, "", "OptimIterator"], [124, 0, 1, "", "PatchNR"], [125, 0, 1, "", "PatchPrior"], [126, 0, 1, "", "PnP"], [127, 0, 1, "", "PoissonLikelihood"], [128, 0, 1, "", "Prior"], [129, 0, 1, "", "RED"], [130, 0, 1, "", "ScorePrior"], [131, 0, 1, "", "TVPrior"], [132, 0, 1, "", "Tikhonov"], [133, 0, 1, "", "WaveletPrior"], [134, 2, 1, "", "optim_builder"]], "deepinv.optim.AmplitudeLoss": [[112, 1, 1, "", "d"], [112, 1, 1, "", "grad_d"]], "deepinv.optim.BaseOptim": [[113, 1, 1, "", "check_conv_fn"], [113, 1, 1, "", "check_iteration_fn"], [113, 1, 1, "", "forward"], [113, 1, 1, "", "init_iterate_fn"], [113, 1, 1, "", "init_metrics_fn"], [113, 1, 1, "", "update_data_fidelity_fn"], [113, 1, 1, "", "update_metrics_fn"], [113, 1, 1, "", "update_params_fn"], [113, 1, 1, "", "update_prior_fn"]], "deepinv.optim.DataFidelity": [[115, 1, 1, "", "d"], [115, 1, 1, "", "forward"], [115, 1, 1, "", "grad"], [115, 1, 1, "", "grad_d"], [115, 1, 1, "", "prox"], [115, 1, 1, "", "prox_conjugate"], [115, 1, 1, "", "prox_d"], [115, 1, 1, "", "prox_d_conjugate"]], "deepinv.optim.EPLL": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "negative_log_likelihood"]], "deepinv.optim.FixedPoint": [[117, 1, 1, "", "anderson_acceleration_step"], [117, 1, 1, "", "forward"], [117, 1, 1, "", "init_anderson_acceleration"]], "deepinv.optim.IndicatorL2": [[118, 1, 1, "", "d"], [118, 1, 1, "", "prox"], [118, 1, 1, "", "prox_d"]], "deepinv.optim.L1": [[119, 1, 1, "", "d"], [119, 1, 1, "", "grad_d"], [119, 1, 1, "", "prox"], [119, 1, 1, "", "prox_d"]], "deepinv.optim.L1Prior": [[120, 1, 1, "", "g"], [120, 1, 1, "", "prox"]], "deepinv.optim.L2": [[121, 1, 1, "", "d"], [121, 1, 1, "", "grad_d"], [121, 1, 1, "", "prox"], [121, 1, 1, "", "prox_d"]], "deepinv.optim.LogPoissonLikelihood": [[122, 1, 1, "", "d"]], "deepinv.optim.OptimIterator": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "relaxation_step"]], "deepinv.optim.PatchNR": [[124, 1, 1, "", "forward"]], "deepinv.optim.PatchPrior": [[125, 1, 1, "", "g"]], "deepinv.optim.PnP": [[126, 1, 1, "", "prox"]], "deepinv.optim.PoissonLikelihood": [[127, 1, 1, "", "d"], [127, 1, 1, "", "grad_d"], [127, 1, 1, "", "prox_d"]], "deepinv.optim.Prior": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "g"], [128, 1, 1, "", "grad"], [128, 1, 1, "", "prox"], [128, 1, 1, "", "prox_conjugate"]], "deepinv.optim.RED": [[129, 1, 1, "", "grad"]], "deepinv.optim.ScorePrior": [[130, 1, 1, "", "grad"]], "deepinv.optim.TVPrior": [[131, 1, 1, "", "g"], [131, 1, 1, "", "nabla"], [131, 1, 1, "", "nabla_adjoint"], [131, 1, 1, "", "prox"]], "deepinv.optim.Tikhonov": [[132, 1, 1, "", "g"], [132, 1, 1, "", "grad"], [132, 1, 1, "", "prox"]], "deepinv.optim.WaveletPrior": [[133, 1, 1, "", "g"], [133, 1, 1, "", "prox"], [133, 1, 1, "", "psi"]], "deepinv.optim.optim_iterators": [[135, 0, 1, "", "ADMMIteration"], [136, 0, 1, "", "CPIteration"], [137, 0, 1, "", "DRSIteration"], [138, 0, 1, "", "FISTAIteration"], [139, 0, 1, "", "GDIteration"], [140, 0, 1, "", "HQSIteration"], [141, 0, 1, "", "PGDIteration"], [142, 0, 1, "", "SMIteration"]], "deepinv.optim.optim_iterators.ADMMIteration": [[135, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.CPIteration": [[136, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.DRSIteration": [[137, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.FISTAIteration": [[138, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.GDIteration": [[139, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.SMIteration": [[142, 1, 1, "", "forward"]], "deepinv.optim.utils": [[143, 0, 1, "", "GaussianMixtureModel"], [144, 0, 1, "", "conjugate_gradient"], [145, 0, 1, "", "gradient_descent"]], "deepinv.optim.utils.GaussianMixtureModel": [[143, 1, 1, "", "classify"], [143, 1, 1, "", "component_log_likelihoods"], [143, 1, 1, "", "fit"], [143, 1, 1, "", "forward"], [143, 1, 1, "", "get_cov"], [143, 1, 1, "", "get_cov_inv_reg"], [143, 1, 1, "", "get_weights"], [143, 1, 1, "", "load_state_dict"], [143, 1, 1, "", "set_cov"], [143, 1, 1, "", "set_cov_reg"], [143, 1, 1, "", "set_weights"]], "deepinv.physics": [[146, 0, 1, "", "Blur"], [147, 0, 1, "", "BlurFFT"], [148, 0, 1, "", "CompressedSensing"], [149, 0, 1, "", "Decolorize"], [150, 0, 1, "", "DecomposablePhysics"], [151, 0, 1, "", "Denoising"], [152, 0, 1, "", "Downsampling"], [153, 0, 1, "", "GaussianNoise"], [154, 0, 1, "", "Haze"], [155, 0, 1, "", "Inpainting"], [156, 0, 1, "", "LinearPhysics"], [157, 0, 1, "", "LogPoissonNoise"], [158, 0, 1, "", "MRI"], [159, 0, 1, "", "Pansharpen"], [160, 0, 1, "", "PhaseRetrieval"], [161, 0, 1, "", "Physics"], [162, 0, 1, "", "PoissonGaussianNoise"], [163, 0, 1, "", "PoissonNoise"], [164, 0, 1, "", "RadioInterferometry"], [165, 0, 1, "", "RandomPhaseRetrieval"], [166, 0, 1, "", "SinglePhotonLidar"], [167, 0, 1, "", "SinglePixelCamera"], [168, 0, 1, "", "SpaceVaryingBlur"], [169, 0, 1, "", "Tomography"], [170, 0, 1, "", "UniformGaussianNoise"], [171, 0, 1, "", "UniformNoise"], [172, 0, 1, "", "adjoint_function"]], "deepinv.physics.Blur": [[146, 1, 1, "", "A"], [146, 1, 1, "", "A_adjoint"], [146, 1, 1, "", "update_parameters"]], "deepinv.physics.BlurFFT": [[147, 1, 1, "", "A"], [147, 1, 1, "", "A_adjoint"], [147, 1, 1, "", "update_parameters"]], "deepinv.physics.CompressedSensing": [[148, 1, 1, "", "A"], [148, 1, 1, "", "A_adjoint"], [148, 1, 1, "", "A_dagger"]], "deepinv.physics.DecomposablePhysics": [[150, 1, 1, "", "A"], [150, 1, 1, "", "A_adjoint"], [150, 1, 1, "", "A_dagger"], [150, 1, 1, "", "prox_l2"], [150, 1, 1, "", "update_parameters"]], "deepinv.physics.Downsampling": [[152, 1, 1, "", "A"], [152, 1, 1, "", "A_adjoint"], [152, 1, 1, "", "prox_l2"]], "deepinv.physics.GaussianNoise": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "update_parameters"]], "deepinv.physics.Haze": [[154, 1, 1, "", "A"], [154, 1, 1, "", "A_dagger"]], "deepinv.physics.Inpainting": [[155, 1, 1, "", "noise"]], "deepinv.physics.LinearPhysics": [[156, 1, 1, "", "A_adjoint"], [156, 1, 1, "", "A_dagger"], [156, 1, 1, "", "A_vjp"], [156, 1, 1, "", "__add__"], [156, 1, 1, "", "__mul__"], [156, 1, 1, "", "adjointness_test"], [156, 1, 1, "", "compute_norm"], [156, 1, 1, "", "prox_l2"]], "deepinv.physics.LogPoissonNoise": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "update_parameters"]], "deepinv.physics.MRI": [[158, 1, 1, "", "A"]], "deepinv.physics.Pansharpen": [[159, 1, 1, "", "A"], [159, 1, 1, "", "A_adjoint"], [159, 1, 1, "", "forward"]], "deepinv.physics.PhaseRetrieval": [[160, 1, 1, "", "A"], [160, 1, 1, "", "A_dagger"], [160, 1, 1, "", "A_vjp"], [160, 1, 1, "", "B_dagger"], [160, 1, 1, "", "forward"]], "deepinv.physics.Physics": [[161, 1, 1, "", "A"], [161, 1, 1, "", "A_dagger"], [161, 1, 1, "", "A_vjp"], [161, 1, 1, "", "__add__"], [161, 1, 1, "", "__mul__"], [161, 1, 1, "", "forward"], [161, 1, 1, "", "noise"], [161, 1, 1, "", "sensor"], [161, 1, 1, "", "update"]], "deepinv.physics.PoissonGaussianNoise": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "update_parameters"]], "deepinv.physics.PoissonNoise": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "update_parameters"]], "deepinv.physics.RadioInterferometry": [[164, 1, 1, "", "A"], [164, 1, 1, "", "A_adjoint"]], "deepinv.physics.SinglePhotonLidar": [[166, 1, 1, "", "A"], [166, 1, 1, "", "A_dagger"]], "deepinv.physics.SpaceVaryingBlur": [[168, 1, 1, "", "A"], [168, 1, 1, "", "A_adjoint"], [168, 1, 1, "", "update_parameters"]], "deepinv.physics.Tomography": [[169, 1, 1, "", "A"], [169, 1, 1, "", "A_adjoint"], [169, 1, 1, "", "A_dagger"]], "deepinv.physics.UniformGaussianNoise": [[170, 1, 1, "", "forward"]], "deepinv.physics.UniformNoise": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "update_parameters"]], "deepinv.physics.blur": [[173, 2, 1, "", "bicubic_filter"], [174, 2, 1, "", "bilinear_filter"], [175, 2, 1, "", "gaussian_blur"]], "deepinv.physics.functional": [[176, 0, 1, "", "IRadon"], [177, 0, 1, "", "Radon"], [178, 0, 1, "", "conv2d"], [179, 0, 1, "", "conv2d_fft"], [180, 0, 1, "", "conv3d"], [181, 0, 1, "", "conv_transpose2d"], [182, 0, 1, "", "conv_transpose2d_fft"], [183, 0, 1, "", "conv_transpose3d"], [184, 0, 1, "", "histogram"], [185, 0, 1, "", "histogramdd"], [186, 0, 1, "", "multiplier"], [187, 0, 1, "", "multiplier_adjoint"], [188, 0, 1, "", "product_convolution2d"]], "deepinv.physics.functional.IRadon": [[176, 1, 1, "", "forward"]], "deepinv.physics.functional.Radon": [[177, 1, 1, "", "forward"]], "deepinv.physics.generator": [[189, 0, 1, "", "DiffractionBlurGenerator"], [190, 0, 1, "", "EquispacedMaskGenerator"], [191, 0, 1, "", "GaussianMaskGenerator"], [192, 0, 1, "", "GeneratorMixture"], [193, 0, 1, "", "MotionBlurGenerator"], [194, 0, 1, "", "PhysicsGenerator"], [195, 0, 1, "", "RandomMaskGenerator"], [196, 0, 1, "", "SigmaGenerator"]], "deepinv.physics.generator.DiffractionBlurGenerator": [[189, 1, 1, "", "generate_coeff"], [189, 1, 1, "", "step"]], "deepinv.physics.generator.EquispacedMaskGenerator": [[190, 1, 1, "", "sample_mask"]], "deepinv.physics.generator.GaussianMaskGenerator": [[191, 1, 1, "", "get_pdf"]], "deepinv.physics.generator.GeneratorMixture": [[192, 1, 1, "", "step"]], "deepinv.physics.generator.MotionBlurGenerator": [[193, 1, 1, "", "f_matern"], [193, 1, 1, "", "matern_kernel"], [193, 1, 1, "", "step"]], "deepinv.physics.generator.PhysicsGenerator": [[194, 1, 1, "", "__add__"], [194, 1, 1, "", "step"]], "deepinv.physics.generator.RandomMaskGenerator": [[195, 1, 1, "", "get_pdf"], [195, 1, 1, "", "sample_mask"]], "deepinv.physics.generator.SigmaGenerator": [[196, 1, 1, "", "step"]], "deepinv.sampling": [[197, 0, 1, "", "DDRM"], [198, 0, 1, "", "DPS"], [199, 0, 1, "", "DiffPIR"], [200, 0, 1, "", "DiffusionSampler"], [201, 0, 1, "", "MonteCarlo"], [202, 0, 1, "", "SKRock"], [203, 0, 1, "", "ULA"]], "deepinv.sampling.DDRM": [[197, 1, 1, "", "forward"]], "deepinv.sampling.DPS": [[198, 1, 1, "", "compute_alpha_betas"], [198, 1, 1, "", "forward"]], "deepinv.sampling.DiffPIR": [[199, 1, 1, "", "find_nearest"], [199, 1, 1, "", "forward"], [199, 1, 1, "", "get_alpha_beta"], [199, 1, 1, "", "get_alpha_prod"], [199, 1, 1, "", "get_noise_schedule"]], "deepinv.sampling.MonteCarlo": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "get_chain"], [201, 1, 1, "", "mean_has_converged"], [201, 1, 1, "", "reset"], [201, 1, 1, "", "var_has_converged"]], "deepinv.transform": [[206, 0, 1, "", "Homography"], [207, 0, 1, "", "Rotate"], [208, 0, 1, "", "Scale"], [209, 0, 1, "", "Shift"]], "deepinv.transform.Homography": [[206, 1, 1, "", "forward"]], "deepinv.transform.Rotate": [[207, 1, 1, "", "forward"]], "deepinv.transform.Scale": [[208, 1, 1, "", "forward"]], "deepinv.transform.Shift": [[209, 1, 1, "", "forward"]], "deepinv.transform.projective": [[210, 0, 1, "", "Affine"], [211, 0, 1, "", "Euclidean"], [212, 0, 1, "", "PanTiltRotate"], [213, 0, 1, "", "Similarity"]], "deepinv.transform.projective.Affine": [[210, 1, 1, "", "forward"]], "deepinv.transform.projective.Euclidean": [[211, 1, 1, "", "forward"]], "deepinv.transform.projective.PanTiltRotate": [[212, 1, 1, "", "forward"]], "deepinv.transform.projective.Similarity": [[213, 1, 1, "", "forward"]], "deepinv.unfolded": [[214, 0, 1, "", "BaseDEQ"], [215, 0, 1, "", "BaseUnfold"], [216, 2, 1, "", "DEQ_builder"], [217, 2, 1, "", "unfolded_builder"]], "deepinv.unfolded.BaseDEQ": [[214, 1, 1, "", "forward"]], "deepinv.utils": [[218, 0, 1, "", "TensorList"], [219, 2, 1, "", "cal_psnr"], [220, 2, 1, "", "get_freer_gpu"], [221, 2, 1, "", "load_url_image"], [222, 2, 1, "", "ones_like"], [223, 2, 1, "", "plot"], [224, 2, 1, "", "plot_curves"], [225, 2, 1, "", "plot_inset"], [226, 2, 1, "", "plot_parameters"], [227, 2, 1, "", "rand_like"], [228, 2, 1, "", "randn_like"], [229, 2, 1, "", "zeros_like"]], "deepinv.utils.TensorList": [[218, 1, 1, "", "__add__"], [218, 1, 1, "", "__mul__"], [218, 1, 1, "", "__neg__"], [218, 1, 1, "", "__sub__"], [218, 1, 1, "", "__truediv__"], [218, 1, 1, "", "append"], [218, 1, 1, "", "conj"], [218, 1, 1, "", "flatten"], [218, 1, 1, "", "reshape"], [218, 1, 1, "", "sum"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "terms": {"": [0, 2, 3, 4, 5, 7, 9, 12, 14, 15, 16, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 57, 62, 79, 93, 95, 96, 99, 104, 105, 106, 107, 114, 130, 148, 150, 152, 158, 189, 193, 201, 204, 205, 213, 218, 225], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 54, 56, 57, 58, 61, 62, 67, 68, 69, 70, 73, 75, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 94, 95, 99, 100, 103, 104, 105, 107, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 223, 225, 227], "00": [3, 4, 5, 7, 9, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 61], "000": [9, 39, 43], "0000": [54, 115, 146, 147, 149, 150, 155, 194], "0001": [63, 95, 113, 117, 199, 214], "0002": 9, "001": [27, 37, 69, 70, 84, 85, 115, 128, 156, 161, 201, 202, 203], "00143": 152, "002": [0, 1, 35, 43, 61], "003": [22, 40, 43], "004": [22, 35, 37, 43], "0045": 2, "0048": 2, "00490826": 136, "006": 35, "008": [12, 33], "0082": 2, "00e": [3, 17, 24, 28], "00it": 3, "00m": 19, "01": [1, 3, 7, 9, 12, 13, 16, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 34, 38, 41, 44, 45, 46, 50, 61, 83, 84, 85, 94, 107, 196], "0100": 7, "0119": 2, "012": 44, "0129": 2, "0146": 152, "0152": 2, "016": [22, 44], "0164941570778203": 22, "01831": 98, "02": [3, 10, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 34, 38, 46, 61, 95, 122, 157, 199], "0202": 70, "0214": 2, "0216": 2, "022": 12, "023": 33, "0241": 152, "027": 44, "02it": 5, "03": [3, 10, 13, 20, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 36, 40, 45, 46, 61, 225], "0351": 158, "03521": 148, "0355": 2, "03679": 89, "0370": 2, "039": [40, 41], "0398": [2, 152], "03981": 96, "04": [9, 13, 20, 24, 29, 30, 32, 34, 41, 61, 190, 191, 195], "0402": 2, "041": 40, "0412434538651434": 40, "0418": 158, "0427": 7, "043": [22, 40], "0434": 2, "044": 41, "0463": 2, "0470": 2, "04715": 203, "0479": [2, 148], "0481": 7, "0484": 7, "05": [3, 9, 11, 16, 17, 20, 21, 24, 29, 30, 34, 43, 48, 56, 61, 106, 107, 113, 118, 119, 134, 143, 144, 145, 199, 202, 203], "0512": [2, 7], "052": 44, "0526": 7, "0535": 7, "0539": 2, "0545": 7, "056": [12, 43], "06": [3, 17, 18, 20, 24, 26, 29, 30, 34, 61], "060": 24, "0600": 2, "061": 43, "0622": 2, "064": 12, "06474": [101, 102], "0654": 2, "0664": 2, "067": [32, 43], "0676": 2, "068": 36, "0684": 2, "069": [41, 43], "06it": [5, 30], "07": [13, 20, 30, 61], "071": 18, "0712": 151, "0734": 165, "074": 40, "0743": 165, "075": 45, "077": [169, 177], "079": 40, "07it": 20, "08": [0, 20, 24, 26, 28, 30, 32, 38, 56, 61, 131, 144], "0800": 63, "0801": 63, "0845": 155, "085": 42, "08845": 202, "08995": 199, "09": [24, 30, 34, 46, 61], "090": [22, 26, 61], "0900": 63, "09327": [206, 212], "094": 43, "099": 42, "0m": [34, 45], "0mb": [22, 34, 36], "0mib": [34, 45], "0x7fa54a67dac0": [190, 191, 195], "0x7fa606a8b430": [5, 11, 31], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 56, 57, 58, 62, 68, 70, 72, 75, 78, 79, 81, 83, 84, 85, 86, 87, 88, 92, 93, 95, 97, 98, 99, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 223, 225, 227], "10": [2, 6, 9, 10, 12, 15, 19, 20, 24, 27, 28, 29, 30, 31, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 56, 69, 70, 78, 96, 110, 142, 146, 147, 148, 152, 165, 169, 177, 184, 185, 197, 201, 202, 219], "100": [3, 4, 5, 6, 7, 9, 12, 16, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 41, 43, 44, 45, 62, 66, 113, 118, 119, 134, 143, 144, 145, 148, 156, 197, 199, 200, 205], "1000": [9, 12, 29, 30, 40, 41, 42, 45, 90, 95, 106, 107, 131, 193, 198, 199, 201, 202, 203], "10000": 20, "1006": 194, "101": [5, 20, 30], "102": [20, 30], "1024": [20, 122, 157], "103": [5, 20, 30], "1031": 6, "103664588928222": 35, "104": [5, 20, 30, 35], "105": [5, 20, 30], "105m": 34, "106": [5, 20, 30], "1068": 169, "107": [20, 30], "107mb": [24, 30], "108": [15, 20, 30], "108m": [9, 22], "109": [20, 30], "10it": 20, "10x": [41, 42], "11": [5, 8, 12, 13, 20, 25, 29, 30, 34, 40, 41, 42, 45, 107], "110": [20, 30], "111": [20, 30], "112": [20, 30], "11232": 68, "113": [20, 30], "1137": 96, "113m": [30, 34], "114": [3, 13, 20, 30, 61], "1140": 10, "1145": 16, "115": [20, 30], "116": [20, 30], "117": [20, 30], "11793": 197, "118": [20, 30], "11888": 28, "119": [20, 30], "11it": 30, "12": [12, 15, 20, 21, 24, 26, 29, 30, 34, 40, 42, 61, 112], "120": [20, 30], "120m": 34, "121": [20, 29, 30], "12151": 75, "122": [20, 29, 30], "123": [20, 30], "1231": 165, "124": [20, 30], "124710422": 37, "124956766764324": 40, "125": [2, 20, 29, 30, 40], "125m": 9, "126": [20, 30], "127": [20, 30], "127m": 34, "128": [10, 12, 20, 30, 34, 43, 44, 49, 93, 95, 99, 105], "128x128": [12, 34, 44], "129": [20, 30], "12it": [20, 30], "12m": [34, 35], "13": [3, 9, 20, 29, 30, 35, 41], "130": [20, 30], "131": [20, 30], "132": [20, 30], "1322": 43, "13247v2": [69, 70], "133": [20, 30], "1332": 43, "134": [20, 30], "13472792": 37, "134905856": 33, "134m": [22, 34], "135": [12, 17, 18, 20, 30, 61], "135388067": 33, "13539821": 41, "136": [20, 30], "137": [20, 30], "138": [20, 30, 43], "139": [20, 30], "13it": [3, 30, 33, 41], "14": [17, 20, 29, 30, 33, 34, 38, 40, 41, 61], "140": [20, 30], "1406": 193, "140m": 30, "141": [20, 30], "141m": 34, "142": [20, 30], "143": [20, 30], "144": [20, 30], "145": [20, 30], "146": [20, 30, 42], "14687": 198, "147": [20, 30, 42], "14756": 68, "148": [20, 30, 42], "149": [20, 30, 42], "149m": 34, "14it": 30, "14m": [36, 37], "15": [3, 16, 20, 22, 27, 29, 30, 41, 42, 44, 45, 49, 105, 189], "150": [20, 30, 34], "1506": 148, "151": [20, 30, 40], "1510": 152, "152": [20, 23, 26, 30, 42, 61], "152mb": 35, "153": [20, 30], "154": [20, 30, 42], "155": [20, 30, 40], "155630111694336": 43, "156": [20, 30, 42, 43], "156m": 34, "157": [20, 30], "1577": 194, "158": [20, 30, 106, 107], "159": [20, 30], "159m": 22, "15it": [28, 30], "16": [2, 3, 8, 12, 19, 20, 22, 24, 25, 29, 30, 34, 40, 44, 46, 51, 56, 58, 61, 97, 116, 146, 147, 152, 156, 167, 168, 206, 210, 211, 212, 213, 217], "160": [19, 20, 30], "1608": 96, "161": [20, 30], "1610": 9, "1611": 89, "162": [20, 30], "163": [20, 30], "163m": 34, "164": [9, 20, 30], "164634704589844": 22, "1648877": [37, 41], "165": [20, 22, 30], "1650": 169, "165m": 30, "166": [20, 30], "1666": 169, "167": [20, 30], "16753367": 41, "168": [20, 30], "169": [10, 13, 20, 30, 61], "16it": [30, 37], "16x16": [56, 146, 147, 156, 206, 210, 211, 212, 213], "17": [3, 9, 12, 20, 24, 27, 29, 30, 34, 43, 44, 223], "170": [20, 30], "1707": [101, 102], "171": [20, 30, 45], "1719846664": 33, "171m": 34, "172": [20, 30], "173": [2, 20, 30], "1730": 158, "173828125": 0, "174": [20, 30], "175": [20, 30], "176": [20, 30], "176551606527662": 45, "177": [20, 30, 43, 45], "178": [20, 30, 40], "1788": [150, 155], "178m": 34, "179": [20, 30], "179mb": 19, "17it": 30, "17m": 34, "18": [3, 5, 20, 21, 22, 29, 30, 33, 34, 43, 45, 107], "180": [20, 30, 105, 169, 176, 177, 206, 210, 211, 212, 213], "181": [12, 20, 30, 44], "1811429737324528": 12, "1811447654924281": 44, "182": [20, 30], "183": [20, 30], "1830": 17, "184": [20, 24, 30, 44], "184494018554688": 44, "184m": 22, "185": [20, 30], "1858": 165, "185m": 34, "186": [20, 30], "186mb": 9, "187": [20, 30], "187019": 34, "188": [20, 30, 45], "188165": 40, "188174": 45, "1883849960402073": 45, "189": [20, 30, 41], "18it": [20, 30], "19": [2, 12, 20, 28, 29, 30, 34, 36, 37, 40, 41, 43, 44], "190": [7, 13, 20, 30, 61], "1900544": 41, "1901": 165, "1908": 202, "191": [20, 30], "191m": 30, "191mb": 19, "192": [20, 30], "192m": 34, "193": [20, 30, 40], "194": [20, 30], "194mb": 22, "195": [20, 30], "196": [20, 30], "197": [20, 30], "198": [20, 30], "1985": 151, "199": [20, 30], "199m": 34, "19e": 24, "19it": 30, "1_alex": 22, "1conv": 105, "1d": [191, 195], "1e": [0, 3, 5, 8, 10, 12, 15, 16, 20, 24, 33, 34, 35, 36, 37, 40, 43, 44, 45, 54, 70, 106, 107, 112, 113, 117, 118, 119, 131, 143, 144, 145, 147, 214], "1e16": 118, "1e2": 27, "1e3": [27, 201], "1e4": 43, "1f": 140, "1j": [0, 9], "1m": [30, 34, 45], "1mib": [34, 44], "1z2us9zhjdgolu6r1jee0s2bbej2xv5": 20, "2": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 49, 50, 54, 56, 57, 68, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 93, 94, 95, 97, 98, 99, 100, 103, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 121, 123, 130, 131, 132, 133, 136, 137, 141, 142, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 189, 190, 191, 193, 195, 198, 199, 200, 201, 202, 203, 211, 213, 223, 225], "20": [0, 1, 7, 11, 12, 16, 19, 20, 28, 29, 30, 35, 40, 42, 43, 44, 49, 54, 61, 78, 96, 219], "200": [20, 23, 30, 41, 42, 44, 97, 116], "2000": 16, "2007": 91, "2009": [3, 15, 16, 17, 22, 24, 107], "2010": 106, "2011": 116, "2012": [69, 70], "2013": [106, 107], "2017": [3, 22, 114, 188], "2018": [5, 43, 94], "202": 17, "2020": 43, "2022": [5, 27, 28, 31], "2024": 0, "203mb": 30, "2040": 63, "2048": 11, "205": 40, "2064": 151, "2067533657179195": 40, "2067779": 12, "2069441": 35, "207": 40, "207m": 34, "207mb": 24, "208": 42, "209m": 22, "20it": [20, 30], "20m1387961": 96, "20mib": 16, "21": [12, 16, 20, 23, 29, 30, 34, 40, 44], "2103": [68, 203], "2133": 148, "2139": 151, "214m": 34, "215": [34, 38, 61], "216": 42, "217": 9, "217m": 30, "219mb": 9, "21it": [27, 30], "22": [5, 9, 12, 20, 24, 29, 30, 33, 40, 44], "2201": [75, 197], "2209": [28, 198], "221": 44, "221m": 34, "222mb": 24, "223": [5, 13, 61], "227mb": 22, "228m": 34, "229mb": 9, "22e": 28, "22it": [20, 30], "22m": 45, "22urban100_hr": 33, "23": [8, 13, 20, 23, 27, 29, 30, 34, 35, 40, 43], "230": [33, 38, 61], "2305": 199, "2312": [68, 98], "232": [12, 29, 32, 40, 61], "232221921284992": 12, "232mb": 22, "233": [40, 46, 61], "233m": 22, "235m": 34, "236mb": 9, "237": 22, "237mb": 30, "239547729492188": 40, "23it": [5, 30], "24": [17, 20, 29, 30, 36, 37, 40, 43, 46, 61], "240": 40, "2403": [206, 212], "2419": 107, "24218658": 41, "242437189": 33, "24248320": 33, "242m": 34, "242mb": 24, "2434": 107, "243m": 30, "244": 44, "244mb": 22, "245mb": 9, "248mb": 30, "249m": 34, "24it": [30, 31], "25": [0, 19, 20, 27, 29, 30, 34, 36, 37, 43, 45, 49, 105, 164, 189, 193, 199], "2500": [56, 94, 146, 147], "250mb": 30, "252": [42, 46, 61], "252mb": [22, 30], "253": 40, "2532": 196, "253mb": 30, "254mb": [22, 30], "255": [19, 20, 29, 30, 31, 49, 105], "2550": 10, "256": [2, 3, 4, 11, 16, 17, 22, 24, 33, 49, 92, 93, 95, 99, 104, 124, 168, 189, 223], "2568176329468139": 12, "256m": 34, "256mb": 30, "256x256": [29, 30], "257": 12, "257mb": 22, "258": [169, 177], "259mb": 22, "25b929945e053de19bf8f575bd0821abab1eac7f5f6c5c7980221d8ed13066c6": 33, "25m": 33, "26": [9, 20, 22, 24, 28, 29, 30, 34, 37, 43], "260": 24, "261": 41, "261mb": 30, "262mb": 30, "2640": 169, "264m": 34, "264mb": 30, "265": 45, "265mb": 30, "266": [6, 13, 61], "266mb": 30, "2674": 169, "269m": 30, "26m": 12, "27": [20, 29, 30, 33, 34, 38, 61], "271m": 34, "278m": 34, "27it": 5, "27urban100_hr": 33, "28": [19, 20, 28, 29, 30, 34, 35, 41, 42, 48, 56], "281": 41, "282": 41, "283": [30, 32, 61], "285": 42, "285m": 34, "28690": 0, "28881": [37, 41], "289": 35, "28crop": [5, 27, 28, 31], "28e": 24, "29": [5, 11, 20, 24, 26, 27, 28, 29, 30, 31, 34], "292m": 34, "294": 3, "2942931049347548": 3, "295m": 30, "297": 0, "2989": 10, "299m": 34, "29it": 20, "2_2": [78, 219], "2a": 84, "2ax_": 23, "2cm": 117, "2d": [0, 2, 11, 33, 109, 158, 164, 167, 178, 179, 181, 182, 188, 189, 193, 206, 207, 208, 209, 213], "2e": [0, 10], "2f": [0, 5, 8, 9, 10, 15, 16, 17, 19, 20, 23, 25, 27, 28, 31, 69], "2fgzip": 33, "2m": [22, 24, 30, 34, 45, 148, 165], "2mb": 20, "2mib": [12, 34, 45], "2nd": 106, "2x2": [56, 146, 147], "2x_": [23, 44], "3": [0, 2, 3, 4, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 35, 40, 41, 42, 43, 44, 45, 49, 51, 56, 58, 70, 93, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 116, 121, 133, 138, 148, 149, 150, 151, 155, 156, 158, 159, 165, 166, 167, 169, 172, 173, 189, 192, 193, 194, 197, 199, 206, 210, 211, 212, 213, 223], "30": [9, 19, 20, 22, 23, 25, 28, 29, 30, 34, 41, 43, 44], "300": [9, 16, 17, 48, 56], "303": 40, "305028949": 33, "306m": 34, "307": [27, 32, 61], "30899695": 41, "30e": 3, "30it": [20, 41], "31": [2, 16, 20, 30], "3132": 10, "313m": 34, "319": 42, "3197": 165, "32": [2, 4, 5, 7, 9, 10, 12, 19, 20, 22, 24, 25, 27, 28, 30, 31, 34, 36, 37, 40, 43, 44, 45, 49, 56, 90, 97, 101, 102, 116, 148, 152, 156, 159, 167, 168, 197, 199], "320": [19, 158], "320m": [30, 34], "320x320": 34, "321": 42, "3223": 151, "32614100": 81, "327m": 34, "32x32": [12, 44, 152, 156, 159, 167, 197, 199], "33": [3, 5, 19, 20, 24, 28, 29, 30], "3326": 158, "333": 188, "334": 3, "334139506022137": 3, "3345483710340866": 35, "335": 35, "335m": 34, "336": 46, "337082955": 33, "3372": 9, "339979335": 33, "33it": 20, "34": [20, 22, 30, 31, 32, 34, 61], "342m": 34, "345m": 30, "346": [36, 37], "346022415161134": [36, 37], "348": 188, "349m": 34, "34it": [5, 29], "35": [19, 20, 30, 45], "352": [40, 45], "354069699": 33, "356m": 34, "357": 95, "357m": 30, "358": 12, "3587": 2, "35it": 3, "36": [20, 22, 24, 30, 34], "360": [169, 207], "36174953": 41, "362": 20, "3624": 151, "363m": 34, "37": [20, 29, 30, 34, 43, 61], "370m": 34, "372": 43, "374": [15, 18, 61], "377": 33, "377m": 34, "37it": 20, "38": [9, 20, 30, 35], "384": 27, "384m": 34, "3856": 169, "385k": [4, 16, 22, 45], "3864": 165, "388799536718082": 34, "389": 34, "38e": 3, "38m": 9, "39": [20, 30, 34, 43, 44, 45], "3915292985620225": 34, "391m": 34, "392": 34, "3929": [22, 114], "3938": [22, 114], "3986": [150, 155], "399": 37, "399m": 34, "3b": 33, "3c353_gdth": 0, "3conv": 105, "3d": [14, 18, 33, 61, 91, 109, 110, 133, 153, 180, 183, 212, 219, 220, 223], "3dutf": 33, "3f": 9, "3k": 7, "3m": 34, "3mb": [19, 33], "3mib": 34, "3x3": [148, 149, 151, 155, 156, 158, 165, 169], "4": [0, 2, 3, 4, 6, 9, 11, 12, 15, 17, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 54, 56, 67, 92, 93, 97, 98, 100, 103, 104, 105, 108, 113, 115, 116, 117, 146, 147, 156, 159, 165, 169, 172, 173, 190, 191, 195, 214, 223, 225], "40": [19, 20, 28, 29, 30, 31, 33, 34, 40, 46], "400": 9, "403": [37, 41, 42], "4033": [150, 155], "407": [12, 13, 61], "4099398": 83, "40it": [5, 20], "41": [5, 20, 28, 30, 34, 43], "411": 34, "4114185158882959": 34, "414": [8, 13, 61], "41it": 20, "42": [12, 20, 30, 43, 45], "420": 37, "420426559448241": 37, "421": 42, "422": 27, "4238": 148, "42it": [20, 33], "43": [16, 20, 29, 30, 34, 41, 46, 61], "430": [11, 13, 61], "4322": 151, "4375": 0, "44": [5, 20, 30, 33], "4422": 148, "444737": [36, 37], "444867": 33, "4456448": 41, "447": 10, "44it": [28, 41], "45": [9, 10, 11, 15, 18, 20, 30, 34, 41, 42, 45, 61, 169], "454": 45, "4542": [37, 41], "455": [4, 13, 61], "4557": 165, "45it": [5, 20], "46": [0, 9, 20, 22, 30, 34, 45], "460": [106, 107], "467": 42, "4675248": 37, "468": 40, "46it": 20, "47": [20, 27, 29, 30, 34, 42], "471": [35, 45, 46, 61], "471277618408202": 35, "473": 61, "475": 42, "47673774": 37, "479": [44, 106, 107], "48": [8, 9, 20, 30, 32, 34, 42, 103, 167], "4860": 169, "487": 42, "4882": 169, "48it": 20, "49": [20, 30, 61, 70], "491": [9, 13, 61], "492": 106, "493": 42, "49it": [31, 33], "4a": 173, "4m": [34, 45], "4mb": [20, 33], "4mib": [34, 45], "4x": 158, "4x4": 169, "5": [0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 15, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 54, 56, 58, 79, 84, 85, 87, 88, 95, 101, 102, 105, 106, 107, 108, 113, 115, 117, 124, 147, 148, 151, 156, 169, 170, 172, 173, 174, 177, 189, 192, 193, 196, 197, 199, 203, 206, 208, 210, 211, 212, 213, 214, 215, 217, 225], "50": [0, 6, 7, 11, 12, 19, 20, 28, 29, 30, 34, 35, 36, 44, 49, 56, 70, 105, 115, 117, 128, 142, 156, 161, 166, 206, 210, 211, 212, 213, 214], "500": 3, "5000": [0, 19], "505": 35, "508": 43, "50it": 20, "50th": 6, "51": [17, 20, 30, 70], "512": [2, 50, 93, 99], "5190046": 41, "51it": 28, "52": [20, 30, 34, 45], "5207445924718446": 37, "521": 37, "524": [24, 26, 61], "526": 106, "5281": [169, 177], "5284": 148, "52it": 20, "53": [20, 29, 30, 45], "5305": 158, "532": 42, "5348120019239333": 36, "535": 36, "537": 43, "53it": 20, "53mib": 45, "54": [0, 18, 20, 30, 34, 38, 44], "5410": [150, 155], "547": 45, "54it": [20, 37], "55": [5, 20, 24, 30, 34, 37, 45], "554": 42, "5567108": 154, "55it": 20, "55m": 23, "56": [20, 30, 44], "561": 42, "563": [16, 18, 43, 46, 61], "567": 42, "5684": 150, "56it": 20, "56m": 31, "57": [0, 7, 9, 20, 22, 24, 29, 30, 34, 45, 169, 177], "571": 42, "5720": 169, "576": 24, "57it": 29, "58": [20, 30, 34, 36, 188], "582": 41, "586": [2, 13, 61], "5870": 10, "58it": 20, "59": [20, 22, 30, 34], "59146240": 33, "592": [28, 32, 61], "595": 12, "5976": 0, "59e": 28, "59it": 33, "5a": 173, "5e": [12, 34, 35, 36, 37, 40, 42, 45], "5e3": 31, "5j": 9, "5m": [9, 30, 45], "5mb": 9, "5mib": [34, 45], "5x5": [27, 29], "6": [0, 2, 12, 15, 16, 19, 20, 22, 24, 28, 29, 30, 33, 34, 40, 42, 43, 44, 45, 46, 65, 97, 102, 103, 105, 116, 124, 125], "60": [12, 17, 20, 28, 29, 30, 44, 45], "60it": 28, "61": [20, 30, 34, 44], "610797882080078": 43, "611": 43, "6198133": 41, "61it": 20, "62": [9, 12, 20, 24, 30, 44], "623": [40, 42], "624": 21, "62it": [20, 37], "63": [20, 24, 29, 30, 34, 45], "637": 40, "63it": [20, 29], "64": [2, 5, 8, 10, 11, 16, 17, 20, 23, 24, 29, 30, 34, 35, 41, 42, 45, 93, 96, 99, 104, 190, 191, 195], "6418031": 73, "644": 34, "647": 22, "64718074966313777": 22, "648": 26, "64it": 20, "64x64": [11, 29, 30], "65": [12, 20, 30, 33], "652": [31, 32, 61], "6536": 169, "655360": 41, "657": [12, 44], "6573867797851562": 44, "6573870976765948": 12, "6597": 165, "65d9d84a34b72c6f7ca1e26a12df1e4c": 33, "65it": [29, 41], "66": [5, 9, 20, 27, 30, 34, 45, 103], "665": 36, "6687": 10, "66it": [20, 29], "67": [3, 20, 24, 28, 29, 30, 34, 41], "6714502": [84, 85], "67e": 10, "67it": [20, 28, 29], "68": [8, 20, 22, 30, 34, 45], "688": 45, "6880683898925781": 45, "689632394247482": 44, "68it": [20, 28], "69": [12, 20, 30, 34, 45], "690": 44, "6995": 169, "69it": [20, 28, 29], "6m": [9, 22, 34], "6mib": [12, 34, 44, 45], "7": [0, 8, 9, 12, 19, 20, 28, 29, 30, 33, 34, 40, 41, 42, 43, 45, 56, 92, 101, 146, 147, 152, 155, 164, 199], "70": [20, 28, 29, 30, 34, 45, 155], "703": 41, "707": 43, "7072": 158, "70e": 3, "70it": [20, 28, 29, 37, 41], "71": [20, 30, 34, 45], "7137": 169, "719": [19, 21, 61], "7193": [150, 155], "71it": [20, 29], "72": [3, 20, 28, 30, 33, 34, 106], "726": [36, 38, 61], "72it": [5, 20, 29], "73": [20, 29, 30, 34], "7302": 151, "7340": 169, "7379700494042969": 35, "738": 35, "739k": 20, "73it": [20, 29, 41], "74": [20, 30], "7412": 9, "742": 40, "7444": 193, "745": 13, "74it": [20, 29], "75": [7, 11, 20, 22, 29, 30, 34, 41, 44, 208], "75595": 43, "757126": 0, "75it": 20, "75m": 22, "75mib": 22, "76": [20, 30, 33, 34, 45], "763": 40, "76e": 24, "76it": 20, "77": [5, 6, 20, 29, 30, 34], "772": 42, "7754": 148, "7768": 165, "777": 40, "77it": 20, "77mib": 4, "78": [0, 20, 30, 40, 41, 42, 43], "785": 40, "786": [36, 37, 40], "7863402359700375": [36, 37], "78it": 20, "79": [20, 22, 30, 33, 34], "791": 40, "797": 12, "7be5be79": 22, "7e1upfqlyoxih1": 33, "7e3mo5f8": 33, "7e4": 33, "7ecmvzcg9uc2uty29udgvudc1kaxnwb3npdglvbj0qjnjlc3bvbnnllwnvbnrlbnqtdhlwzt0qin1dfq__": 33, "7eg13ipym5gdjgjs": 33, "7egucrkzeyqowp": 33, "7ew0delvlu1y13zrdx2wyogyv": 33, "7ezdofyifemufwwylyg50fk8b": 33, "7ezlm": 33, "7ezpskhz": 33, "7m": [12, 19, 34, 44, 45], "7mb": [7, 31, 35, 37], "7mib": 34, "8": [0, 2, 3, 4, 5, 8, 9, 11, 12, 16, 17, 19, 20, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 49, 56, 97, 98, 103, 105, 107, 116, 131, 146, 147, 156, 159, 190, 191, 195], "80": [19, 20, 28, 29, 30, 34], "8064": 151, "80it": 20, "81": [20, 30, 40, 41], "81it": 20, "82": [9, 20, 22, 30, 34], "824": 12, "826": 36, "826116561889648": 36, "829": [41, 46, 61], "82it": 20, "83": [20, 29, 30, 34], "8307932": [169, 177], "8310": 9, "8380": 155, "839": 40, "83it": 20, "84": [9, 20, 30, 34], "843": 43, "8457": 169, "84it": 20, "85": [0, 20, 30, 197], "8522": 148, "856": 43, "85it": 20, "86": [9, 20, 30, 34, 45], "869": 41, "86it": [20, 41], "87": [9, 20, 23, 29, 30], "870": [37, 38, 61], "8714": 148, "872": 40, "87it": 20, "87k": 22, "88": [5, 20, 30, 34], "881": 40, "882": [25, 26, 61], "884": 9, "888": 12, "88it": 20, "89": [20, 30, 34], "8953": 148, "8994": 194, "89it": 20, "8a": 173, "8m": [9, 12, 19, 22, 24, 30, 35, 44, 45], "8mb": [22, 23], "8mib": [34, 44], "8x64x64": [190, 191, 195], "9": [2, 3, 16, 17, 19, 20, 22, 24, 28, 29, 30, 31, 33, 35, 40, 42, 43, 45, 81, 88, 100, 113, 156], "90": [2, 5, 15, 20, 22, 28, 29, 30, 34, 44, 49, 98], "900": 34, "9002": 169, "901": 40, "9026777601592963": 3, "903": 3, "904": [20, 21, 61], "909": 3, "909193356831867": 3, "90it": 20, "90m": 33, "91": [20, 22, 30, 34], "9127841": 166, "914": 40, "91it": 20, "92": [20, 30], "923609511493005": 34, "924": 34, "93": [20, 29, 30, 34], "934": 12, "9360": 169, "939": [35, 38, 61], "93it": 20, "94": [19, 20, 30], "942": 43, "9493": 169, "94it": 20, "95": [19, 20, 30, 34, 35], "952": 33, "953": 43, "9577798": 79, "958": 43, "95it": 20, "96": [10, 19, 20, 30, 31, 34, 45], "9605e": 56, "963": 43, "966": 40, "9674927": 41, "967542012532551": 22, "968": 22, "96it": 20, "96m": 44, "97": [20, 29, 30], "973": [34, 42], "97320960": 33, "9764864": 41, "9793": 169, "98": [20, 24, 30, 34], "980": 38, "988": [44, 46, 61], "989": 40, "9897": [148, 169], "98it": [5, 33], "99": [5, 20, 23, 30, 41, 43, 107], "9912422": [37, 41], "993": 44, "994": 43, "996": [40, 45], "9960276285807295": 45, "9971": 169, "999": 9, "99e": 17, "99it": 27, "9k": 20, "9m": [12, 24, 34], "9mib": [34, 45], "A": [0, 3, 7, 10, 12, 13, 14, 15, 16, 17, 19, 20, 23, 24, 25, 27, 29, 30, 35, 39, 40, 41, 42, 43, 44, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 66, 70, 74, 79, 83, 84, 85, 88, 89, 93, 95, 106, 107, 109, 113, 115, 117, 118, 119, 123, 136, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 172, 175, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 215, 220, 221, 223], "And": [103, 108], "As": [0, 15, 19, 20, 22, 29, 30, 33, 34, 35, 133], "At": 103, "By": [2, 22, 24, 62, 68, 74, 75, 77, 81, 82, 103, 113, 115, 123, 128, 129, 156, 159, 161, 201, 202, 203, 205, 206, 208], "For": [0, 2, 5, 7, 12, 15, 16, 17, 20, 23, 25, 29, 30, 33, 34, 40, 41, 42, 44, 45, 48, 50, 52, 54, 66, 103, 106, 107, 113, 128, 133, 144, 148, 157, 166, 179, 182, 190, 191, 195, 202, 203, 206, 214], "If": [0, 7, 8, 10, 20, 34, 35, 41, 42, 44, 47, 56, 57, 60, 62, 63, 66, 67, 73, 78, 81, 83, 84, 85, 88, 89, 93, 94, 95, 96, 98, 99, 104, 105, 109, 113, 116, 118, 123, 124, 130, 133, 134, 135, 136, 137, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 167, 168, 169, 171, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 201, 202, 203, 204, 214, 215, 216, 217, 219, 221, 223], "In": [0, 2, 3, 6, 7, 8, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 49, 52, 54, 56, 58, 62, 67, 95, 107, 112, 114, 119, 136, 156, 167, 169], "It": [2, 8, 16, 17, 20, 34, 49, 53, 56, 58, 59, 62, 66, 67, 68, 76, 86, 95, 96, 100, 121, 124, 144, 147, 148, 152, 156, 157, 159, 161, 167, 168, 173, 174, 197, 218], "No": [0, 3, 12, 22, 24, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 97, 116], "On": 20, "One": [2, 30, 41], "The": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 20, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 68, 70, 74, 75, 77, 79, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 123, 124, 127, 128, 138, 139, 140, 141, 142, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 169, 172, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 199, 201, 202, 203, 206, 212, 214, 218, 223, 225, 226], "Their": 43, "Then": [2, 20, 98], "There": [0, 30, 37, 122, 164], "These": [11, 33, 41, 42, 51, 128, 169, 210, 211, 213, 215], "To": [2, 7, 11, 19, 29, 40, 41, 44, 45, 79, 81, 87, 88, 103, 128], "With": [9, 30], "_": [0, 9, 15, 16, 17, 20, 23, 29, 30, 33, 35, 41, 42, 44, 50, 54, 56, 70, 75, 98, 106, 107, 113, 115, 118, 119, 120, 121, 126, 128, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 150, 192, 194, 196, 198, 199], "_0": 30, "_1": [15, 41, 113, 117, 119, 120], "_2": [0, 3, 15, 16, 17, 30, 35, 37, 41, 42, 44, 54, 69, 70, 79, 83, 84, 85, 86, 106, 107, 113, 117, 118, 119, 121, 132, 169, 202, 203], "__add__": [156, 161, 194, 218], "__class__": 33, "__init__": [0, 3, 10, 23, 24, 27, 43, 201], "__mul__": [156, 161, 218], "__name__": 33, "__neg__": 218, "__sub__": 218, "__truediv__": 218, "_c": [5, 11, 31], "_f": [58, 123, 215], "_g": [54, 58, 123, 215], "_gener": [190, 191, 195], "_i": [78, 219], "_n": [109, 110], "_p": 73, "_t": [29, 30, 198, 199], "_vf": 2, "_x": [115, 156, 161], "a_": [35, 75, 148, 156, 160, 161], "a_1": [8, 36, 77, 81, 88, 156, 161], "a_2": [8, 36, 77, 81, 156, 161], "a_adjoint": [0, 5, 7, 10, 11, 16, 17, 23, 25, 27, 28, 31, 41, 42, 44, 56, 113, 115, 117, 146, 147, 148, 150, 152, 156, 159, 164, 168, 169, 172], "a_dagg": [0, 6, 8, 9, 10, 11, 20, 43, 56, 148, 150, 154, 156, 160, 161, 166, 169], "a_forward": [113, 115, 117], "a_g": 75, "a_t": [30, 198], "a_vjp": [115, 156, 160, 161], "ab": [2, 28, 29, 31, 68, 69, 70, 75, 96, 98, 101, 102, 148, 152, 167, 197, 198, 199, 202, 203, 206, 212], "aberr": 2, "abl": [29, 30], "about": [0, 9, 37, 49, 51, 66], "abov": [0, 33, 54, 56, 113, 136], "abs_angl": [9, 111], "absenc": 127, "absolut": [105, 111, 144, 145, 156, 161], "abstract": [73, 83, 84, 85, 154, 166], "abus": 123, "acceler": [11, 27, 34, 40, 56, 92, 113, 117, 158, 190, 191, 195, 202, 214], "accept": 111, "access": [33, 66], "accord": [79, 167, 190, 191, 192, 195], "accordingli": [97, 116], "account": [27, 47, 51, 93], "accur": 2, "achiev": [79, 81, 113], "acknowledg": 47, "acquir": 9, "acquisit": [34, 56, 113, 156, 161, 167, 201, 202, 203], "across": [7, 34, 41, 42, 44, 45, 62, 67, 113, 167, 190, 191, 195, 214, 225], "act": [5, 37, 54, 56, 113, 157], "act_mod": [93, 99], "action": [98, 210, 211, 212, 213], "activ": [2, 93, 96, 99, 189], "actual": [30, 123], "ad": [8, 14, 29, 51, 53, 59, 79, 87, 153, 156, 157, 162, 163, 170, 171, 194], "ad_": 94, "adam": [5, 12, 20, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 94], "adapt": [4, 59, 77, 83, 84, 85, 95, 103, 105, 106, 107, 113, 114, 169, 177], "add": [0, 3, 4, 15, 16, 17, 22, 24, 56, 103, 105, 153, 156, 157, 161, 162, 163, 170, 171, 191, 218], "addit": [9, 30, 54, 62, 69, 79, 93, 99, 103, 113, 121, 134, 148, 156, 159, 169, 216, 217], "addition": [30, 208], "address": 47, "adj_project": 0, "adjnufftobj": 0, "adjoint": [0, 10, 16, 17, 25, 43, 44, 53, 56, 106, 107, 116, 131, 146, 147, 148, 150, 152, 156, 159, 164, 168, 169, 172, 178, 179, 182, 186, 187], "adjoint_funct": 156, "adjointness_test": [8, 10, 156], "adjust": [3, 150, 191], "adler": 43, "admit": 15, "admm": [3, 54, 60, 117, 134, 135, 215, 216, 217], "advanc": [1, 2, 61], "advantag": 27, "advis": 30, "af_": 5, "aff": [33, 210], "affect": [56, 67, 118, 156, 161], "affin": [33, 206], "after": [0, 7, 15, 20, 27, 47, 103, 105, 117, 164, 201, 226], "afterward": [43, 73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "again": [63, 66], "aghabigl": 0, "ai": [0, 62], "aim": [0, 47, 58], "airi": [0, 2], "al": [0, 3, 5, 16, 17, 22, 24, 29, 30, 33, 49, 55, 91, 94, 95, 96, 106, 108, 191, 206, 212], "alexnet": 22, "algebra": 27, "algorithm": [0, 7, 9, 10, 14, 26, 32, 34, 44, 46, 54, 60, 61, 62, 64, 67, 72, 82, 96, 100, 101, 102, 106, 107, 110, 113, 114, 115, 117, 118, 119, 121, 123, 126, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 156, 161, 167, 169, 175, 191, 198, 199, 200, 201, 202, 203, 204, 214, 215, 216, 217, 219, 220, 221, 223, 224, 226], "alia": 205, "align": [15, 23, 29, 30, 44, 50, 58, 135, 136, 137, 138, 139, 140, 141, 142, 175, 198, 199, 215], "all": [0, 2, 3, 4, 5, 9, 12, 14, 15, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 54, 56, 61, 62, 65, 66, 72, 73, 90, 92, 93, 94, 97, 98, 100, 101, 102, 103, 104, 109, 113, 115, 116, 123, 125, 133, 134, 155, 169, 176, 177, 185, 206, 210, 211, 212, 213, 215, 216, 217, 225], "allclos": [9, 56, 156, 172], "allow": [107, 146, 147, 155, 167, 218], "alon": [51, 68], "along": [0, 3, 16, 17, 23, 25, 43, 102, 113, 117, 175, 204, 206, 207, 209, 210, 211, 212, 213, 218], "alpha": [27, 29, 30, 31, 79, 87, 95, 99, 198, 199, 201, 202, 203], "alpha_j": 30, "alpha_k": 138, "alpha_t": 30, "alphas_cumprod": 29, "alreadi": [25, 63, 66], "also": [2, 8, 9, 10, 11, 25, 28, 30, 37, 41, 42, 47, 49, 50, 54, 56, 57, 58, 59, 60, 62, 67, 93, 95, 96, 99, 104, 105, 109, 119, 128, 130, 147, 150, 156, 158, 185], "altern": [22, 25, 29, 30, 55, 123, 135], "although": [73, 90, 92, 100, 101, 102, 104, 128, 176, 177, 206, 210, 211, 212, 213], "alwai": [30, 54, 167], "amazonaw": [37, 41], "among": [2, 16, 17, 22, 43, 52, 54, 133], "amount": [25, 29, 53, 203], "amplitud": [112, 171], "an": [0, 2, 3, 4, 7, 9, 10, 11, 12, 13, 14, 19, 20, 23, 24, 27, 28, 30, 31, 33, 34, 35, 37, 41, 42, 44, 47, 48, 54, 55, 56, 58, 60, 61, 62, 69, 83, 84, 85, 92, 93, 94, 95, 96, 98, 99, 104, 106, 107, 109, 110, 113, 121, 123, 124, 127, 128, 133, 134, 136, 138, 143, 148, 150, 153, 155, 156, 160, 161, 165, 167, 175, 198, 199, 201, 202, 203, 204, 206, 208, 212, 214, 215, 216, 217, 219, 220, 221, 223], "ancestr": 30, "anderson": [40, 113, 117, 214], "anderson_acceler": [40, 113, 117], "anderson_acceleration_backward": [40, 214], "anderson_acceleration_forward": 40, "anderson_acceleration_step": 117, "anderson_history_s": 40, "angl": [2, 9, 11, 14, 19, 21, 25, 43, 49, 61, 62, 65, 97, 115, 116, 122, 124, 125, 128, 150, 151, 156, 157, 161, 169, 171, 175, 176, 177, 206, 207, 219, 223], "ani": [4, 9, 10, 47, 49, 50, 58, 60, 62, 68, 74, 75, 77, 81, 82, 98, 124, 136, 156, 161, 169, 177, 191, 195, 204, 205, 214, 215], "anisotrop": 175, "anoth": 8, "ansi": 2, "ansi_standard_indic": 2, "antiproportion": 157, "ap": 105, "appear": [0, 56], "append": [9, 30, 218], "appli": [0, 2, 5, 15, 16, 17, 20, 23, 27, 28, 29, 30, 31, 41, 45, 50, 54, 55, 91, 95, 98, 106, 107, 108, 109, 111, 113, 130, 131, 133, 146, 147, 150, 152, 155, 156, 158, 159, 160, 164, 166, 167, 168, 176, 206, 207, 208, 209, 210, 211, 212, 213], "applic": [0, 33, 56, 106, 107], "apply_nois": [68, 75], "approach": [0, 35, 43, 52, 89], "appropri": [29, 98, 109, 121], "approx": [27, 30, 31, 53, 70, 169], "approxim": [0, 11, 20, 25, 27, 31, 42, 49, 57, 83, 84, 85, 87, 98, 109, 116, 130, 133, 169, 188, 198, 202], "ar": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 74, 75, 78, 79, 88, 94, 96, 101, 102, 103, 107, 108, 109, 110, 111, 113, 117, 123, 127, 133, 135, 136, 137, 140, 146, 148, 149, 150, 152, 154, 156, 159, 161, 165, 168, 169, 175, 176, 177, 181, 185, 188, 189, 190, 191, 194, 198, 201, 202, 203, 204, 206, 207, 210, 211, 213, 215, 219, 221, 223, 225, 226], "arang": [176, 177], "arbitrari": [9, 29, 30, 48, 109], "architectur": [5, 7, 12, 29, 34, 36, 37, 40, 44, 45, 49, 50, 58, 60, 89, 90, 92, 93, 96, 99, 103, 104, 105, 108, 217], "arg": [0, 3, 15, 20, 24, 42, 43, 44, 50, 54, 97, 106, 107, 109, 110, 113, 115, 116, 117, 120, 125, 126, 128, 129, 130, 131, 132, 133, 143, 156, 161, 190, 191, 195, 205, 214, 215], "argentina": [5, 27, 28, 31], "argmin": [29, 95, 118, 119, 121, 199], "args_model": 69, "argument": [2, 48, 69, 97, 103, 113, 116, 117, 122, 134, 184, 205, 215, 216, 217], "aris": 20, "around": [6, 59, 175], "arrai": [0, 29, 95, 197, 199, 219], "arridg": 43, "art": [0, 60], "artefact": 49, "artifact": [35, 62, 89, 105, 169, 177, 204, 205], "artifact_remov": 44, "artifactremov": [12, 35, 36, 37, 52, 148, 156, 159, 169], "arxiv": [28, 68, 69, 70, 75, 89, 96, 98, 101, 102, 148, 152, 193, 197, 198, 199, 202, 203, 206, 212], "asarrai": 29, "ask": 47, "assert": [0, 9, 56, 66], "assign": [67, 159], "associ": [0, 6, 11, 29, 41, 48, 49, 67, 68, 72, 74, 75, 77, 79, 81, 83, 84, 85, 106, 107, 113, 115, 117, 121, 131, 185, 201], "assum": [29, 30, 68, 95, 118, 147, 169, 176, 177, 202, 203], "assumpt": [136, 198], "astigmat": 2, "at_next": 30, "atan": 25, "aten": [2, 6], "atmospher": [56, 154], "attach": 33, "attent": [25, 95, 103, 105], "attn_drop_r": 105, "attr": 2, "attribut": [4, 29, 52, 135, 136, 137, 153, 157, 162, 163, 170, 171, 226], "atu": 102, "au": [118, 119, 121], "augment": [51, 65, 67, 68, 75], "author": [29, 30, 43, 49, 79, 95, 105], "authorship": 47, "auto_exampl": [1, 13, 18, 21, 26, 32, 38, 39, 46], "auto_examples_jupyt": 14, "auto_examples_python": 14, "autograd": [30, 56], "automat": [3, 9, 25, 30, 47, 49, 56, 115, 128, 129, 156, 161], "aux": 113, "aux_x": 30, "auxiliari": [106, 113, 117], "avail": [0, 2, 12, 15, 44, 48, 49, 50, 56, 58, 93, 95, 96, 99, 104, 105, 109, 110, 118, 119, 133, 188], "averag": [10, 15, 28, 31, 49, 56, 79, 81, 87, 88, 93, 98, 99, 122, 146, 147, 156, 157, 219], "avg": [20, 62], "avgpool": [93, 99], "avoid": [5, 27, 94, 112, 125, 201], "awgn": 30, "ax": [0, 3, 16, 17, 19, 20, 31, 41, 42, 44, 56, 57, 113, 116, 117, 119, 121, 136, 144, 148, 150, 156, 169, 175], "ax_": 27, "ax_cur": 101, "ax_k": [41, 42], "axi": [15, 29, 169, 177, 206], "b": [5, 6, 7, 9, 19, 20, 22, 23, 24, 27, 28, 30, 31, 33, 34, 35, 36, 37, 42, 44, 56, 78, 83, 84, 85, 100, 105, 112, 115, 118, 121, 142, 144, 158, 160, 165, 166, 168, 172, 178, 179, 181, 182, 186, 187, 188, 190, 195, 201, 202, 203, 219, 223], "b4": [5, 27, 28, 31], "b_": [6, 165, 166], "b_dagger": 160, "b_i": [83, 112], "b_t": [30, 198], "back": [0, 41, 42, 169], "backbon": [5, 12, 41, 52, 58], "backbone_net": [35, 89], "backend": 0, "background": [6, 127, 166], "backproject": [0, 11, 20, 41, 42, 43, 102], "backpropag": [30, 69, 70, 91, 124], "backtrack": [3, 17, 24, 113], "backtrak": 3, "backward": [3, 20, 40, 58, 60, 62, 118, 119, 169, 214], "ball": [44, 118, 119], "band": [41, 133], "bar": [12, 30, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 67, 199, 204], "barbara": [2, 23], "base": [5, 19, 27, 30, 43, 48, 50, 51, 54, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218], "base_dir": [3, 4, 7, 9, 12, 15, 16, 17, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "basedeq": [58, 216], "basemaskgener": [190, 191, 195], "baseoptim": [54, 114, 134, 215, 217], "baseunfold": [58, 214, 216, 217], "basi": [7, 15, 41, 44], "basic": [11, 13, 56, 59, 60, 61, 146, 147, 156, 206], "basplib": 0, "batch": [4, 16, 17, 20, 22, 24, 34, 35, 41, 42, 62, 65, 67, 72, 91, 93, 94, 95, 96, 97, 108, 112, 113, 115, 116, 118, 121, 124, 143, 166, 172, 189, 190, 191, 192, 194, 195, 196, 204, 206, 210, 211, 212, 213, 219, 223, 225], "batch_dimens": 143, "batch_norm": [12, 33, 108], "batch_siz": [2, 3, 4, 12, 19, 20, 22, 24, 30, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 56, 67, 71, 76, 78, 80, 83, 84, 85, 86, 93, 97, 101, 102, 116, 189, 190, 191, 192, 193, 194, 195, 196], "batchnorm": 108, "batchnorm2d": 108, "bay": 30, "bayesian": 31, "beam": [169, 177], "becaus": [7, 44], "beck": 107, "been": [0, 3, 4, 5, 12, 22, 24, 25, 34, 35, 36, 37, 40, 41, 42, 44, 45, 62, 66, 77, 117], "befor": [29, 30, 44, 70, 94, 105, 117, 134, 152, 163, 215, 216, 217, 226], "begin": [0, 8, 15, 16, 17, 20, 23, 29, 30, 41, 44, 50, 54, 58, 113, 118, 133, 135, 136, 137, 138, 139, 140, 141, 142, 156, 161, 173, 174, 175, 198, 199, 214, 215], "behav": 106, "being": [9, 29, 62], "below": [0, 2, 47, 53], "benchmark": 157, "bernoulli": [37, 84, 85, 155], "besid": 9, "bessel": 164, "best": [9, 29, 30, 36, 37, 79, 81, 87, 88], "beta": [19, 29, 30, 43, 45, 54, 97, 116, 117, 123, 127, 135, 136, 137, 154, 198, 199], "beta_": 30, "beta_anderson_acc": [113, 117], "beta_anderson_acc_backward": 214, "beta_end": [29, 30, 95, 199], "beta_start": [29, 30, 95, 199], "beta_t": 30, "better": [9, 12, 15, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 59], "between": [0, 3, 5, 8, 20, 22, 24, 25, 29, 30, 50, 53, 54, 62, 63, 68, 69, 71, 81, 88, 90, 107, 108, 113, 115, 123, 128, 156, 160, 161, 164, 169, 177, 199, 201, 203, 223], "beyond": [33, 34], "bfbatchnorm2d": 108, "bia": [3, 12, 22, 24, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 96, 101, 102, 103, 105, 108], "bias": [62, 96, 108], "biasfre": [103, 108], "bicub": [24, 56, 152, 159, 173, 208], "bigger": [148, 167, 223], "bilinear": [56, 152, 159, 174, 206, 210, 211, 212, 213], "bin": [6, 166, 184, 185], "binari": [11, 35, 150, 155, 158, 167], "bkg": 127, "bkg_level": 6, "black": [47, 56, 146, 147, 152, 156], "blind": [56, 104, 108], "bling": 103, "block": [49, 52, 93, 99, 101, 102, 103, 105, 124], "blue": 6, "blur": [13, 14, 17, 24, 27, 29, 40, 45, 60, 61, 147, 150, 152, 156, 159, 161, 168, 173, 174, 175, 178, 181, 188, 189, 192, 193, 194, 221, 223], "blurfft": [2, 3, 16, 22, 27, 29, 40], "bmatrix": [8, 156, 161], "bool": [0, 62, 63, 64, 66, 67, 68, 69, 70, 71, 75, 78, 80, 81, 88, 89, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 113, 117, 123, 125, 133, 134, 143, 148, 155, 156, 163, 164, 165, 167, 169, 176, 177, 179, 182, 185, 197, 198, 199, 200, 201, 202, 203, 204, 214, 215, 216, 217, 219, 221, 223, 224, 225, 226], "boolean": [100, 124, 201], "borrow": 185, "both": [20, 25, 41, 42, 43, 49, 56, 167, 169, 193], "bottom": 225, "bound": [184, 185], "boundari": [0, 2, 125], "box": [27, 201, 202, 203], "brain": 15, "brainweb": 15, "brainweb_t1_icbm_1mm_subject_0": 15, "bredi": 106, "briefli": 49, "briggs_weight": 0, "bright": 0, "broad": 103, "broadcast": [178, 179, 181, 182, 186, 187], "bsds500": [19, 49, 97, 116], "build": [0, 4, 14, 23, 31, 32, 49, 52, 58, 60, 61, 65, 100, 115, 121, 125, 128, 130, 134, 147, 150, 153, 156, 161, 201, 203, 216, 217, 219, 220, 221, 223], "builder": 58, "built": 124, "burn": [201, 202, 203], "burnin": [27, 200], "burnin_ratio": [27, 200, 201, 202, 203], "butterfli": [29, 30], "bx": [56, 160], "bz": 145, "c": [0, 11, 15, 42, 44, 56, 78, 84, 94, 95, 103, 105, 118, 146, 147, 148, 150, 155, 164, 165, 167, 168, 172, 178, 179, 181, 182, 186, 187, 188, 190, 191, 195, 219, 223], "c2": 30, "c_": 133, "cach": [7, 9, 19, 20, 22, 23, 24, 30, 31, 33, 34, 35, 36, 37], "cal_psnr": [0, 5, 9, 15, 16, 17, 19, 20, 23, 25, 27, 28, 31, 156, 197, 199], "calcul": [27, 115, 120, 128, 129, 132], "call": [2, 9, 30, 49, 50, 56, 57, 58, 59, 62, 73, 90, 92, 100, 101, 102, 104, 107, 117, 123, 156, 172, 176, 177, 204, 206, 210, 211, 212, 213], "callabl": [63, 65, 66, 98, 115, 125, 126, 128, 129, 134, 144, 145, 150, 156, 161, 172, 194, 200, 216, 217], "camera": [23, 33, 49, 51, 167, 210, 211, 212, 213], "cameraman": 50, "can": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 22, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 66, 67, 68, 74, 75, 77, 79, 81, 82, 83, 84, 85, 89, 90, 93, 94, 95, 96, 98, 99, 104, 105, 108, 109, 110, 111, 113, 117, 121, 124, 130, 133, 134, 148, 152, 155, 156, 159, 160, 161, 164, 165, 167, 168, 169, 172, 177, 178, 179, 181, 182, 186, 187, 190, 194, 195, 197, 198, 201, 204, 205, 214, 215, 216, 217, 225, 226], "caption": 62, "captur": [53, 56, 156, 161], "care": [27, 73, 90, 92, 100, 101, 102, 104, 176, 177, 199, 206, 210, 211, 212, 213], "carefulli": 29, "carlo": [27, 31, 49, 83, 84, 85, 87, 88, 98, 200, 201, 202, 203], "cartesian": [11, 56, 190, 191, 195], "cascad": 191, "case": [0, 2, 4, 6, 15, 16, 23, 30, 41, 48, 49, 50, 52, 54, 67, 95, 112, 118, 119, 123, 148, 156, 161, 167, 169, 173, 174, 198, 210, 211, 212, 213], "cat": [6, 10, 11, 30, 108], "caus": 108, "caveat": 30, "cbar": [0, 223], "cbsd500": [40, 45], "cbsd68": [3, 11, 12, 44], "cbsd_0010": [2, 11, 19], "cdn": 33, "cdot": [15, 29, 30, 54, 57, 58, 109, 110, 113, 115, 118, 130, 133, 142, 174, 198, 199], "celeba": [48, 67], "celeba_exampl": 33, "center": [44, 118, 119, 146, 147, 152, 156, 190, 191, 195], "center_fract": [190, 191, 195], "centercrop": [3, 4, 12, 16, 17, 22, 24, 33, 40, 44, 45], "certain": [5, 48, 94], "cfgu1fvcpsql9hw2lpqrsdfxhtklvdfyvrbpvrchm534hxa2uiejqb9jo57eopmqqkg1nlp3nnetg__": 33, "cfloat": [148, 165], "cg": 144, "chain": [115, 200, 201, 202, 203], "challeng": [0, 63], "chambol": [7, 14, 43, 46, 61, 62, 64, 67, 72, 82, 106, 107, 109, 115, 118, 126, 128, 134, 136, 138, 150, 155, 156, 161, 204, 215, 216, 217, 220], "chang": [2, 47, 62, 113, 117, 146], "channel": [2, 4, 5, 6, 8, 10, 11, 15, 16, 17, 19, 22, 24, 43, 49, 65, 92, 93, 95, 96, 97, 99, 101, 102, 103, 104, 105, 108, 116, 124, 148, 149, 155, 158, 165, 166, 167, 178, 179, 181, 182, 189, 190, 191, 193, 195, 223], "channelwis": [11, 148, 165], "chaofengc": 22, "character": [56, 156, 161], "cheap": 109, "chebyshev": 202, "check": [0, 42, 44, 47, 62, 66, 103, 113, 117, 156], "check_clip_grad": 62, "check_conv_fn": [113, 117], "check_dataset_exist": 66, "check_grad": 62, "check_iteration_fn": [113, 117], "checkpoint": [3, 7, 9, 19, 20, 22, 23, 24, 30, 31, 33, 34, 35, 36, 37, 62, 105], "chen": [33, 60], "child": [190, 195, 214, 215], "choic": [19, 20, 25, 50, 53, 54, 83, 84, 85, 97, 114, 116], "choos": [3, 7, 11, 12, 20, 23, 29, 30, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 58, 77, 95, 113, 117, 133], "choosen": 20, "chose": [16, 17, 22], "chosen": [19, 25, 29, 40, 45, 62, 67, 79, 98, 105, 113, 156, 157, 204], "chung": 30, "chw": [78, 219], "circ": [54, 73, 156, 161], "circl": [25, 43, 169, 176, 177], "circular": [2, 56, 108, 146, 147, 152, 156, 159, 168, 169, 177, 178, 179, 181, 182, 188, 209], "circular_pad": [33, 108], "ckp_": 62, "ckp_10_demo_sur": 37, "ckp_50_demo_n2n": 36, "ckp_interv": [34, 35, 62], "ckpt": [7, 12, 24, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "ckpt_dir": [7, 12, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "ckpt_path": 89, "ckpt_pretrain": 62, "ckpt_state_dict": 7, "claim": 113, "clamp": [0, 17, 133], "clamp_max": 133, "clamp_min": [0, 133], "class": [0, 2, 3, 4, 9, 10, 11, 12, 15, 16, 17, 20, 22, 23, 25, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 56, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "classifi": 143, "clean": [43, 45, 79, 148, 155, 159, 161, 169], "clip": [9, 19, 20, 27, 30, 50, 62, 163, 200, 201, 202, 203, 223], "clip_posit": 163, "clone": [7, 11, 15, 20, 29, 30, 41, 44], "close": [10, 15, 27, 28, 56, 79, 109, 110, 118, 119, 122, 148, 152, 156, 161, 169], "closer": [9, 156, 197, 199], "cm": [169, 177], "cmap": [0, 15, 223, 225], "cnn": [5, 22, 93, 114], "cnxhqhkqmwi325gyfhzcgq39envopuo0hodhknxmn08xy0ljjipksynwzboqixe3al6odkw47d8w8stsckjilxcdajwymelpr08gkuszh": 33, "co": [7, 9, 15, 19, 20, 23, 24, 30, 31, 33, 34, 35, 36, 37, 50, 175], "code": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 52, 56, 62, 77, 95, 105, 106, 107, 190], "coeff": [2, 109, 189], "coeffic": 109, "coeffici": [2, 11, 109, 110, 133, 189], "coil": [34, 56, 158], "colab": 14, "collabor": 91, "collect": [54, 56, 58, 60], "colon": 53, "color": [2, 3, 4, 8, 9, 10, 11, 12, 16, 17, 22, 23, 24, 25, 40, 43, 44, 45, 49, 97, 116, 159], "colormap": [0, 223], "colour": [2, 10, 149], "column": [41, 42, 155, 191, 195, 223], "com": [14, 20, 22, 37, 41, 60, 77, 95, 105, 190], "combett": 15, "combin": [29, 49, 52, 56, 194, 199], "come": [54, 128, 156], "command": 47, "common": [0, 5, 27, 28, 31, 40, 41, 45, 54, 133], "commonli": [66, 117], "commun": 47, "commut": 98, "compar": [27, 28, 31, 62, 214], "compat": [52, 109], "compens": 0, "complex": [0, 7, 9, 11, 15, 111, 133, 148, 158, 164, 167, 223], "complex64": [0, 165], "complex_denois": 49, "compliant": 47, "compon": [20, 30, 97, 116, 143], "component_log_likelihood": 143, "compos": [3, 4, 12, 16, 17, 22, 24, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 48, 96, 110, 119, 156], "composit": [56, 106, 107], "comprehens": 47, "compress": [14, 46, 48, 61, 62, 64, 67, 72, 82, 105, 115, 121, 128, 133, 141, 148, 156, 161, 215, 217, 220, 223, 226], "compressedsens": [11, 41, 42, 48, 56], "comput": [0, 2, 3, 4, 5, 8, 9, 10, 12, 14, 15, 16, 17, 19, 22, 23, 24, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 49, 54, 56, 57, 62, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 92, 96, 97, 100, 101, 102, 104, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 147, 148, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 164, 167, 169, 171, 172, 176, 177, 184, 185, 193, 198, 199, 200, 201, 202, 203, 204, 206, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224], "compute_alpha": 30, "compute_alpha_beta": 198, "compute_loss": [20, 62], "compute_metr": [0, 9, 16, 17, 23, 25, 62, 113, 117, 214], "compute_norm": [0, 8, 10, 54, 156, 203], "concanten": 161, "concaten": [13, 14, 59, 61, 62, 101, 102, 105, 149, 150, 152, 156, 159, 161, 206, 207, 209, 210, 211, 212, 213, 218, 220, 223], "conclus": 9, "condat": [14, 26, 50, 61, 96, 106, 107, 113, 115, 121, 123, 126, 128, 134, 150, 153, 156, 161, 167, 219, 220, 221, 223, 224], "condatvu": 23, "condit": [2, 29, 35, 56, 95, 199], "confer": [22, 24, 114], "config": [6, 29, 104], "config_matplotlib": [6, 29], "conj": [142, 156, 218], "conjug": [23, 115, 128, 136, 144, 148, 152, 156, 169, 218], "conjugate_gradi": [148, 156, 169], "conjugate_gradient_method": 144, "conjunct": [62, 204], "connect": [90, 105, 108], "consecut": [3, 24, 115, 128], "consequ": 157, "consid": [11, 19, 20, 30, 43, 97, 116, 124, 179, 182, 189], "consider": 190, "consist": [0, 7, 11, 23, 29, 30, 34, 35, 44, 49, 53, 58, 74, 75, 77, 81, 82, 113, 159], "consol": [62, 67, 143, 204], "const": 20, "constant": [19, 30, 40, 51, 83, 84, 85, 103, 106, 107, 122, 145, 149, 154, 156, 157, 198, 201, 202, 203], "constrain": [7, 14, 46, 61, 62, 64, 67, 72, 82, 107, 109, 115, 118, 126, 128, 150, 155, 156, 161, 204, 215, 217, 220], "constraint": [49, 201, 202, 203], "construct": [7, 11, 29, 41, 44, 56], "constructor": [192, 205], "consumpt": [97, 116], "contain": [2, 4, 6, 7, 23, 41, 49, 51, 54, 56, 57, 58, 62, 64, 66, 67, 75, 98, 109, 110, 113, 117, 123, 134, 135, 136, 137, 138, 139, 142, 143, 146, 147, 162, 164, 166, 169, 177, 201, 202, 203, 207, 209, 215, 216, 217, 221, 226], "content": 33, "continu": 33, "contrast": 20, "contribut": 185, "contributor": 47, "control": [25, 27, 29, 31, 51, 53, 83, 108, 114, 198, 203], "conv": [103, 104, 105], "conv1d": 6, "conv2d": [56, 146, 181], "conv2d_fft": 182, "conv_transpose2d": 56, "conv_transposed2d": 178, "conv_transposed2d_fft": 179, "conv_transposed3d": 180, "convdecod": [5, 94], "conveni": [15, 16, 17, 27], "convent": [15, 109, 149, 189], "converg": [0, 3, 8, 10, 15, 16, 17, 22, 23, 24, 25, 28, 43, 54, 69, 70, 106, 107, 113, 115, 117, 118, 119, 123, 128, 131, 140, 156, 200, 201, 202, 203], "convers": 60, "convert": [8, 9, 10, 28, 49, 57, 95, 111, 149, 150, 219, 221], "convert_to_fp16": 95, "convert_to_fp32": 95, "convex": [44, 54, 106, 107, 115, 118, 128], "convolut": [0, 2, 3, 5, 6, 16, 31, 50, 55, 56, 57, 92, 93, 94, 96, 99, 101, 102, 103, 105, 108, 130, 146, 147, 164, 168, 178, 179, 180, 181, 182, 183, 188, 191], "convolv": [2, 57, 130, 178, 179, 181, 182], "convtranspos": [93, 99], "coordin": [0, 175, 193, 225], "copi": [6, 7, 11, 15, 29, 40, 41, 42, 44, 45], "corner": 225, "correct": [0, 25, 164], "correct_global_phas": 9, "correctli": [44, 66], "correl": 36, "correspond": [0, 2, 11, 20, 23, 24, 29, 30, 41, 42, 49, 54, 103, 113, 122, 123, 136, 142, 156, 157, 158, 160, 161, 178, 179, 181, 182, 194, 210, 211, 212, 213, 225], "corrupt": [36, 37], "cosin": 9, "cosine_similar": 9, "cosineannealinglr": 43, "cost": [3, 16, 17, 23, 24, 54, 113, 117, 123, 134, 135, 136, 137, 138, 139, 156, 216, 217], "cost_tv": 16, "cost_tv_prox": 16, "cost_wv": 17, "cost_wv_prox": 17, "could": 5, "count": 185, "coupl": 20, "cov": 143, "cov_regular": 143, "covari": [142, 143, 193], "coverag": 0, "cp": [7, 44, 54, 134, 215, 216, 217], "cpiter": [43, 44], "cpp": [2, 6], "cpu": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 50, 62, 67, 71, 76, 80, 89, 93, 96, 97, 99, 103, 104, 109, 110, 116, 124, 133, 143, 146, 147, 148, 149, 152, 155, 158, 159, 164, 165, 166, 167, 168, 169, 172, 176, 177, 189, 193, 194, 196, 197, 198, 199, 204, 206, 210, 211, 212, 213, 215, 217, 221], "creat": [3, 8, 9, 13, 14, 22, 23, 56, 58, 59, 61, 64, 67, 70, 97, 113, 115, 116, 117, 148, 150, 151, 153, 156, 161, 165, 191, 194, 195, 197, 201, 205, 217, 220, 223], "creation": 10, "crit": [3, 17, 24, 28, 106, 107], "crit_conv": [3, 24, 113, 118, 119, 201, 203], "criteria": [3, 22, 24, 201], "criterion": [15, 106, 107, 113, 117, 118, 119, 131, 156], "crop": [109, 221], "crop_output": 109, "crucial": [25, 50], "ct": [14, 19, 20, 26, 46, 60, 61, 62, 72, 82, 96, 97, 101, 102, 113, 115, 116, 121, 123, 124, 126, 128, 134, 136, 153, 156, 157, 161, 169, 215, 217, 219, 220, 221, 223, 224], "ct_small": 20, "ct_toi": 20, "cubic": [15, 133], "cuda": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 52, 62, 70, 97, 114, 116, 146, 147, 168, 194, 197, 199], "cumprod": [29, 30], "cup_": [5, 27, 28, 31], "cur_data_fidel": [23, 43, 117, 123, 135, 136, 137, 138, 139], "cur_param": [23, 117, 123, 135, 136, 137, 138, 139, 142], "cur_prior": [23, 43, 117, 123, 135, 136, 137, 138, 139, 142], "curr_sigma": 29, "current": [3, 17, 23, 24, 27, 28, 29, 30, 43, 62, 101, 102, 113, 117, 123, 135, 136, 137, 138, 139, 142, 143, 146, 147, 150, 152, 153, 157, 158, 162, 163, 168, 171], "current_log": 20, "curv": [0, 3, 9, 12, 16, 17, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "custom": [4, 7, 9, 13, 14, 25, 26, 32, 44, 46, 50, 59, 60, 61, 62, 64, 67, 72, 82, 96, 100, 113, 115, 121, 123, 126, 128, 130, 134, 141, 147, 148, 150, 152, 153, 156, 159, 161, 167, 175, 201, 203, 204, 205, 215, 216, 217, 219, 220, 221, 223, 224, 226], "custom_init": [0, 7, 25, 43, 44, 113], "custom_init_cp": [7, 44], "custom_metr": 113, "custom_output": [24, 43], "customtrain": 62, "cutoff": [2, 189], "cviter": 23, "d": [0, 6, 15, 27, 31, 44, 54, 57, 69, 73, 86, 95, 98, 106, 107, 112, 115, 116, 118, 119, 121, 122, 126, 127, 129, 130, 131, 148, 154, 164, 165, 166, 185], "d_": [6, 44, 50, 94, 166, 198, 199], "dagger": [89, 150], "damp": 202, "daniil": [106, 107], "data": [0, 5, 9, 20, 33, 48, 50, 51, 52, 53, 56, 58, 62, 63, 65, 66, 67, 68, 74, 75, 77, 81, 82, 83, 84, 85, 97, 104, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 133, 134, 135, 136, 137, 138, 139, 142, 143, 164, 176, 177, 194, 198, 199, 204, 205, 206, 210, 211, 212, 213, 215, 216, 217], "data_dir": [3, 4, 7, 12, 15, 16, 17, 22, 24, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "data_fidel": [0, 3, 7, 9, 16, 17, 20, 22, 23, 24, 25, 27, 29, 30, 31, 34, 40, 41, 42, 43, 44, 45, 50, 54, 58, 113, 115, 117, 123, 134, 135, 136, 137, 138, 139, 198, 199, 201, 202, 203, 215, 216, 217], "data_init": 143, "data_test": 48, "data_train": 48, "datafid": [20, 50, 53, 54, 58, 113, 115, 119, 121, 122, 127], "datafidel": [23, 43, 54, 57, 112, 113, 117, 118, 119, 121, 122, 123, 127, 128, 134, 135, 136, 137, 138, 139, 198, 199, 201, 202, 203, 215, 216, 217], "datafidnam": [50, 54, 113, 115, 121], "dataload": [3, 12, 20, 22, 23, 24, 25, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 62, 143, 204, 205], "dataparallel": 52, "datapoint": 67, "dataset": [7, 9, 11, 13, 14, 15, 19, 20, 25, 30, 33, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 97, 116, 150, 151, 153, 156, 157, 161, 204, 220, 223], "dataset_filenam": [12, 34, 35, 36, 37, 40, 41, 42, 44, 45, 67], "dataset_nam": [3, 4, 16, 17, 22, 23, 24], "dataset_path": [3, 24], "dataweight": [0, 164], "daubechi": 0, "davob": 91, "db": [0, 5, 9, 15, 16, 17, 23, 25, 27, 28, 31], "db1": [0, 15, 133], "db2": [0, 15, 109, 133], "db3": [0, 15], "db4": [0, 15, 110, 133], "db5": 0, "db6": 0, "db7": 0, "db8": [0, 7, 15, 17, 41, 44, 109, 110, 133], "dd_hh": 62, "ddim": [30, 198], "ddpm": 30, "ddrm": [10, 28], "deblur": [13, 14, 18, 26, 29, 33, 46, 56, 60, 61, 62, 64, 67, 71, 72, 78, 82, 93, 96, 103, 107, 113, 114, 115, 121, 126, 128, 131, 134, 147, 150, 153, 156, 161, 175, 204, 208, 214, 216, 219, 220, 223, 224], "debug": 90, "dec": 109, "decid": 47, "decod": [5, 50, 92, 93, 94, 103], "decolor": [8, 10, 56], "decolorizesvd": 10, "decompos": [0, 164], "decomposablephys": [2, 10, 27, 28, 56, 147, 149, 151, 155, 158, 167, 197], "decomposit": [2, 10, 27, 28, 56, 109, 110, 133, 147, 150, 155, 158, 167, 189, 197], "deconvolut": 58, "decreas": [29, 30, 113, 143, 197, 198, 199], "deep": [4, 9, 13, 14, 22, 46, 47, 55, 61, 62, 64, 67, 71, 72, 82, 89, 92, 93, 94, 96, 113, 114, 115, 121, 126, 128, 134, 147, 150, 153, 155, 156, 161, 175, 191, 204, 214, 215, 216, 219, 220, 221, 223], "deepimageprior": [5, 92], "deepinv": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "deepinv_dataset_path": 3, "deepinv_datasets_path": [12, 34, 35, 36, 37, 44], "deepinvers": [1, 11, 14, 47, 54, 61, 64, 113, 115, 121, 128, 133, 134, 156, 161, 164, 219, 223, 224, 225], "def": [0, 3, 7, 10, 20, 23, 24, 27, 29, 30, 42, 43, 44, 62, 201], "def_crit": 131, "default": [0, 2, 9, 19, 22, 24, 49, 52, 56, 62, 63, 66, 68, 69, 70, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 89, 93, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 117, 118, 123, 124, 128, 129, 131, 133, 134, 135, 136, 137, 146, 148, 156, 159, 161, 164, 165, 169, 176, 177, 189, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 214, 215, 216, 217, 223, 225, 226], "defin": [0, 2, 6, 8, 9, 10, 15, 19, 20, 25, 29, 33, 34, 35, 36, 37, 48, 50, 54, 58, 62, 68, 73, 74, 75, 79, 82, 90, 92, 97, 100, 101, 102, 104, 109, 110, 112, 113, 115, 116, 117, 118, 119, 121, 123, 124, 130, 135, 136, 137, 138, 139, 142, 146, 147, 148, 149, 151, 152, 154, 155, 156, 158, 159, 160, 161, 164, 165, 167, 169, 173, 174, 175, 176, 177, 193, 197, 198, 199, 201, 206, 210, 211, 212, 213], "definit": [2, 23, 30, 56], "defocu": 103, "defocus_deblur": 103, "deg_dir": [3, 7, 12, 15, 16, 17, 22, 24, 34, 35, 36, 37, 44], "degrad": [7, 9, 15, 25, 36, 37, 49], "degre": [11, 20, 34, 49, 98, 169, 175, 206, 207], "delta": [0, 2, 168], "demo": [0, 2, 3, 4, 7, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 44, 45, 49], "demo_3d_wavelet": [15, 18, 61], "demo_blur_tour": [2, 13, 61], "demo_custom_kernel": [27, 32, 61], "demo_custom_prior": [3, 13, 61], "demo_custom_prior_unfold": [42, 46, 61], "demo_dataset": [4, 13, 61], "demo_ddrm": [28, 32, 61], "demo_deq": [40, 46, 61], "demo_diffpir": [29, 32, 61], "demo_dip": [5, 13, 61], "demo_dp": [30, 32, 61], "demo_ei_transform": [33, 38, 61], "demo_epl": [19, 21, 61], "demo_equivariant_imag": [34, 38, 61], "demo_learned_primal_du": [43, 46, 61], "demo_licp": 42, "demo_lidar": [6, 13, 61], "demo_lista": [41, 46, 61], "demo_load": [7, 13, 61], "demo_moi_ckp_10": 35, "demo_multioperator_imag": [35, 38, 61], "demo_n2n": 36, "demo_n2n_denois": [36, 38, 61], "demo_pansharpen": [8, 13, 61], "demo_patch_priors_ct": [20, 21, 61], "demo_phase_retriev": [9, 13, 61], "demo_phys": [10, 13, 61], "demo_physics_tour": [11, 13, 61], "demo_pnp_custom_optim": [23, 26, 61], "demo_pnp_dpir_deblur": [22, 26, 61], "demo_red_gspnp_sr": [24, 26, 61], "demo_ri_bas": [0, 1, 61], "demo_sampl": [31, 32, 61], "demo_sur": 37, "demo_sure_denois": [37, 38, 61], "demo_train_inpaint": [12, 13, 61], "demo_training_inpaint": [12, 44], "demo_tv_minimis": [16, 18, 61], "demo_unfolded_constrained_lista": [44, 46, 61], "demo_unfolded_cp": 7, "demo_unfolded_cp_ptwt": 7, "demo_unfolded_sr": 45, "demo_vanilla_pnp": [25, 26, 61], "demo_vanilla_unfold": [45, 46, 61], "demo_wavelet_prior": [17, 18, 61], "demonstr": [33, 51], "den": 29, "denois": [4, 5, 7, 14, 18, 20, 21, 22, 23, 25, 26, 27, 31, 34, 38, 40, 41, 44, 45, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 64, 67, 72, 77, 79, 83, 84, 85, 89, 91, 93, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 121, 126, 128, 129, 130, 131, 133, 134, 150, 152, 153, 155, 156, 157, 161, 162, 163, 170, 171, 197, 198, 199, 201, 202, 203, 204, 215, 216, 217, 219, 220, 221, 223], "denoised_imag": 49, "denoiser_complex": 9, "denoiser_nam": 24, "denoisernam": 98, "denoising_color": 103, "denoising_grai": 103, "denoising_r": 103, "denot": [69, 73, 118, 140, 146, 147, 154], "dens": 124, "densiti": [20, 127, 191, 195], "depend": [0, 20, 27, 53, 54, 58, 95, 113, 169, 194, 199, 201], "deprec": 205, "depth": [13, 14, 15, 34, 40, 45, 56, 61, 96, 101, 102, 104, 105, 154, 161, 166, 220], "deq": [14, 46, 58, 60, 61, 62, 64, 67, 72, 82, 96, 115, 121, 126, 128, 147, 150, 153, 156, 161, 175, 214, 216, 220], "deq_build": [40, 58], "derain": 103, "deriv": 51, "descent": [3, 16, 17, 25, 42, 50, 54, 115, 128, 134, 139, 141, 145, 161, 215, 216, 217], "describ": [7, 22, 31, 35, 55, 56, 114, 124, 155, 156, 157, 161, 197, 198, 199], "descript": [47, 106, 107, 133, 190, 191, 195], "design": [9, 49, 51, 79, 83, 84, 85], "desir": [47, 67, 190], "detach": [6, 7, 11, 20, 29, 30, 41, 44], "detail": [29, 30, 44, 49, 50, 56, 58, 62, 69, 70, 77, 84, 85, 93, 95, 96, 97, 99, 104, 105, 106, 107, 110, 113, 114, 116, 133, 134, 144, 157, 188, 189, 193, 204, 208, 210, 211, 212, 213, 214, 215, 216, 217, 223], "detector": [169, 177], "detector_radiu": [169, 177], "detector_spac": [169, 177], "determin": [124, 143], "determinist": [53, 56, 156, 161], "dev": [28, 31], "develop": 47, "deviat": [3, 6, 9, 11, 15, 16, 17, 19, 22, 23, 24, 25, 28, 29, 30, 49, 53, 54, 79, 83, 84, 87, 113, 114, 121, 134, 151, 153, 159, 162, 166, 170, 175, 193, 215, 216, 217], "devic": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 50, 52, 62, 67, 71, 76, 80, 89, 93, 96, 97, 99, 103, 104, 109, 110, 114, 116, 124, 133, 143, 146, 147, 148, 149, 152, 155, 158, 159, 164, 165, 166, 167, 168, 169, 172, 176, 177, 189, 193, 194, 196, 197, 198, 199, 204, 206, 210, 211, 212, 213, 215, 217, 220, 221], "device_count": 52, "device_id": 52, "df": 70, "df73285e": 22, "dhariw": 49, "diag": [2, 70, 142, 148, 150, 155, 160], "diagon": [27, 56, 70, 155, 186, 187], "dict": [23, 34, 62, 113, 117, 123, 134, 135, 136, 137, 138, 139, 142, 161, 169, 177, 189, 196, 214, 215, 216, 217, 224, 226], "dict_kei": [2, 189, 192, 193, 194, 196], "dict_param": 56, "dictionari": [2, 15, 23, 34, 40, 41, 42, 45, 54, 56, 62, 113, 117, 123, 134, 135, 136, 137, 138, 139, 142, 161, 189, 192, 193, 194, 196, 215, 216, 217, 224, 226], "dictionnari": 0, "diff": [28, 193], "differ": [2, 3, 5, 9, 19, 24, 30, 35, 36, 41, 42, 51, 56, 59, 62, 75, 77, 86, 94, 105, 106, 107, 131, 159, 193, 197, 198, 218], "differenti": [30, 54, 68, 115, 128, 129, 136, 156, 161, 198, 202, 203], "diffpir": [14, 30, 32, 60, 61, 95, 115, 121, 127, 147, 150, 153, 156, 161, 220, 221, 223], "diffract": 189, "diffraction_gener": 2, "diffractionblur": 2, "diffractionblurgener": [2, 168, 192], "diffunet": [29, 30, 49], "diffus": [14, 29, 32, 60, 61, 93, 95, 150, 153, 155, 156, 161, 197, 198, 199, 200, 201, 219, 220, 221, 223], "diffusion_ffhq_10m": 30, "diffusion_step": 29, "diffusionsampl": [28, 57], "dilat": [6, 208], "dim": [3, 6, 10, 11, 28, 30, 31, 56, 103, 104, 105, 156, 172, 218], "dim_hid": 90, "dim_input": 90, "dim_mid": 90, "dimens": [0, 4, 16, 17, 22, 24, 41, 90, 95, 97, 102, 105, 109, 115, 116, 118, 119, 131, 133, 142, 143, 150, 164, 172, 185, 190, 191, 195, 206, 207, 209, 210, 211, 212, 213, 218, 219, 225], "dimension": [169, 191, 195], "dinv": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 58, 113, 115, 117, 121, 197, 199, 217], "dinv_dataset": 67, "dinv_dataset0": [22, 24], "dinv_dataset_path": [4, 22, 24], "dir": [22, 24, 48], "dirac": 0, "dirac_comb": [2, 168], "dirac_lik": 0, "direct": 135, "directli": [0, 2, 9, 43, 60, 95, 105, 134, 215, 216, 217], "directori": [47, 48, 62, 63, 66, 204, 226], "disabl": [12, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "discard": [201, 202, 203], "discord": [47, 60], "discrep": [50, 53, 54, 113], "discret": [0, 20, 148, 158, 164], "displai": [4, 33, 146, 147, 152], "disposit": 33, "distanc": [51, 53, 54, 112, 113, 115, 119, 121, 122, 128, 169, 177], "distancenam": [54, 115, 121, 136], "distinct": [7, 34, 41, 42, 43, 44, 45, 54, 113, 134, 215, 216, 217], "distribut": [20, 27, 28, 31, 37, 53, 57, 97, 116, 130, 151, 155, 191, 197, 198, 199, 200, 201, 202, 203], "distributeddataparallel": 52, "div2k_train_hr": 63, "div2k_valid_hr": 63, "diverg": [83, 84, 85], "divid": [163, 218], "divis": [95, 103, 112], "dncnn": [23, 25, 31, 34, 40, 45, 49, 51, 58, 217], "dncnn_sigma2_lipschitz_color": 31, "dncnn_sigma2_lipschitz_grai": 23, "do": [22, 49, 109, 113, 128], "doc": [47, 56, 62], "document": [44, 47, 52, 53, 73, 79, 83, 84, 85, 136, 154, 166], "doe": [15, 56, 62, 68, 69, 70, 91, 96, 118, 140, 156, 161, 215, 217], "doesn": [4, 51, 130], "doi": [96, 169, 177], "domain": [0, 20, 41, 42, 55, 56, 91, 164], "don": 225, "done": [2, 9, 12, 16, 17, 28, 29, 30, 40, 41, 42, 43, 44, 45, 47, 48, 56, 59, 62, 109, 159], "dongdong": 60, "dose": 157, "dossal": 138, "dot": [35, 75, 110], "doubl": 156, "dougla": [45, 134, 137, 215, 216, 217], "down": 24, "download": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 63, 66, 93, 95, 96, 97, 99, 103, 104, 105, 116, 197, 199], "download_and_extract_arch": 33, "download_lipschitz": [23, 31, 96], "downsampl": [8, 11, 20, 24, 40, 45, 93, 99, 108, 156, 159, 173, 174], "downsample_mod": [93, 99], "downscal": 33, "dp": [14, 32, 61, 95, 115, 121, 150, 155, 156, 161, 220, 221, 223], "dpir": [14, 26, 49, 60, 61, 64, 67, 71, 72, 78, 93, 113, 115, 121, 126, 128, 134, 147, 150, 153, 156, 161, 204, 220], "dr": [0, 17, 45, 54, 134, 137, 215, 216, 217], "drawback": 52, "drive": 20, "driven": 47, "drop": 104, "drop_last": 20, "drop_path_r": [104, 105], "drop_rat": 105, "dropout": 105, "drunet": [9, 22, 28, 40, 45, 49, 52, 99, 114, 197, 199], "drunet_deepinv_gray_finetune_26k": 9, "dst": 148, "dtype": [2, 11, 20, 29, 30, 42, 113, 117, 148, 156, 165, 167, 169, 172, 176, 177, 189, 193, 194, 221], "du": [69, 70], "dual": [14, 26, 44, 46, 50, 54, 61, 62, 72, 82, 96, 101, 102, 103, 106, 107, 113, 115, 118, 119, 121, 123, 126, 128, 134, 136, 150, 153, 156, 161, 167, 169, 215, 217, 219, 220, 221, 223, 224], "dual_pixel_task": 103, "due": [148, 169], "dummi": 56, "dure": [2, 29, 30, 33, 43, 62, 67, 103, 108, 113], "dwt": 109, "dx": [16, 42, 106, 107, 131], "dynam": [0, 2, 11, 56, 191], "e": [0, 4, 6, 9, 10, 14, 15, 20, 23, 27, 28, 29, 33, 34, 35, 36, 37, 48, 49, 51, 54, 57, 58, 62, 63, 66, 67, 68, 69, 70, 74, 75, 77, 78, 79, 81, 82, 93, 96, 97, 98, 99, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 119, 121, 130, 133, 134, 146, 147, 148, 149, 151, 155, 156, 160, 163, 164, 169, 172, 179, 182, 194, 197, 201, 202, 203, 206, 211, 214, 215, 216, 217, 219], "each": [0, 2, 7, 19, 27, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 54, 56, 62, 77, 84, 85, 91, 94, 101, 102, 103, 104, 105, 109, 110, 113, 114, 116, 117, 123, 134, 143, 156, 161, 164, 178, 179, 181, 182, 185, 192, 204, 215, 216, 217, 218, 223, 225], "earli": [5, 24, 94, 114], "early_stop": [0, 3, 9, 16, 17, 22, 23, 24, 25, 113, 117], "easi": [27, 60], "easili": [12, 29, 30, 44, 47, 48, 50, 59, 67], "edg": 185, "effect": [2, 29, 33, 97, 116, 125, 206, 208, 212], "effic": 3, "effici": [27, 49, 56, 103, 148, 150, 156, 161, 167, 169], "effort": 5, "egg": [14, 60], "ei": [33, 34, 68], "eigenvalu": 70, "eigenvector": 142, "eiloss": [33, 34], "either": [19, 49, 52, 54, 58, 67, 95, 98, 103, 105, 109, 110, 111, 113, 133, 134, 178, 179, 181, 182, 185, 186, 187, 215, 216, 217, 223, 225], "el": [7, 41, 44], "elaps": [10, 27, 28, 31], "element": [9, 15, 41, 45, 49, 53, 73, 90, 109, 148, 154, 159, 165, 192, 218], "elementwis": [37, 84, 85], "ell": 15, "ell_0": [109, 110], "ell_1": [54, 68, 74, 75, 77, 81, 82, 106, 109, 110, 119, 120], "ell_2": [30, 44, 54, 86, 114, 116, 118, 119, 121, 156], "ell_p": 73, "els": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 113, 118, 197, 199, 214], "elu": [93, 99], "em": 143, "email": 47, "embed": [95, 105], "embed_dim": 105, "emiss": 0, "emission_wavelength": 189, "empti": [155, 190, 195], "en": [2, 80, 144, 189], "enabl": [3, 30, 56, 103, 214, 215], "enable_grad": 30, "encod": [0, 93, 103, 164], "encompass": [215, 217], "encount": 108, "end": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 50, 54, 58, 62, 97, 113, 116, 118, 133, 135, 136, 137, 138, 139, 140, 141, 142, 156, 161, 173, 174, 175, 198, 199, 214, 215], "enforc": [50, 53, 54, 74, 100, 113], "enough": 54, "ensur": [2, 3, 4, 5, 9, 11, 12, 15, 16, 17, 22, 23, 24, 25, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 49, 143, 191], "entri": [27, 54, 83, 84, 85, 112, 143, 148, 155, 156, 161, 167, 203], "enumer": 62, "envelop": [57, 130, 140], "ep": [29, 144], "epll": [14, 21, 49, 61, 143, 150, 151, 153, 155, 156, 161, 219, 221, 223], "epll_batch_s": 20, "epll_dataload": 20, "epll_max_it": 20, "epll_num_compon": 20, "epll_prior": 20, "epoch": [12, 20, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 205], "eps_anderson_acc": [113, 117], "eps_anderson_acc_backward": 214, "epsilon": [0, 16, 17, 19, 27, 30, 84, 106, 112, 153, 162, 170, 171], "epsilon_adjoint": 106, "epub": 96, "eq": [20, 50, 54, 98, 113], "equal": [79, 109, 130, 154, 155, 159, 167, 169, 172, 190, 191, 225], "equat": [0, 15, 16, 17, 20, 29, 30, 41, 44, 50, 54, 58, 113, 133, 135, 136, 137, 138, 139, 140, 141, 142, 173, 174, 175, 198, 199, 214], "equilibrium": [14, 46, 60, 61, 62, 64, 67, 72, 82, 96, 115, 121, 126, 128, 147, 150, 153, 156, 161, 175, 214, 216, 220], "equispac": [20, 190], "equispacedmaskgener": 11, "equival": [8, 30, 79], "equivari": [14, 38, 51, 61, 62, 64, 67, 68, 72, 74, 96, 98, 108, 115, 121, 126, 128, 150, 155, 156, 158, 161, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 220, 221, 223], "equivariantdenois": 49, "error": [12, 28, 29, 31, 37, 41, 44, 62, 68, 73, 74, 75, 77, 81, 82, 128, 169, 205], "escand": 188, "especi": 51, "est": [0, 7, 23, 24, 25, 43, 44, 113, 117, 123, 135, 136, 137, 138, 139], "estim": [9, 19, 20, 23, 29, 30, 37, 49, 50, 54, 76, 78, 83, 84, 85, 89, 95, 97, 112, 116, 123, 127, 135, 136, 137, 138, 139, 143, 150, 154, 156, 199, 201, 203, 204, 219], "estimt": 19, "et": [0, 3, 5, 16, 17, 22, 24, 29, 30, 33, 49, 55, 91, 94, 95, 96, 106, 108, 191, 206, 212], "eta": [27, 30, 31, 79, 87, 103, 113, 156, 161, 197, 198, 202, 203], "eta_0": 27, "eta_backtrack": 113, "etab": [28, 197], "etc": [8, 10, 27, 54, 56, 57, 58, 59, 60, 67, 68, 117, 204, 218], "euclidean": [33, 206], "eugenesiow": 33, "eval": [12, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62], "eval_dataload": [12, 33, 35, 36, 37, 40, 41, 42, 43, 45, 62, 205], "eval_interv": 62, "eval_metr": 62, "eval_mod": [69, 70], "evalu": [10, 20, 28, 30, 40, 41, 42, 51, 56, 58, 62, 66, 70, 76, 87, 88, 107, 117, 124, 125, 143, 156, 161, 191, 195, 204, 205], "even": [6, 30, 103], "evenli": 67, "eventu": 29, "everi": [9, 30, 62, 73, 90, 92, 94, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "evid": 27, "evlauaton": 117, "exact": [49, 148, 156, 159, 169], "exactli": 143, "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 56, 58, 60, 61, 66, 70, 97, 117, 170, 172, 196], "except": 185, "exdb": [37, 41], "execut": [1, 13, 18, 21, 26, 32, 38, 39, 46, 61, 113, 117], "exist": [8, 56, 58, 66, 148, 155, 156, 160, 161, 165, 167, 169], "exp": [9, 122, 154, 157, 175, 193], "expand": 2, "expans": [31, 188], "expect": [14, 20, 21, 61, 97, 103, 116, 143, 150, 151, 153, 155, 156, 161, 191, 219, 221, 223], "experi": [0, 5, 33, 94], "expir": 33, "explain": [5, 60], "explicit": [11, 13, 14, 24, 42, 56, 60, 61, 64, 67, 113, 115, 121, 128, 134, 147, 150, 153, 156, 161, 175, 202, 204, 220], "explicit_prior": [3, 24, 128], "explicitli": 20, "exploit": [9, 10, 27, 36, 37], "explor": 2, "export": 20, "express": 150, "ext": 48, "extend": [0, 15, 19, 43, 52], "extra": [56, 156], "extract": [9, 19, 20, 33, 37, 41, 97, 116, 225], "extract_loc": [0, 225], "extract_s": [0, 225], "eyjtdgf0zw1lbnqiolt7iknvbmrpdglvbii6eyjeyxrltgvzc1royw4ionsiqvdtokvwb2novgltzsi6mtcxotg0njy2nh19lcjszxnvdxjjzsi6imh0dhbzoi8vy2rulwxmcy5odwdnaw5nzmfjzs5jby9kyxrhc2v0cy9ldwdlbmvzaw93l1vyymfumtawlzi1yjkyotk0nwuwntnkzte5ymy4zju3nwjkmdgymwfiywixzwfjn2y1zjzjnwm3otgwmjixzdhlzdezmdy2yzi": 33, "f": [0, 2, 5, 6, 8, 9, 10, 16, 17, 20, 23, 25, 27, 28, 29, 31, 48, 50, 54, 58, 62, 69, 70, 84, 100, 106, 112, 113, 115, 117, 119, 121, 123, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 150, 156, 158, 164, 199, 201, 215, 216, 217], "f_": [5, 12], "f_0": 113, "f_fn": [23, 113, 123, 134, 216, 217], "f_k": 117, "f_matern": 193, "f_step": [23, 43], "f_x": 193, "f_y": 193, "face": 30, "facebookresearch": 190, "factor": [0, 8, 11, 19, 24, 41, 42, 45, 79, 87, 105, 118, 121, 152, 156, 159, 173, 174, 200, 206, 208], "fail": [37, 41, 108], "faint": 0, "faintest": 0, "fals": [0, 2, 3, 4, 7, 9, 11, 12, 15, 17, 19, 20, 22, 23, 24, 25, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 54, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 80, 81, 88, 89, 93, 94, 95, 96, 98, 99, 103, 104, 105, 106, 107, 108, 113, 117, 123, 124, 125, 133, 134, 135, 136, 137, 143, 148, 163, 164, 165, 167, 169, 176, 177, 185, 197, 198, 199, 200, 201, 202, 203, 204, 214, 215, 216, 217, 218, 219, 221, 223, 225], "famili": 2, "familiar": 47, "fan": [169, 177], "fan_beam": [169, 177], "fan_paramet": [169, 177], "fashion": [44, 58, 59, 148, 155, 160, 165, 167, 218], "fast": [11, 41, 42, 90, 107, 138, 147, 148, 155, 158, 167, 209], "fasten": [3, 4, 12, 22, 23, 24, 25, 34, 36, 37, 40, 41, 42, 44, 45], "faster": [0, 2, 16, 17, 34, 47, 169, 176, 177], "fastmri": [34, 190], "fastmri_knee_singlecoil": 34, "fbp": 20, "fbpconvnet": 89, "fc": [2, 189], "featur": [90, 101, 102], "feedforward": 103, "fenchel": [23, 136], "fetch": [3, 4, 16, 17, 22, 23, 25], "few": [12, 20, 44, 156], "ffhq": [30, 49, 95], "ffn_expansion_factor": 103, "fft": [0, 2, 56, 147, 164, 179, 182], "fidel": [0, 3, 7, 9, 16, 17, 22, 23, 24, 25, 34, 40, 41, 42, 44, 45, 50, 53, 58, 97, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 134, 136, 198, 199, 215, 216, 217], "field": [106, 107], "fifa": [5, 27, 28, 31], "figsiz": [15, 29, 223], "figur": [6, 29, 103, 223, 225], "file": [1, 13, 18, 21, 26, 32, 38, 39, 46, 47, 48, 54, 61, 62, 63, 64, 66, 97, 103, 116, 124, 148, 155, 160, 165, 167, 221], "file_nam": [7, 34, 35, 36, 37], "file_typ": 0, "filenam": [33, 67, 225], "fill": [8, 222, 227, 228, 229], "filter": [2, 3, 5, 8, 11, 16, 20, 22, 24, 27, 29, 40, 43, 45, 50, 56, 91, 100, 146, 147, 152, 156, 159, 166, 168, 169, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 193, 194], "filter_0": 2, "filter_90": 2, "filter_rgb": 2, "filter_torch": 3, "final": [2, 9, 20, 55, 93, 95, 96, 99, 104, 105], "find": [43, 95, 142, 161, 166, 199, 214], "find_nearest": [29, 95, 199], "find_spec": 7, "fine": 20, "finish": [24, 27, 28, 31, 123], "finit": [42, 106, 107, 131], "firm": [49, 69], "firmli": 31, "first": [0, 2, 6, 8, 9, 11, 15, 16, 17, 22, 24, 29, 30, 42, 43, 54, 55, 86, 97, 103, 113, 115, 116, 123, 143, 158, 159, 166, 167, 172, 204, 207, 209, 223], "firstli": 29, "fista": [0, 138], "fit": [20, 59, 143], "fix": [7, 22, 34, 40, 41, 42, 44, 45, 54, 58, 113, 117, 123, 156, 161, 190, 191, 195, 206, 214], "fixedpoint": [54, 58, 113, 123, 214], "flatten": [15, 28, 31, 54, 109, 110, 124, 133, 218], "flatten_coeff": 109, "fledg": 28, "flexibl": 62, "flip": [49, 98, 148], "float": [0, 11, 42, 54, 62, 68, 69, 70, 75, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 143, 144, 145, 147, 148, 150, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166, 170, 171, 175, 176, 177, 184, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 225], "float16": 95, "float32": [2, 20, 29, 30, 95, 148, 167, 169, 172, 176, 177, 189, 193, 194, 221], "float64": [113, 117], "flow": [20, 124], "fly": [2, 43], "fne": 69, "fnejacobianspectralnorm": 31, "folder": [22, 24, 40, 41, 42, 48, 64, 66, 67], "follow": [0, 2, 3, 15, 16, 17, 20, 22, 23, 25, 27, 29, 30, 31, 41, 43, 44, 47, 49, 50, 51, 53, 54, 56, 58, 60, 62, 66, 72, 83, 84, 85, 109, 113, 133, 149, 188, 189, 198, 199, 203, 215], "font": 29, "fontsiz": [15, 223], "forbidden": [37, 41], "forc": 50, "forget": 128, "fork": 47, "form": [10, 12, 15, 28, 33, 42, 47, 50, 54, 56, 58, 109, 110, 113, 117, 118, 119, 122, 123, 147, 148, 156, 158, 161, 169, 215], "formal": 15, "format": [0, 15, 19, 20, 48, 62, 67, 109], "former": [30, 52, 73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "formul": 51, "formula": [30, 31, 57, 115, 128, 130, 148, 152, 156, 161, 169], "forw": [50, 53, 56, 68, 74, 75, 115, 118, 119, 121, 160, 161], "forward": [2, 3, 4, 13, 14, 30, 34, 40, 41, 42, 43, 48, 49, 51, 52, 54, 57, 58, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 123, 124, 128, 135, 136, 137, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 188, 190, 191, 194, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 223], "forward_denois": 95, "forward_diffus": 95, "forward_restorm": 103, "found": [11, 28, 56, 110], "four": 9, "fourier": [0, 3, 11, 56, 158, 164], "frac": [0, 3, 15, 16, 17, 27, 29, 30, 31, 37, 41, 42, 50, 57, 58, 69, 70, 78, 79, 81, 83, 84, 85, 87, 88, 98, 106, 107, 112, 113, 115, 118, 119, 121, 130, 132, 148, 150, 156, 157, 161, 162, 163, 165, 169, 175, 193, 198, 199, 202, 203, 214, 219], "fraction": [209, 225], "framework": [9, 33, 60, 206, 210, 211, 212, 213], "fraunhoff": 189, "free": [33, 103, 108, 220], "freeli": 30, "freia": 124, "freq": 190, "freq_plot": 62, "frequenc": [0, 2, 23, 62, 189, 190, 191, 195], "fresnel": [2, 189], "frobeniu": 106, "from": [0, 1, 2, 3, 4, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 77, 89, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 116, 123, 124, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 176, 177, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 206, 210, 211, 212, 213, 214, 220, 221, 223, 225], "from_numpi": [0, 15, 29, 30], "front": [115, 118, 128], "fstep": [43, 54], "fstepcv": 23, "fsteppdnet": 43, "full": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 60, 68, 75, 206], "fulli": [28, 34, 35, 36, 37, 90, 108], "function": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 16, 17, 20, 22, 23, 24, 29, 30, 33, 35, 40, 41, 42, 43, 44, 45, 49, 50, 51, 53, 54, 58, 59, 62, 63, 66, 67, 68, 69, 70, 72, 73, 75, 77, 79, 81, 90, 92, 94, 95, 96, 100, 101, 102, 104, 107, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 133, 134, 135, 136, 137, 142, 143, 144, 145, 146, 148, 150, 156, 161, 166, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 216, 217], "function_handl": [201, 202, 203], "further": 9, "furthermor": 91, "futur": [47, 205], "g": [0, 3, 4, 6, 14, 15, 16, 17, 20, 23, 24, 27, 30, 35, 41, 42, 48, 49, 50, 51, 54, 58, 62, 63, 66, 67, 68, 74, 75, 77, 78, 81, 82, 97, 98, 106, 107, 113, 116, 117, 120, 123, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 151, 155, 163, 164, 169, 172, 175, 194, 198, 200, 215, 216, 217, 219], "g1": 192, "g2": 192, "g_": [15, 41], "g_first": [3, 7, 24, 42, 44, 54, 123, 134, 135, 136, 137, 215, 216, 217], "g_i": [35, 75], "g_param": [7, 9, 22, 23, 24, 25, 27, 34, 40, 42, 44, 45, 50, 54, 58, 117, 134, 215, 217], "g_statist": [200, 201, 202, 203], "g_step": [23, 43], "gain": [11, 37, 84, 85, 127, 162, 163], "galleri": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 61, 223], "gamma": [16, 17, 23, 29, 36, 37, 41, 42, 50, 54, 77, 84, 85, 107, 109, 113, 115, 118, 119, 120, 121, 126, 127, 128, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 150, 152, 156, 162, 163, 215], "gamma_backtrack": 113, "gaussian": [0, 3, 4, 5, 6, 8, 9, 11, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 37, 40, 41, 42, 45, 53, 56, 57, 79, 83, 84, 87, 97, 116, 121, 130, 143, 148, 151, 152, 153, 156, 159, 162, 165, 166, 170, 175, 191, 193, 196, 199, 203, 228], "gaussian_blur": [2, 3, 11, 40, 56], "gaussian_filt": [146, 147], "gaussianmaskgener": 11, "gaussianmixturemodel": [97, 116], "gaussiannois": [3, 4, 5, 9, 10, 11, 15, 16, 17, 19, 22, 23, 24, 25, 27, 28, 29, 31, 40, 43, 45, 48, 50, 56, 151, 159, 197, 199], "gb": 95, "gd": [9, 40, 134, 139, 214, 215, 217], "gdfn": 103, "gener": [0, 7, 11, 14, 15, 19, 20, 23, 24, 25, 30, 33, 43, 47, 48, 49, 51, 58, 62, 67, 68, 75, 94, 97, 106, 116, 118, 119, 123, 124, 136, 148, 156, 161, 165, 168, 172, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 206, 207, 209, 210, 211, 212, 213], "generalis": 106, "generate_coeff": 189, "generate_dataset": [3, 4, 12, 22, 24, 34, 35, 36, 37, 40, 41, 42, 44, 45, 48], "generated_dataset_path": 48, "generated_datasets_path": [40, 41, 42, 45], "generatormixtur": [2, 56, 194], "geometr": [33, 98, 206, 210, 211, 213], "geometri": [33, 169, 177], "geq": [0, 83, 87, 88, 95, 127, 201, 202, 203], "get": [6, 29, 30, 34, 35, 36, 37, 41, 42, 47, 62, 95, 113, 143, 198, 199], "get_alpha": 29, "get_alpha_beta": 199, "get_alpha_prod": [95, 199], "get_beta": 30, "get_chain": 201, "get_cov": 143, "get_cov_inv_reg": 143, "get_degradation_url": 0, "get_dpir_param": 22, "get_freer_gpu": [3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 197, 199], "get_gspnp_param": 24, "get_image_dataset_url": 0, "get_image_url": [2, 9, 11, 19, 23, 25, 29, 30, 33], "get_noise_schedul": 199, "get_output": [24, 43, 113], "get_pdf": [191, 195], "get_sampl": 62, "get_samples_offlin": 62, "get_samples_onlin": 62, "get_weight": 143, "get_weights_url": [7, 33, 34, 35, 36, 37], "gfz": [0, 164], "git": [14, 60], "github": [14, 22, 43, 47, 49, 60, 77, 95, 105, 106, 107, 190], "give": [28, 66, 206], "given": [3, 9, 15, 19, 20, 29, 57, 62, 69, 70, 113, 117, 125, 130, 136, 137, 138, 139, 140, 141, 142, 155, 156, 166, 169, 177, 189, 190, 192, 195, 218], "global": [2, 3, 4, 5, 9, 11, 12, 15, 16, 17, 22, 23, 24, 25, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "gmm": [19, 20, 97, 116, 143], "gmm_bsds_color2": 19, "gmm_lodopab_smal": [97, 116], "gmm_lodopab_small2": 20, "go": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "goal": [16, 17], "good": [5, 9, 12, 44, 103, 169], "googl": [14, 20], "gov": 81, "gp": 193, "gpu": [3, 4, 12, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 44, 45, 67, 89, 93, 96, 99, 103, 104, 109, 110, 143, 155, 158, 166, 169, 176, 177, 197, 204, 220, 221], "gpu_numb": 52, "grad": [0, 9, 27, 30, 54, 115, 121, 128, 129, 130, 132], "grad_clip": 62, "grad_d": [112, 115, 119, 121, 127], "grad_f": 145, "grad_fn": 149, "grad_ll": 30, "gradient": [3, 16, 17, 20, 23, 24, 25, 30, 31, 36, 43, 49, 50, 54, 58, 62, 68, 77, 99, 106, 107, 112, 115, 117, 119, 121, 127, 128, 129, 132, 134, 139, 141, 144, 145, 148, 152, 156, 161, 169, 198, 214, 215, 216, 217], "gradientstep": 24, "grai": [3, 4, 9, 11, 12, 16, 17, 22, 23, 24, 25, 40, 43, 44, 45, 97, 116, 197, 199, 223, 225], "grayscal": [2, 8, 9, 10, 11, 19, 23, 25, 49, 50, 56, 149, 159, 221], "grid": [0, 19, 20, 56, 62, 164, 166, 208, 223], "grid_siz": 0, "ground": [5, 12, 16, 17, 19, 20, 23, 25, 27, 28, 29, 30, 31, 33, 41, 42, 44, 51, 62, 82, 113, 117, 204, 214], "groundtruth": [15, 30], "group": [33, 34, 49, 68, 98], "grow": 15, "gsdrunet": [24, 49], "gsdrunet_torch": 24, "gspnp": 24, "gstep": [43, 54], "gstepcv": 23, "gsteppdnet": 43, "gt": [0, 16, 17, 23, 25, 41, 42], "gu": [22, 114], "guess": [0, 9, 54, 161, 198, 199], "gz": [33, 37, 41], "h": [0, 6, 11, 15, 20, 42, 78, 94, 103, 105, 117, 125, 146, 147, 148, 152, 155, 158, 164, 165, 166, 167, 168, 172, 178, 179, 181, 182, 188, 189, 190, 191, 195, 219, 223], "h5": [22, 24, 48], "h_k": [168, 188], "ha": [0, 3, 4, 5, 6, 8, 10, 12, 22, 24, 28, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 66, 77, 93, 109, 113, 115, 117, 128, 144, 146, 147, 148, 152, 155, 158, 159, 167, 168, 169, 173, 174, 178, 181, 182, 188, 197, 198, 223, 225], "haar": 15, "hadamard": [11, 23, 167, 168, 188], "hal": 136, "half": [19, 20, 22, 34, 40, 97, 114, 116, 134, 140, 185, 199, 215, 216, 217], "handl": [95, 164, 197, 198], "hard": [109, 110], "hard_threshold_topk": 109, "has_cost": [23, 113, 123], "hat": [30, 35, 68, 75, 79, 81, 86, 87, 88], "hauptmann": 43, "have": [0, 3, 5, 6, 9, 14, 19, 25, 28, 29, 30, 33, 35, 49, 56, 60, 62, 63, 66, 70, 78, 95, 103, 115, 156, 158, 161, 164, 166, 167, 172, 197, 215, 219], "haze": 56, "hazi": 154, "hd5": 67, "hd5dataset": 67, "hdf5": [22, 24, 40, 41, 42, 48, 64], "hdf5dataset": [3, 4, 12, 22, 24, 34, 35, 36, 37, 40, 41, 42, 44, 45, 48], "head": [103, 105], "head_dim": 105, "height": [15, 65, 95, 101, 102, 116, 158, 169, 209, 223], "help": [0, 31, 47], "helper": [40, 45, 134, 178, 179, 180, 181, 182, 183, 216, 217], "here": [0, 2, 3, 4, 5, 7, 8, 10, 11, 14, 19, 20, 23, 27, 28, 29, 30, 31, 34, 35, 40, 41, 44, 45, 48, 54, 110, 157, 160], "hereaft": 30, "hessian": 106, "hidden": [20, 49, 95, 105, 124], "high": [0, 8, 11, 49, 66, 103, 159, 190, 191, 195], "higher": [0, 9, 189], "highest": 0, "highli": [41, 42], "histogram": [166, 185], "histogramdd": 184, "histori": [40, 62, 113, 117, 214], "history_s": [40, 113, 117], "history_size_backward": [40, 214], "ho": [29, 49, 95], "hold": 113, "home": [0, 6, 7, 9, 11, 19, 20, 22, 23, 24, 29, 30, 31, 33, 34, 35, 36, 37, 41, 44], "homographi": [33, 210, 211, 212, 213], "hook": [73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "horizont": [49, 63, 86, 98, 225], "host": 49, "hostedtoolcach": 2, "how": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 19, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 45, 56, 113, 114, 117, 168], "howev": [5, 15, 34, 43, 49, 52, 56, 68, 74, 75, 77, 81, 82, 94, 159], "hp": 117, "hq": [22, 34, 40, 54, 114, 134, 140, 199, 214, 215, 216, 217], "hspace": 117, "html": [47, 106, 107, 223], "http": [2, 5, 7, 9, 14, 15, 19, 20, 22, 23, 24, 27, 28, 30, 31, 33, 34, 35, 36, 37, 41, 43, 50, 60, 62, 68, 69, 70, 73, 75, 77, 79, 80, 81, 83, 84, 85, 89, 95, 96, 98, 101, 102, 105, 106, 107, 136, 144, 148, 152, 154, 166, 169, 177, 189, 190, 193, 197, 198, 199, 202, 203, 206, 212, 223], "hub": [7, 9, 19, 20, 22, 23, 24, 30, 31, 33, 34, 35, 36, 37, 103], "hugginfacehub": 49, "huggingfac": [7, 9, 15, 19, 20, 23, 24, 30, 31, 33, 34, 35, 36, 37, 49, 50, 103], "human": 30, "hurault": [24, 60], "hyperparamet": [19, 27, 30, 31, 41, 42, 53, 54, 83, 109, 110, 114, 150, 156, 197, 198, 199], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 212, 214, 215, 219, 221, 223, 225], "ib": [4, 12, 16, 22, 34, 44, 45], "iccv": 116, "id": [15, 20, 33, 69], "idea": [47, 55], "ident": [11, 19, 23, 69, 113, 117, 142, 150, 151, 156, 161, 201, 202, 203], "identif": 56, "idx": 29, "idx1": [37, 41], "idx3": [37, 41], "ie": [56, 192], "ieee": [22, 43, 73, 79, 83, 84, 85, 91, 107, 114, 154, 166], "ieeexplor": [73, 79, 83, 84, 85, 154, 166], "ignor": [0, 2, 4, 49, 73, 90, 92, 100, 101, 102, 104, 176, 177, 190, 191, 195, 206, 210, 211, 212, 213], "ii": 0, "iid": [148, 167], "illustr": [2, 54], "ilvr_adm": 95, "im": [0, 30], "im_siz": 0, "im_width": 169, "imag": [1, 13, 14, 18, 26, 29, 30, 32, 38, 43, 46, 49, 51, 53, 55, 57, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 118, 121, 124, 125, 126, 128, 131, 133, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 191, 193, 197, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225], "image_gdth": 0, "image_srf_2": 66, "image_srf_4": 66, "imagefold": [4, 33, 48], "imagenet128": [49, 95], "images_contours_and_field": 223, "imaginari": [11, 34, 111, 158], "img": [0, 9, 16, 17, 20, 23, 25, 27, 28, 29, 30, 31, 65, 223], "img1": 223, "img2": 223, "img3": 223, "img_001_srf_2_a": 66, "img_001_srf_4_a": 66, "img_100_srf_2_srcnn": 66, "img_100_srf_4_srcnn": 66, "img_list": [223, 225], "img_rang": 105, "img_shap": [5, 9, 11, 23, 41, 42, 48, 56, 92, 148, 165, 167], "img_siz": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 16, 17, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 40, 41, 42, 43, 44, 45, 50, 105, 147, 152, 156, 158, 159, 164, 168, 190, 191, 195, 221], "img_width": [11, 20, 25, 43, 169], "implement": [0, 2, 10, 11, 14, 15, 23, 32, 33, 41, 42, 43, 51, 54, 56, 60, 61, 95, 96, 105, 107, 114, 115, 117, 121, 123, 127, 128, 136, 143, 147, 150, 153, 155, 156, 161, 164, 168, 184, 185, 186, 187, 190, 195, 197, 198, 199, 220, 221, 223], "implicit": [5, 54, 58, 128, 214], "implicitli": [25, 50, 54, 106, 107], "import": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 58, 70, 113, 115, 117, 121, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 163, 167, 168, 169, 170, 171, 172, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 206, 210, 211, 212, 213, 217, 223], "importlib": 7, "impos": 33, "improv": [5, 9, 43, 89], "impuls": [2, 6, 166, 168], "in_chan": 105, "in_channel": [9, 12, 23, 25, 33, 34, 35, 36, 37, 40, 93, 95, 96, 99, 101, 102, 103, 108, 217], "in_nc": 104, "in_siz": [5, 92, 169, 176, 177], "includ": [19, 33, 50, 56, 57, 62, 67, 96, 143, 160, 185, 206, 210, 211, 213], "incom": [58, 214], "incomplet": [5, 14, 28, 31, 38, 61, 62, 64, 67, 68, 72, 74, 75, 89, 108, 148, 150, 155, 156, 161, 169, 220], "incorpor": [0, 9, 155, 156, 161, 164], "increas": [0, 2, 15, 81, 88, 97, 108, 116], "inde": [25, 156], "independ": [148, 165, 167, 193], "index": [2, 16, 17, 22, 24, 62, 80, 143], "index_select": 30, "indic": [11, 44, 50, 67, 109, 117, 118, 133, 189, 201], "indicatorl2": [7, 44], "individu": 62, "induc": [0, 17], "inf_z": [57, 130], "infer": [62, 176, 177, 185], "inferno": 0, "infinit": [58, 214], "inform": [0, 9, 12, 34, 35, 36, 37, 44, 49, 51, 62, 66, 67, 80, 113, 143, 156, 204], "infti": [44, 118, 133], "inherit": [2, 3, 10, 24, 27, 43, 51, 52, 54, 56, 158], "init": 7, "init_anderson_acceler": 117, "init_iterate_fn": [113, 117], "init_metrics_fn": [113, 117], "init_param": [41, 42, 45, 226], "initi": [7, 15, 20, 24, 25, 29, 30, 34, 35, 36, 37, 40, 41, 42, 44, 45, 54, 62, 93, 94, 95, 96, 99, 104, 105, 113, 116, 117, 124, 143, 160, 161, 198, 199, 226], "initialis": [117, 156], "inner": [131, 202], "inner_it": 202, "inpaint": [5, 7, 12, 14, 18, 21, 28, 30, 31, 33, 35, 46, 50, 54, 56, 58, 60, 61, 62, 64, 67, 72, 82, 109, 113, 115, 116, 118, 121, 126, 128, 133, 134, 150, 151, 153, 156, 161, 197, 199, 204, 215, 217, 219, 220, 221, 223, 224], "inpu": 62, "input": [3, 5, 6, 11, 15, 16, 17, 22, 23, 24, 25, 29, 30, 43, 45, 49, 50, 51, 54, 56, 62, 69, 70, 72, 76, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 117, 123, 124, 130, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 158, 159, 160, 163, 164, 165, 166, 168, 169, 172, 176, 177, 207, 208, 209, 214, 216, 217], "input_resolut": 104, "input_s": [5, 94, 172], "inscrib": 169, "inset": 225, "inset_loc": [0, 225], "inset_s": [0, 225], "insid": [103, 118, 169, 201], "inspir": [89, 199], "instal": [0, 14, 47, 51], "instanc": [2, 3, 23, 29, 42, 43, 52, 54, 73, 90, 92, 100, 101, 102, 104, 113, 117, 123, 128, 134, 135, 136, 137, 138, 139, 142, 176, 177, 205, 206, 210, 211, 212, 213, 215, 216, 217], "instanci": 66, "instanti": [0, 2, 3, 9, 16, 17, 22, 23, 24, 25, 56, 113, 168, 192], "instead": [0, 15, 30, 43, 52, 69, 73, 89, 90, 92, 100, 101, 102, 104, 107, 140, 146, 176, 177, 184, 185, 205, 206, 210, 211, 212, 213], "instruct": 103, "int": [0, 9, 11, 12, 27, 29, 31, 34, 35, 36, 37, 40, 43, 44, 45, 62, 65, 67, 69, 70, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 124, 125, 128, 131, 133, 134, 143, 144, 145, 148, 152, 156, 159, 161, 164, 165, 166, 167, 169, 173, 174, 176, 177, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 210, 211, 212, 213, 214, 215, 217, 221, 223], "integ": [33, 201, 202, 203, 209], "integr": [56, 169, 188], "intens": [6, 154, 166], "interest": [0, 23, 29, 113], "interfac": [27, 54], "interferometr": [1, 14, 61, 113, 115, 121, 128, 133, 134, 156, 161, 164, 219, 223, 224, 225], "interferometri": [0, 164], "intermedi": [24, 90, 108], "intern": [2, 6, 24, 115, 128, 143], "internet": [63, 66], "interp_point": [0, 164], "interpol": [0, 2, 11, 24, 30, 56, 69, 164, 169, 206, 208, 210, 211, 212, 213, 223], "interpolation_method": 223, "interpret": [50, 103, 108, 109, 157], "interv": [133, 196, 203], "intial": [9, 25], "intiliaz": 136, "intract": 30, "introduc": [0, 30, 55, 91, 92, 96, 104, 105, 202], "inv": 20, "invari": [33, 68, 118], "invers": [0, 2, 4, 5, 8, 10, 11, 12, 19, 20, 24, 27, 28, 31, 34, 35, 37, 47, 50, 51, 53, 55, 56, 58, 59, 60, 68, 72, 74, 75, 82, 83, 84, 85, 89, 124, 143, 147, 154, 155, 158, 160, 161, 169, 176, 197, 204], "inversef": [62, 81, 88], "invert": [20, 124, 135, 136, 137], "investig": 0, "involv": [33, 41, 106, 107], "io": [43, 106, 107], "iota_": [44, 118, 133], "ip": [3, 9, 22, 23, 24, 25], "ipynb": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "iqa": 22, "irf": 6, "irf_sigma": 6, "is_avail": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 197, 199], "is_standard_deblurring_network": 103, "is_standard_denoising_network": 103, "is_standard_deraining_network": 103, "is_valid_fil": 48, "isomorph": 212, "isotrop": [107, 175, 208], "issu": [27, 47, 60], "item": [0, 20, 54, 62, 167], "iter": [0, 3, 4, 5, 7, 8, 9, 10, 14, 16, 17, 22, 23, 24, 25, 28, 29, 30, 31, 33, 34, 40, 44, 45, 46, 58, 61, 62, 64, 67, 69, 70, 72, 82, 94, 106, 107, 110, 113, 114, 115, 117, 118, 119, 121, 123, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 156, 161, 198, 199, 200, 201, 202, 203, 204, 214, 215, 216, 217, 220, 223, 226], "iterator_param": 201, "ith": [97, 116], "its": [7, 9, 10, 16, 17, 23, 29, 41, 42, 43, 44, 51, 56, 106, 107, 113, 124, 143, 150, 185, 193], "itself": 0, "iwt": 109, "j": [6, 30, 41, 43, 106, 107, 113, 133, 148, 165, 166], "jac_inv": 20, "jacobian": [69, 70, 106, 115, 124, 156, 160, 161], "jacobianspectralnorm": 69, "jin": 55, "jingyunliang": 105, "join": 60, "jointli": 45, "jona": 43, "journal": 188, "jpeg": [2, 23], "jpg": [5, 27, 28, 31, 33], "julian": 60, "jupyt": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "just": [0, 2, 20, 151], "jychoi118": 95, "k": [0, 7, 11, 22, 23, 27, 31, 41, 42, 43, 44, 50, 54, 56, 58, 62, 106, 109, 110, 113, 114, 117, 123, 135, 136, 137, 138, 139, 140, 141, 142, 164, 168, 188, 190, 191, 193, 195, 202, 203, 215], "k3esji6dhpfc7": 33, "k_adjoint": [7, 43, 44], "k_oversampl": [0, 164], "kaiser": 164, "kargs_model": 69, "kbnufft": 0, "kbnufftadjoint": 0, "keep": [12, 30, 40, 44, 109, 148, 155, 156, 161, 167, 201, 202, 203], "keepdim": 218, "kei": [2, 23, 30, 33, 54, 56, 62, 105, 113, 169, 177, 189, 192, 193, 194, 196, 215, 217], "kept": [107, 109, 110], "kernel": [2, 3, 6, 11, 16, 17, 22, 24, 27, 29, 56, 57, 100, 130, 164, 178, 179, 181, 182, 189, 201], "kernel_index": [16, 17, 22, 24], "kernel_s": [100, 193], "kernel_torch": [16, 17, 22, 24], "kernels_12": 24, "keyword": [69, 117, 184, 205, 215], "kindli": 0, "kl": 20, "knowledg": [37, 50], "known": [28, 119, 122], "kornia": [51, 206], "kullback": 20, "kunisch": 106, "kutta": 202, "kwarg": [0, 2, 3, 10, 23, 24, 42, 43, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 105, 110, 115, 117, 120, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 184, 190, 191, 192, 194, 195, 196, 204, 205, 214, 215, 216, 217], "kwargs_model": 69, "kx": 136, "l": [2, 15, 20, 22, 35, 51, 62, 93, 99, 100, 106, 107, 114, 193, 202, 203], "l1": [42, 103, 120], "l1prior": 117, "l2": [0, 3, 9, 16, 17, 22, 23, 24, 25, 27, 29, 30, 31, 34, 40, 41, 42, 45, 50, 54, 58, 97, 103, 113, 115, 117, 128, 199, 216, 217], "l2_loss": 30, "l2_prior": 3, "l2prior": 3, "l3": 103, "l4": 103, "label": [4, 20, 37, 41, 48, 50, 54, 95, 113, 225], "label_loc": 225, "lam": 20, "lam_epl": 20, "lam_patchnr": 20, "lamb": [0, 7, 16, 17, 24, 34, 41, 42, 115, 128, 142], "lambd": 54, "lambda": [0, 3, 7, 15, 16, 17, 20, 23, 24, 25, 34, 35, 36, 37, 41, 42, 50, 53, 54, 109, 110, 113, 115, 117, 123, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150, 156, 161, 172, 194, 199, 200, 201, 202, 203, 215, 216, 217], "lambda_": [15, 29, 41, 199], "lambda_1": 106, "lambda_2": 106, "lambda_i": 15, "langevin": [27, 31, 60, 202, 203], "larg": [0, 9, 10, 56, 60, 94, 95, 97, 106, 116, 133, 148], "large_model": [29, 30, 95], "larger": [33, 40, 45, 67, 95, 148, 156, 157, 169, 194, 202, 203], "largest": [70, 109, 113], "last": [2, 29, 62, 117, 155, 185], "last_batch": 62, "latent": [20, 90], "later": [9, 29, 30], "latest": 60, "latter": [30, 67, 73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "laurent": [106, 107], "law": 148, "layer": [5, 34, 43, 45, 49, 58, 90, 92, 93, 95, 96, 101, 102, 103, 104, 105, 108], "layernorm": [103, 105], "layernorm_typ": 103, "layout": 223, "lcondat": [106, 107], "ldot": [15, 173, 174], "lead": [169, 177, 212], "leakyrelu": [93, 99, 163], "learn": [3, 5, 12, 19, 20, 22, 24, 33, 36, 37, 38, 40, 44, 45, 46, 47, 49, 61, 62, 64, 67, 68, 71, 72, 74, 75, 82, 89, 93, 94, 96, 101, 102, 108, 114, 115, 116, 121, 123, 126, 128, 133, 136, 141, 148, 150, 153, 155, 156, 158, 161, 169, 207, 208, 215, 217, 220, 223, 226], "learnabl": [41, 42, 44, 58, 105, 108, 215], "learning_r": [5, 12, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 94], "least": [12, 44, 54, 62], "leclair": 24, "lecun": [37, 41], "left": [27, 29, 31, 35, 37, 41, 54, 57, 58, 83, 84, 85, 115, 118, 130, 133, 148, 156, 161, 165, 175, 193, 199, 203, 214, 225], "leftarrow": 113, "legendr": [23, 136], "leibler": 20, "len": [0, 2, 15, 29, 66, 189], "lenght": 45, "length": [2, 6, 7, 34, 41, 42, 43, 44, 45, 113, 193, 223, 225], "leq": [29, 118, 136, 138, 141, 142, 173, 174], "let": [2, 15, 29, 30, 98], "level": [0, 5, 6, 7, 11, 15, 17, 19, 23, 25, 27, 28, 29, 30, 31, 41, 44, 45, 49, 54, 57, 91, 93, 95, 96, 98, 103, 105, 108, 109, 110, 114, 121, 126, 127, 130, 133, 153, 157, 161, 163, 166, 171, 194, 196, 197, 198, 199, 202, 203], "leverag": [57, 58, 70, 150, 214], "levin": [3, 16, 17, 22, 24], "levin09": [16, 17, 22], "lf": 33, "lhood": 27, "lib": 2, "librari": [29, 40, 41, 42, 43, 45, 47, 49, 55, 62, 91, 124, 204, 205], "lidar": [13, 14, 61, 161, 166, 220], "light": [56, 154], "like": [0, 93, 106, 143], "likelihood": [14, 20, 21, 27, 30, 53, 57, 61, 97, 116, 121, 122, 124, 125, 127, 143, 150, 151, 153, 155, 156, 161, 201, 202, 203, 219, 221, 223], "limit": [14, 15, 19, 21, 33, 49, 61, 62, 65, 97, 103, 115, 116, 122, 124, 125, 128, 150, 151, 156, 157, 161, 169, 171, 189, 219, 223], "linalg": 15, "line": [8, 14, 50, 56, 155, 169, 190, 191, 195], "linear": [0, 5, 8, 11, 12, 16, 17, 20, 23, 25, 27, 28, 29, 30, 31, 41, 42, 44, 86, 89, 97, 106, 107, 112, 115, 116, 117, 131, 142, 144, 148, 150, 151, 154, 155, 156, 158, 159, 160, 161, 167, 169, 172, 204], "linear_std_psnr": 204, "linearli": 223, "linearphys": [0, 8, 10, 56, 97, 113, 115, 116, 117, 146, 148, 150, 152, 159, 160, 164, 168, 169, 198, 199], "linefmt": 6, "linewidth": 0, "link": [5, 14, 29, 53, 95, 201, 202, 203], "linspac": [20, 28, 29, 30, 169, 197], "lionel": [5, 27, 28, 31], "lip": [138, 141, 142], "lipschitz": [23, 49, 51, 106, 107, 127, 156, 202, 203], "lipschitzian": [106, 107], "list": [7, 8, 11, 29, 30, 35, 41, 42, 44, 45, 52, 54, 59, 60, 62, 67, 75, 93, 94, 97, 99, 103, 104, 109, 110, 113, 116, 133, 134, 148, 154, 159, 160, 161, 169, 185, 189, 192, 197, 204, 205, 208, 215, 216, 217, 218, 223, 225], "list_imag": 15, "list_param": [2, 189], "list_prox": 15, "list_wv": [15, 110], "lista": [14, 42, 44, 46, 61, 62, 64, 67, 72, 82, 115, 121, 128, 133, 141, 148, 156, 161, 215, 217, 220, 223, 226], "listtensor": 154, "live": [25, 169], "ll": [0, 15, 30], "load": [0, 13, 14, 29, 48, 50, 56, 61, 62, 63, 66, 67, 103, 109, 115, 118, 126, 128, 148, 150, 155, 156, 160, 161, 165, 167, 215, 217, 220, 221], "load_dataset": [3, 4, 12, 16, 17, 22, 24, 34, 40, 44, 45], "load_degrad": [16, 17, 22, 24, 34], "load_np_url": [0, 15], "load_state_dict": [7, 33, 34, 35, 36, 37, 44, 143, 148, 155, 160, 165, 167], "load_state_dict_from_url": [7, 33, 34, 35, 36, 37], "load_torch_url": 20, "load_url_imag": [2, 5, 9, 11, 19, 23, 25, 27, 28, 29, 30, 31, 33, 50], "loader": [41, 42, 48, 62, 204, 205], "loc": [7, 34, 35, 36, 37, 225], "local": [5, 36, 47, 48, 103], "locat": [0, 6, 164, 225], "lodopab": [20, 157], "log": [0, 3, 9, 14, 16, 17, 20, 21, 25, 27, 30, 31, 40, 41, 42, 43, 45, 49, 57, 61, 62, 97, 116, 121, 122, 124, 125, 127, 130, 143, 148, 150, 151, 153, 155, 156, 157, 161, 167, 198, 201, 202, 203, 219, 221, 223], "log10": 0, "log_": [78, 219], "log_metrics_wandb": 62, "logan": 9, "logarithm": 0, "logpoisson": 157, "logpoissonlikelihood": 20, "logpoissonnois": [20, 122], "logs_total_loss_ev": [20, 62], "logs_total_loss_train": [20, 62], "logscal": 0, "long": [4, 30, 62], "look": [58, 66], "loop": [52, 62, 117], "loss": [5, 9, 12, 14, 20, 22, 31, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 60, 61, 62, 64, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 108, 112, 115, 121, 150, 151, 156, 161, 163, 204, 205, 220], "loss_hist": 9, "loss_tot": [20, 62], "low": [0, 8, 11, 23, 57, 130, 152, 157, 159, 184, 185, 190, 191, 195], "lower": [157, 172, 184, 185], "lpip": 22, "lpips_v0": 22, "lprior": 27, "lr": [5, 12, 20, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 103], "lr_schedul": [12, 34, 35, 36, 37, 40, 43, 44, 45, 62], "lr_variational_problem": 20, "m": [0, 9, 11, 23, 37, 41, 42, 47, 48, 53, 56, 81, 83, 84, 85, 107, 112, 142, 148, 150, 155, 156, 161, 164, 165, 167, 202], "m1mcxyjoy6zyj4v1goybdul": 33, "m_1": 81, "m_2": 81, "machin": 47, "made": 48, "magnet": 158, "magnitud": 223, "mai": [5, 6, 9, 54, 94, 108, 113, 123, 163], "main": [7, 9, 10, 15, 19, 20, 23, 24, 30, 31, 33, 34, 35, 36, 37, 47, 50], "maintain": 143, "make": [9, 31, 47, 49, 62, 109], "mani": [5, 50, 56, 58, 60, 152], "manner": [62, 150, 204], "manual": [5, 25], "manual_se": [0, 2, 3, 4, 5, 9, 11, 12, 15, 16, 17, 22, 23, 24, 25, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 56, 70, 148, 150, 151, 155, 158, 165, 167, 169, 192, 194, 196, 197], "map": [9, 36, 43, 53, 55, 56, 57, 77, 95, 106, 107, 130, 151, 156, 161, 198, 199], "map_loc": [7, 33, 34, 35, 36, 37], "mapsto": [50, 53, 54, 56, 113, 156, 161, 164], "marcenko": 148, "markerfmt": 6, "markov": [27, 201, 202, 203], "mask": [5, 7, 10, 11, 12, 17, 19, 27, 28, 30, 31, 33, 34, 35, 36, 44, 50, 54, 56, 77, 81, 88, 121, 147, 150, 155, 158, 167, 189, 190, 191, 195, 197, 199], "mask_gaussian": 11, "mask_gener": 56, "mask_random": 11, "mask_svd": 150, "mask_uniform": 11, "mat": [16, 17, 22], "match": [41, 47, 155, 166, 218], "matern_kernel": 193, "math": [23, 24, 29, 42, 43, 82, 115, 128, 130, 135, 137, 138, 140], "mathbb": [0, 15, 20, 33, 50, 54, 69, 70, 113, 148, 150, 155, 164], "mathbf": [29, 30, 50, 198, 199], "mathcal": [6, 19, 20, 29, 30, 31, 35, 44, 51, 57, 79, 83, 84, 85, 98, 118, 130, 148, 153, 157, 162, 163, 165, 166, 170, 171, 193, 198, 199, 203], "mathemat": [8, 188], "mathrm": [20, 148, 165], "matlab": [106, 107], "matplotlib": [6, 9, 15, 29, 223], "matric": [27, 143, 148, 186, 187], "matrix": [0, 11, 27, 41, 42, 70, 142, 148, 155, 156, 159, 164, 165, 167, 169], "matthieu": 60, "mat\u00e9rn": 193, "max": [0, 9, 11, 15, 28, 30, 31, 73, 78, 93, 99, 120, 133, 170, 184, 185, 219, 223], "max_img": 223, "max_it": [0, 3, 7, 9, 15, 16, 17, 20, 22, 23, 24, 25, 27, 28, 31, 34, 40, 41, 42, 43, 44, 45, 54, 69, 70, 110, 113, 117, 118, 119, 134, 143, 144, 145, 156, 161, 198, 199, 200, 201, 202, 203, 215, 217], "max_iter_backward": 214, "max_iter_int": [115, 128], "max_pixel": [78, 219], "max_zernike_amplitud": 189, "maxim": [3, 12, 20, 22, 24, 40, 41, 42, 44, 45, 49, 115, 128, 131, 143], "maximum": [3, 20, 28, 29, 57, 69, 70, 78, 106, 107, 113, 117, 118, 119, 130, 133, 134, 143, 144, 145, 156, 161, 170, 196, 200, 206, 209, 214, 219, 223], "maxpool": [93, 99], "mb": [1, 13, 18, 21, 26, 32, 38, 39, 46, 61, 95], "mc": [34, 35, 98], "mc_iter": 88, "mc_sampl": [87, 88], "mcloss": [33, 34, 35], "mcmc": 57, "md5": 33, "mea": 10, "mean": [12, 15, 20, 27, 28, 29, 30, 31, 41, 44, 53, 54, 57, 62, 74, 75, 77, 81, 82, 83, 84, 85, 200, 201, 202, 203, 205], "mean_batch": 219, "mean_has_converg": 201, "meaning": 29, "measur": [2, 3, 4, 7, 8, 10, 11, 12, 14, 15, 16, 17, 20, 22, 23, 24, 25, 29, 30, 33, 34, 36, 37, 38, 40, 43, 44, 45, 50, 51, 53, 55, 56, 57, 59, 61, 62, 64, 67, 68, 72, 74, 75, 77, 79, 81, 83, 84, 85, 88, 89, 94, 101, 108, 112, 113, 114, 115, 117, 118, 119, 127, 142, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 197, 198, 199, 201, 204, 205, 220], "measurement_dir": [3, 4, 12, 22, 24, 34, 35, 36, 37, 40, 41, 42, 44, 45], "median": [27, 50, 100], "medianfilt": [27, 50], "medic": 43, "medium": 154, "meet": [4, 31], "mem": [1, 13, 18, 21, 26, 32, 38, 39, 46, 61], "memori": [97, 105, 107, 116, 169, 176, 177, 220], "mention": 133, "meshgrid": 2, "messi": [5, 27, 28, 31], "meth": [44, 51], "method": [2, 3, 5, 10, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 31, 43, 44, 49, 50, 51, 54, 56, 57, 60, 61, 62, 64, 67, 69, 70, 71, 72, 78, 93, 94, 96, 97, 106, 107, 113, 114, 115, 116, 118, 121, 124, 126, 128, 134, 135, 142, 143, 146, 147, 148, 150, 153, 156, 160, 161, 165, 166, 169, 197, 200, 202, 204, 219, 220, 221, 223], "metric": [0, 3, 5, 9, 12, 16, 17, 22, 23, 24, 25, 27, 28, 31, 40, 41, 42, 43, 44, 45, 62, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 113, 117, 204, 205, 214, 224], "metric_nam": 113, "middl": [56, 146, 147, 152, 156, 169, 177], "might": [10, 72, 97, 116, 199], "min": [0, 9, 11, 16, 17, 20, 30, 44, 50, 54, 97, 106, 107, 109, 110, 113, 116, 133, 136, 156, 161, 170, 184, 185, 206, 223], "min_": [3, 5, 15, 94], "min_max": 223, "min_prob": [20, 50, 54, 113], "min_x": [41, 42, 113, 117], "mind": 30, "minim": [5, 16, 17, 20, 35, 41, 44, 50, 54, 94, 97, 106, 113, 116, 123, 138, 140, 141, 145, 198], "minimis": [42, 113, 135, 136, 137, 139, 140], "minimiza": 94, "minimize_variational_problem": 20, "minimum": [133, 170, 196, 206], "minut": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "mio": [19, 49], "mirror": 125, "miss": [7, 17], "mix": [11, 37, 56, 192, 194], "mixtur": [19, 20, 97, 116, 143, 192], "mlp": 105, "mlp_ratio": 105, "mm": 62, "mmse": 130, "mn": [148, 167], "mnist": [35, 36, 37, 41, 42, 48, 67], "mnist_train": [41, 42], "mode": [9, 63, 93, 96, 99, 103, 104, 111, 167, 206, 208, 223], "model": [0, 3, 9, 13, 14, 15, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 66, 68, 69, 72, 75, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 126, 128, 130, 135, 136, 137, 138, 143, 148, 150, 153, 154, 155, 156, 157, 159, 161, 166, 169, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 213, 215, 217, 219, 220, 221, 223, 226], "model_epl": 20, "model_infer": 62, "model_nam": [7, 34, 35, 36, 37], "model_new": [7, 44], "model_nontrain": 7, "model_patchnr": 20, "model_spec": 44, "modifi": [27, 51, 52, 87, 88], "modul": [0, 3, 10, 15, 16, 17, 22, 25, 27, 28, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 55, 56, 58, 62, 68, 69, 70, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 123, 124, 128, 143, 148, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 165, 167, 170, 171, 176, 177, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 226], "modulelist": 15, "modulu": 160, "mohan": 108, "moi": [35, 75], "moiloss": 35, "moment": 49, "momentum": [113, 117, 214], "monoton": 49, "mont": [27, 31, 49, 83, 84, 85, 87, 88, 98, 200, 201, 202, 203], "montecarlo": [27, 200, 202, 203], "more": [0, 2, 5, 7, 15, 20, 27, 42, 44, 50, 54, 56, 58, 62, 66, 80, 93, 95, 96, 97, 98, 99, 104, 105, 110, 113, 114, 116, 120, 134, 144, 148, 156, 157, 161, 169, 176, 177, 189, 193, 202, 203, 204, 208, 210, 211, 212, 213, 214, 215, 216, 217, 223], "moreau": [23, 57, 115, 128, 130, 140], "moreov": [9, 10, 20, 30, 113], "most": [49, 143, 220], "mostli": 157, "mother": [109, 110], "motion": [3, 16, 17, 22, 24, 56, 193], "motion_gener": 2, "motionblurgener": [2, 56, 192, 194], "move": 33, "mr": 191, "mri": [14, 15, 38, 56, 60, 61, 62, 64, 67, 68, 72, 74, 92, 96, 115, 121, 126, 128, 150, 156, 161, 190, 191, 195, 207, 215, 217, 220], "mri_mask_128x128": 34, "mse": [12, 40, 41, 42, 43, 44, 45, 68, 74, 75, 77, 81, 82], "mse_loss": 42, "mseloss": [68, 74, 75, 77, 79, 81, 82, 205], "mu": [20, 122, 143, 157], "mul": 161, "mulbackward0": 149, "mult": [186, 187], "multi": [35, 43, 52, 75], "multidimension": 185, "multipl": [2, 14, 22, 23, 28, 33, 37, 38, 56, 57, 61, 62, 64, 67, 72, 73, 74, 75, 79, 81, 84, 85, 87, 88, 89, 98, 108, 115, 150, 154, 155, 156, 161, 192, 200, 220], "multipli": [8, 54, 56, 59, 135, 156, 168, 187, 188, 218], "multiplier_adjoint": 186, "multiscal": 80, "multispectr": [33, 206, 212], "must": [10, 11, 16, 17, 23, 25, 70, 72, 93, 149, 190, 195, 197, 199, 218, 225], "my_dataset_nam": [12, 34, 35, 36, 40, 41, 42, 44, 45], "mykernel": 201, "mysampl": 201, "n": [0, 7, 15, 19, 20, 24, 29, 30, 31, 35, 39, 53, 56, 57, 69, 70, 78, 79, 81, 83, 84, 87, 88, 95, 130, 148, 150, 153, 155, 156, 159, 160, 161, 162, 164, 165, 167, 170, 190, 191, 198, 199, 203, 219], "n0": [20, 122, 157], "n_0": [122, 157], "n_1": 95, "n_2": 95, "n_channel": [3, 4, 7, 9, 12, 16, 17, 22, 23, 24, 25, 34, 40, 41, 42, 43, 44, 45], "n_coeff": 109, "n_compon": [20, 97, 116, 143], "n_data": 43, "n_detector_pixel": [169, 177], "n_dual": 43, "n_eigen_psf": 2, "n_eigenpsf": 2, "n_images_max": [3, 12, 22, 24, 34, 35, 36, 37, 40, 41, 42, 44, 45], "n_it_max": [16, 106, 107, 131], "n_iter": [9, 142], "n_iter_train": 43, "n_level": [41, 109], "n_patch": 125, "n_primal": 43, "n_step": 193, "n_tran": [206, 207, 209, 210, 211, 212, 213], "n_transf": [207, 209], "n_wavelet_subband": 41, "n_zernik": 2, "na": 189, "nabla": [27, 31, 42, 50, 54, 57, 106, 107, 128, 129, 130, 131, 138, 139, 141, 142, 203], "nabla_": [30, 112, 121, 198], "nabla_adjoint": [106, 107, 131], "nabla_u": 115, "nabla_x": [115, 128, 129], "name": [30, 44, 110, 133, 134, 215, 216, 217], "nan": 108, "nativ": [2, 6], "natur": [4, 9, 19, 20, 33, 36, 59, 76, 95, 116], "nb": [93, 99], "nc": [93, 99], "ncbi": 81, "nearest": [93, 95, 99, 105, 199], "necessari": [35, 41, 47, 62, 95, 198, 199], "necessarili": [24, 123], "need": [2, 4, 7, 9, 15, 19, 27, 29, 44, 47, 52, 54, 56, 59, 62, 73, 90, 92, 100, 101, 102, 103, 104, 109, 136, 143, 163, 176, 177, 190, 195, 206, 210, 211, 212, 213], "neg": [20, 31, 57, 116, 122, 124, 125, 127, 143, 163, 201, 202, 203], "negat": 218, "negative_log_likelihood": [20, 116], "negative_patch_log_likelihood": 125, "neighbor": [0, 36, 77, 164], "neighbor2neighbor": [14, 38, 61, 62, 64, 67, 72, 89, 108, 150, 151, 156, 161, 163, 220], "neighbour": [93, 99], "net": [12, 29, 35, 36, 37, 93, 108], "network": [5, 13, 14, 20, 29, 30, 31, 50, 53, 55, 56, 58, 61, 62, 64, 67, 69, 71, 72, 77, 79, 81, 82, 83, 84, 85, 89, 90, 92, 93, 94, 95, 96, 99, 103, 104, 105, 108, 124, 148, 150, 155, 156, 159, 161, 169, 191, 198, 199, 204, 205, 220], "neural": [5, 12, 20, 30, 31, 43, 55, 69, 71, 92, 103, 108, 124, 191], "neuron": [20, 124], "never": 33, "nevertheless": 30, "new": [2, 8, 10, 27, 44, 62, 142, 143, 146, 147, 168, 192, 194, 201], "new_demo_ei_ckp_150_v3": 34, "new_x": 201, "next": [2, 27, 29, 33, 37, 41, 42, 49, 117], "next_sigma": 29, "next_t": 30, "nf": [93, 96, 101, 102], "nfe": 30, "nftrainer": 20, "nice": [6, 29], "nichol": 49, "nih": 81, "nll": 125, "nlm": 81, "nn": [0, 6, 7, 11, 15, 27, 41, 42, 44, 49, 51, 52, 56, 62, 68, 69, 72, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 105, 108, 111, 124, 146, 147, 148, 150, 151, 155, 158, 159, 160, 163, 165, 167, 197, 198, 199, 200, 201, 202, 203, 204, 205, 226], "no_grad": [0, 19, 24, 29, 68, 113, 150, 151], "nois": [0, 3, 4, 6, 9, 11, 15, 16, 17, 19, 22, 23, 24, 25, 29, 30, 36, 37, 45, 49, 50, 51, 53, 54, 57, 62, 68, 75, 78, 79, 83, 84, 85, 87, 91, 93, 94, 95, 96, 98, 103, 105, 108, 110, 114, 121, 126, 130, 148, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 169, 170, 171, 194, 196, 197, 198, 199, 201, 202, 203, 219], "noise_color": 159, "noise_grai": 159, "noise_level": [95, 161], "noise_level_img": [3, 9, 15, 16, 17, 22, 23, 24, 25, 40, 43, 45], "noise_model": [3, 5, 9, 10, 11, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 31, 40, 43, 45, 48, 50, 56, 151, 153, 156, 157, 161, 162, 163, 170, 171, 197, 199], "noise_std": 27, "noiseless": [83, 84, 85, 95], "noisi": [5, 15, 16, 17, 19, 20, 27, 28, 29, 30, 31, 33, 49, 56, 77, 79, 83, 84, 85, 91, 93, 95, 96, 97, 103, 105, 106, 107, 108, 109, 110, 153, 155, 157, 159, 160, 161, 162, 163, 170, 171], "noisy_imag": 49, "noll": 189, "nomenclatur": 2, "non": [0, 5, 31, 55, 56, 143, 148, 154, 156, 159, 160, 161, 164, 169, 190, 191], "non_linear": [15, 109, 110], "none": [2, 3, 4, 10, 20, 22, 23, 24, 33, 34, 35, 36, 37, 40, 45, 52, 56, 62, 63, 65, 66, 67, 89, 90, 93, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 113, 115, 116, 117, 118, 119, 123, 124, 128, 133, 134, 143, 146, 147, 148, 150, 152, 153, 156, 157, 158, 159, 161, 162, 163, 168, 169, 171, 176, 177, 184, 185, 189, 190, 191, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 208, 214, 215, 216, 217, 221, 223, 224, 225, 226], "nonetyp": [103, 152, 159], "nonexpans": [31, 49, 69], "nonlinear": 115, "noplot": 47, "norm": [0, 3, 8, 9, 10, 15, 16, 25, 27, 30, 44, 54, 62, 69, 70, 78, 86, 106, 107, 108, 109, 110, 113, 119, 121, 131, 133, 148, 156, 169, 219], "norm_a2": 54, "norm_grad": 30, "norm_lay": 105, "normal": [0, 9, 20, 29, 30, 41, 42, 78, 86, 96, 105, 106, 107, 121, 122, 124, 127, 130, 156, 157, 163, 164, 169, 219], "normalis": 121, "normalizing_flow": [20, 124], "normliz": 169, "note": [0, 2, 3, 27, 29, 30, 33, 40, 41, 42, 45, 48, 51, 52, 56, 62, 115, 118, 136, 140, 160, 169, 177, 204], "notebook": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "notic": [2, 29, 118], "now": [0, 2, 12, 15, 19, 20, 28, 29, 30, 33, 40, 41, 42, 44, 56, 214], "np": [0, 15, 27, 28, 29, 30, 148, 197], "npy": [0, 15, 16, 17, 22, 24, 34], "nufft": [0, 164], "nufftobj": 0, "null": 2, "num_angl": 20, "num_block": 103, "num_channel": [189, 192, 193, 194], "num_head": 105, "num_it": 9, "num_lay": 124, "num_refinement_block": 103, "num_step": 30, "num_train_timestep": [29, 30, 95, 199], "num_work": [3, 4, 12, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 67], "number": [0, 2, 3, 5, 7, 9, 10, 12, 15, 16, 17, 20, 22, 24, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 52, 54, 60, 62, 67, 84, 85, 87, 88, 90, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 122, 124, 125, 128, 131, 134, 143, 144, 145, 148, 156, 157, 161, 164, 165, 166, 167, 169, 177, 184, 185, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 214, 215, 217, 223, 227, 228], "number_of_oper": 35, "numer": [15, 27, 69, 70, 144, 156, 169, 201, 202, 203], "numpi": [0, 6, 15, 27, 28, 29, 30, 178, 179, 181, 182, 184, 185, 186, 187, 190, 191, 195, 197, 219], "numpoint": 0, "nutshel": 41, "nwimag": 0, "nyquist": 189, "o": [43, 148, 154, 167], "object": [3, 5, 8, 11, 15, 16, 17, 24, 28, 31, 41, 54, 56, 62, 65, 123, 139, 143, 156, 160, 161, 214, 218, 223, 225], "observ": [19, 20, 53, 75, 115, 116, 123, 135, 137, 138, 156, 161], "obtain": [2, 5, 8, 11, 27, 31, 55, 57, 58, 79, 81, 87, 88, 98, 103, 160, 175, 197, 198, 199, 201, 202, 208], "odd": 6, "odl": 43, "odlgroup": 43, "odot": [37, 84, 85, 154, 168, 188], "off": [50, 56, 190], "offer": [9, 10, 50], "offici": 105, "offlin": 62, "offset": [154, 190], "often": [53, 54, 56], "omega_": 15, "onc": [10, 12, 30, 44, 97, 113, 116], "one": [8, 15, 30, 35, 47, 50, 52, 54, 56, 60, 64, 69, 70, 73, 90, 92, 100, 101, 102, 104, 109, 111, 143, 146, 147, 148, 152, 154, 156, 159, 169, 172, 176, 177, 191, 195, 201, 202, 203, 206, 210, 211, 212, 213], "ones": [2, 6, 7, 10, 11, 25, 27, 29, 30, 41, 44, 49, 51, 54, 56, 59, 121, 146, 147, 149, 156, 158, 169, 197, 199, 222], "ones_lik": [6, 17, 121], "onesid": 73, "onli": [2, 5, 10, 12, 16, 17, 20, 22, 23, 24, 27, 29, 30, 33, 34, 35, 36, 37, 40, 43, 44, 54, 56, 62, 67, 93, 94, 95, 96, 99, 104, 105, 109, 110, 115, 128, 133, 155, 156, 169, 175, 177, 179, 182, 198, 201, 204, 214, 223], "onlin": [62, 93, 95, 96, 99, 104, 105, 204], "online_measur": [20, 33, 43, 62, 204], "open": [47, 60, 185], "oper": [4, 9, 13, 14, 19, 29, 30, 36, 37, 38, 48, 49, 50, 51, 53, 54, 57, 60, 61, 62, 64, 67, 68, 72, 74, 75, 77, 79, 81, 83, 84, 85, 86, 88, 89, 97, 103, 106, 107, 108, 112, 113, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 131, 132, 133, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 203, 204, 205, 218, 220, 221, 223], "operatornam": [0, 15, 16, 17, 23, 29, 42, 44, 54, 58, 69, 98, 113, 115, 117, 118, 119, 120, 121, 123, 126, 128, 129, 130, 135, 136, 137, 138, 140, 141, 142, 199, 214, 215], "opnorm": 0, "opt": 2, "optic": 189, "optim": [0, 5, 7, 9, 12, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 50, 56, 57, 58, 61, 62, 94, 96, 97, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 153, 156, 160, 161, 167, 169, 198, 199, 201, 202, 203, 205, 214, 215, 216, 217, 219, 220, 221, 223, 224, 226], "optim_build": [0, 3, 9, 16, 17, 22, 23, 24, 25, 50, 54, 113], "optim_iter": [23, 41, 42, 43, 44, 113, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142], "optim_step": 20, "optimalgo": 113, "optimiter": [23, 113, 134, 135, 136, 137, 138, 139, 140, 141, 142, 215, 216, 217], "option": [2, 10, 30, 54, 56, 62, 63, 66, 68, 108, 113, 117, 127, 146, 148, 152, 156, 159, 161, 167, 168, 169, 178, 181, 188, 204, 214, 221], "order": [2, 27, 28, 29, 30, 68, 86, 106, 156, 167, 189, 197], "org": [2, 5, 22, 27, 28, 31, 68, 69, 70, 73, 75, 79, 80, 83, 84, 85, 89, 96, 98, 101, 102, 144, 148, 152, 154, 166, 169, 177, 189, 193, 197, 198, 199, 202, 203, 206, 212, 223], "orgin": 156, "orig": 33, "origin": [9, 15, 16, 17, 20, 30, 41, 43, 49, 83, 94, 96, 175, 197, 199, 208], "original_data_dir": [3, 4, 7, 12, 15, 16, 17, 22, 24, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "ortho": 0, "orthogon": [109, 148, 202], "orthonorm": [109, 133, 150, 164], "osa": 2, "ossci": [37, 41], "other": [0, 2, 4, 8, 29, 43, 48, 52, 54, 62, 68, 74, 75, 77, 81, 82, 91, 103, 109, 156, 161, 194, 204, 205, 218], "otherwis": [3, 4, 12, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 44, 45, 62, 68, 69, 70, 73, 75, 81, 88, 95, 98, 113, 117, 146, 148, 152, 156, 159, 167, 168, 169, 173, 174, 178, 179, 181, 182, 188], "our": [0, 16, 17, 23, 27, 30, 41, 42, 44, 47, 60, 103, 136], "ourselv": 11, "out": [30, 35, 48, 60, 70, 148, 185, 201, 202, 203], "out_channel": [9, 12, 23, 25, 33, 34, 35, 36, 37, 40, 93, 95, 96, 99, 101, 102, 103, 108, 217], "out_siz": 176, "outer": 202, "output": [15, 16, 17, 23, 24, 25, 29, 30, 41, 42, 50, 56, 62, 67, 70, 90, 92, 93, 95, 96, 97, 99, 101, 102, 103, 108, 109, 113, 115, 116, 117, 118, 124, 143, 146, 147, 150, 152, 158, 159, 163, 164, 166, 168, 169, 176, 177, 178, 179, 181, 182, 186, 187, 188, 204, 208, 214, 219], "over": [0, 4, 30, 50, 62, 79, 81, 87, 88, 98, 100, 106, 107, 117, 133, 169, 219], "overcomplet": [110, 148, 156, 169], "overfit": [5, 94], "overlaid": 225, "overlap": [97, 116, 125], "overlin": [29, 30, 160, 198, 199], "overrid": [100, 105, 143], "overridden": [73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "oversampl": [0, 9, 164], "oversampling_ratio": 9, "overwrit": [128, 153, 157, 162, 163, 171], "overwritten": [54, 128, 148, 156, 161, 169], "own": [10, 13, 14, 23, 43, 61, 64, 67, 93, 95, 96, 99, 104, 105, 150, 151, 153, 156, 161, 220, 223], "owt": 22, "ozan": 43, "p": [0, 3, 6, 15, 17, 22, 24, 27, 30, 31, 53, 57, 73, 84, 85, 97, 113, 116, 130, 133, 157, 162, 163, 166, 188, 198, 203], "p_": [20, 27, 31, 57, 130], "p_i": [20, 97, 116, 125], "p_ix": [97, 116], "p_p": 15, "p_x": 20, "p_z": 20, "packag": [2, 51, 54, 56, 57, 58, 91, 164], "pad": [0, 2, 6, 56, 100, 108, 109, 125, 146, 147, 152, 156, 159, 164, 168, 178, 179, 180, 181, 182, 183, 188, 206, 207, 208, 209, 210, 211, 212, 213], "pad_input": 109, "padding_mod": 208, "page": 49, "pair": [4, 12, 33, 35, 44, 48, 51, 62, 64, 67, 79, 81, 194, 204, 205], "pan": [8, 33, 206, 212], "pansharpen": [8, 11, 33, 206, 212], "pantiltrot": 33, "papadaki": 24, "paper": [3, 5, 6, 20, 22, 28, 31, 33, 43, 93, 94, 96, 103, 135, 157, 188, 199, 208], "parallel": [3, 4, 12, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 44, 45, 52, 91, 169, 176, 177], "parallel_comput": [169, 176, 177], "param": [23, 24, 27, 43, 56, 103, 148, 150, 156, 159, 169, 190, 191, 195, 201], "param_nam": [192, 194], "param_valu": [7, 41, 44, 192, 194], "paramet": [0, 3, 5, 7, 9, 10, 12, 15, 16, 17, 19, 22, 23, 24, 27, 29, 30, 31, 33, 44, 49, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226], "parameteris": 206, "parametris": [210, 211, 213], "params_algo": [0, 3, 7, 9, 16, 17, 22, 23, 24, 25, 34, 40, 41, 42, 43, 44, 45, 50, 54, 58, 113, 117, 134, 215, 216, 217, 226], "params_algo_new": [7, 44], "params_dict": [192, 194], "params_pc": [2, 168], "parent": [150, 156, 161], "part": [11, 34, 58, 93, 111, 158], "partial": [33, 58, 115, 119, 156, 161, 214], "particular": [0, 2, 8, 58, 62, 107, 136, 164, 169], "pass": [2, 40, 47, 52, 56, 58, 62, 73, 90, 92, 100, 101, 102, 104, 134, 138, 146, 152, 176, 177, 184, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217], "pastur": 148, "patch": [21, 48, 49, 61, 62, 65, 71, 97, 105, 115, 116, 122, 124, 125, 128, 150, 151, 153, 155, 156, 157, 161, 169, 171, 219, 221, 223], "patch_dimens": 116, "patch_norm": 105, "patch_siz": [19, 20, 65, 97, 105, 116, 124, 125], "patchdataset": 20, "patchnr_batch_s": 20, "patchnr_dataload": 20, "patchnr_epoch": 20, "patchnr_learning_r": 20, "patchnr_lodopab_smal": [20, 124], "patchnr_lodopab_small2": 20, "patchnr_prior": 20, "patchnr_subnets": 20, "patchprior": 20, "path": [9, 47, 48, 62, 63, 64, 66, 93, 95, 96, 97, 99, 104, 105, 116, 124, 223, 224, 226], "pathlib": [3, 4, 7, 9, 12, 15, 16, 17, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "pattern": [2, 11, 22, 47, 114, 167], "pc_gener": [2, 168], "pcg64": [190, 191, 195], "pd": [123, 136], "pdf": [28, 68, 89, 191, 193, 195], "pditer": 43, "pdnet_dualblock": 43, "pdnet_primalblock": 43, "pdnetdatafid": 43, "pdnetiter": 43, "pdnetprior": 43, "peak": [0, 6, 9, 78, 166, 219], "penal": [3, 54, 113], "per": [5, 6, 28, 31, 34, 35, 41, 49, 57, 93, 95, 96, 104, 109, 116, 156, 166, 167, 207, 209], "percentag": [201, 202, 203, 206], "perceptu": 71, "pereyra": 202, "perform": [0, 3, 5, 12, 15, 16, 17, 22, 25, 29, 30, 43, 44, 49, 51, 54, 58, 62, 66, 73, 79, 81, 87, 88, 90, 92, 94, 95, 100, 101, 102, 103, 104, 113, 117, 123, 128, 134, 143, 146, 147, 164, 168, 169, 176, 177, 178, 179, 180, 181, 182, 183, 188, 199, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217], "period": [201, 202, 203, 208], "permut": 0, "persist": 2, "perspect": [33, 206, 212], "perturb": [79, 87], "pf": 189, "pgd": [7, 9, 16, 17, 24, 25, 40, 41, 42, 44, 50, 54, 58, 113, 117, 123, 134, 141, 214, 215, 216, 217], "pgditer": [41, 42, 113, 117], "pgl": 33, "phantom": 9, "phase": [2, 13, 14, 49, 61, 93, 111, 112, 113, 115, 121, 126, 128, 134, 142, 153, 160, 161, 165, 189, 219, 220, 221, 223], "phase_retriev": [9, 160], "phaseless": 9, "phaseretriev": [112, 142, 165], "phenomenon": 5, "phi": [35, 89], "phi_": [12, 35], "photon": [13, 14, 61, 122, 157, 161, 166, 220], "phyic": 23, "physic": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 50, 51, 53, 54, 57, 58, 62, 67, 68, 72, 74, 75, 77, 79, 81, 83, 84, 85, 89, 94, 97, 112, 113, 115, 116, 117, 118, 119, 121, 123, 135, 136, 137, 138, 139, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 217], "physics1": [8, 156], "physics2": [8, 10, 156], "physics_concat": 8, "physics_cur": 62, "physics_gener": [62, 204], "physics_list": 75, "physics_stack": 8, "physicsgener": [56, 62, 192, 196, 204], "pi": [0, 9, 25, 169, 175], "pi_": 203, "pick": 60, "pil": [63, 66, 206], "pinhol": [51, 210, 211, 213], "pinv": 89, "pip": [14, 60], "pixel": [0, 6, 7, 9, 12, 17, 23, 28, 30, 31, 33, 37, 41, 42, 44, 56, 63, 78, 90, 93, 99, 103, 146, 147, 152, 155, 156, 161, 166, 167, 169, 172, 177, 219], "pixel_s": 189, "pixel_spac": [169, 177], "pixelshuffl": 105, "pixelshuffledirect": 105, "pixelsuffl": [93, 99], "pixelwis": [30, 155], "plai": [9, 24, 26, 27, 31, 45, 49, 50, 58, 60, 61, 107, 114, 126, 199, 202, 203, 204, 224], "plain": [197, 199], "plane": [2, 169], "plausibl": 53, "pleas": [0, 47, 60, 205], "plot": [0, 2, 3, 4, 8, 9, 10, 11, 12, 15, 19, 22, 24, 29, 30, 33, 34, 35, 36, 37, 40, 43, 44, 47, 50, 62, 113, 168, 204, 214, 224, 225, 226], "plot_curv": [0, 16, 17, 23, 25], "plot_imag": [3, 22, 24, 34, 35, 36, 37, 43, 44, 62, 204], "plot_inset": 0, "plot_measur": [62, 204], "plot_metr": [0, 3, 16, 17, 22, 24, 25, 43, 204], "plot_only_first_batch": [22, 24, 204], "plot_paramet": [41, 42, 45], "plt": [6, 9, 15, 29], "plug": [9, 24, 26, 27, 30, 31, 45, 49, 50, 58, 60, 61, 107, 114, 126, 199, 202, 203, 204, 224], "png": [2, 9, 11, 19, 25, 29, 30, 50, 63, 66, 223], "pnp": [7, 14, 26, 32, 34, 40, 44, 49, 54, 58, 60, 61, 62, 64, 67, 69, 71, 72, 78, 93, 96, 113, 114, 115, 121, 123, 128, 130, 134, 147, 150, 153, 155, 156, 161, 167, 169, 199, 201, 203, 204, 205, 217, 219, 220, 221, 223, 224], "pock": [7, 14, 43, 46, 61, 62, 64, 67, 72, 82, 106, 107, 109, 115, 118, 126, 128, 134, 136, 150, 155, 156, 161, 204, 215, 216, 217, 220], "point": [0, 31, 40, 47, 52, 54, 58, 69, 113, 115, 117, 118, 123, 143, 156, 193, 214], "poisson": [6, 11, 20, 36, 37, 57, 84, 85, 122, 127, 157, 162, 163, 166], "poissongaussiannois": 11, "poissonlikelihood": 29, "poissonnois": [11, 36, 37], "polici": 33, "polynomi": [2, 189], "pool": [93, 99, 100], "poor": 9, "popular": [51, 56], "posit": [29, 37, 50, 54, 84, 85, 105, 127, 163, 205], "possibl": [0, 2, 8, 9, 40, 47, 50, 52, 54, 56, 78, 95, 96, 113, 159, 214, 219], "possibli": [20, 27, 51, 75, 154, 201], "post": [12, 28, 31], "posterior": [27, 28, 30, 31, 57, 197, 198, 199, 201, 202, 203], "posteriori": [57, 130], "potenti": [5, 24, 42], "pow": 27, "power": [8, 10, 25, 29, 69, 70, 95, 156, 167], "pp": [22, 106, 107, 114], "pr": 47, "practic": [0, 33, 41, 104, 133, 156], "pre": [0, 9, 30, 50, 58, 71, 103], "precis": [0, 15, 20, 54, 98, 113, 120, 156, 189], "preconula": 27, "predefin": [54, 60, 156, 161], "prefer": 47, "prepar": [47, 62], "prepare_imag": 62, "preprocess": 142, "present": [34, 35, 36], "preserv": 0, "pretrain": [9, 19, 20, 22, 23, 24, 25, 28, 29, 31, 33, 34, 35, 36, 37, 40, 45, 52, 57, 60, 62, 89, 93, 95, 96, 97, 99, 103, 104, 105, 114, 116, 124, 197, 199], "pretrained_noise_level": 105, "previou": [27, 29, 52, 113, 117, 135, 136, 137, 201], "previous": 15, "primal": [14, 26, 44, 46, 50, 54, 61, 62, 72, 82, 96, 101, 102, 106, 107, 113, 115, 117, 121, 123, 126, 128, 134, 136, 150, 153, 156, 161, 167, 169, 215, 217, 219, 220, 221, 223, 224], "primari": [106, 107], "princip": 142, "print": [0, 2, 5, 7, 8, 9, 10, 12, 16, 17, 19, 20, 23, 25, 27, 28, 31, 34, 35, 36, 37, 44, 54, 56, 62, 66, 69, 70, 94, 106, 107, 113, 156, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203], "prior": [7, 9, 13, 15, 18, 19, 21, 22, 23, 25, 34, 40, 41, 44, 45, 46, 49, 53, 57, 58, 60, 61, 62, 64, 65, 67, 72, 82, 92, 93, 94, 97, 107, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 147, 148, 150, 151, 153, 155, 156, 157, 161, 169, 171, 175, 201, 202, 203, 204, 215, 216, 217, 219, 220, 221, 223, 224, 226], "prior_new": [7, 44], "priori": 20, "prob": [2, 192], "probability_mask": [12, 44], "probabl": [12, 20, 37, 44, 84, 85, 148, 155, 167, 191, 192, 195], "probail": 20, "problem": [4, 5, 9, 10, 12, 19, 20, 28, 34, 35, 40, 41, 44, 47, 49, 50, 51, 54, 55, 56, 58, 59, 60, 68, 94, 97, 106, 107, 109, 110, 113, 114, 116, 117, 123, 148, 151, 152, 154, 156, 159, 169, 197, 199], "proce": 117, "procedur": [27, 44, 108], "proceed": [22, 114], "process": [12, 49, 51, 62, 67, 91, 107, 111, 118, 133, 148, 156, 161, 165, 193, 199], "prod": [9, 148], "prod_": 30, "produc": [57, 156, 161], "product": [27, 56, 70, 156, 160, 161, 168, 188], "product_convolution2d": 2, "productconvolutionblurgener": [2, 168], "progress": [12, 30, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 67, 94, 143, 197, 198, 199, 200, 201, 202, 203, 204], "progress_bar": [20, 62], "proj": 118, "project": [0, 33, 41, 42, 47, 49, 51, 101, 118, 119, 164, 169, 176, 177, 201, 202, 203, 206, 210, 211, 212, 213], "promot": 53, "propag": [36, 68, 77], "properli": 0, "properti": 56, "proport": [83, 84, 85, 109, 190], "propos": [0, 15, 19, 20, 30, 33, 42, 69, 70, 98, 103, 116, 138], "propto": [31, 57, 130], "prototyp": 90, "provid": [0, 2, 5, 9, 10, 11, 16, 17, 22, 23, 24, 25, 27, 50, 54, 55, 56, 57, 58, 59, 62, 67, 109, 124, 133, 146, 147, 150, 158, 159, 169, 172, 185, 204, 205], "prox": [0, 15, 16, 17, 23, 29, 41, 42, 43, 44, 54, 115, 118, 119, 120, 121, 126, 128, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 147, 156, 158, 199], "prox_conjug": [115, 128], "prox_d": [115, 118, 119, 121, 122, 127], "prox_d_conjug": [23, 115], "prox_l0": 109, "prox_l1": 109, "prox_l2": [10, 56, 150, 152, 156], "prox_tau_fx": 107, "proxim": [3, 10, 15, 16, 17, 23, 24, 25, 29, 43, 50, 54, 58, 106, 107, 115, 117, 118, 119, 120, 121, 126, 127, 128, 131, 132, 133, 134, 141, 150, 152, 155, 156, 202, 215, 216, 217], "pseudo": [0, 2, 8, 10, 56, 89, 147, 155, 158, 160, 169], "pseudoinvers": [148, 150, 156, 161, 169], "psf": [0, 2, 189, 193], "psf_gener": [2, 168], "psf_grid": [2, 168], "psf_log": 0, "psf_size": [2, 56, 168, 189, 192, 193, 194], "psfgener": [2, 189, 193], "psi": [15, 17, 109, 110, 133], "psi_": 15, "psi_1": 110, "psi_2": 110, "psi_i": 0, "psi_l": 110, "psnr": [0, 3, 5, 9, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 113, 204, 214, 219], "psnr_epll": 20, "psnr_fbp": 20, "psnr_ob": 19, "psnr_patchnr": 20, "psnr_recon": 19, "pt": [19, 20, 30, 34, 97, 116, 124], "pth": [7, 9, 22, 23, 31, 33, 34, 35, 36, 37, 44, 62, 103, 148, 155, 160, 165, 167], "ptwt": 7, "public": 47, "pubm": 81, "pula": 27, "pula_mean": 27, "pula_var": 27, "pulaiter": 27, "pull": 47, "pupil": [2, 189], "pupil_s": 189, "pure": [33, 95, 199, 206], "purpos": 7, "push": 20, "put": [63, 66], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 61], "pyplot": [6, 9, 15, 29], "pytest": 47, "python": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 91], "python3": 2, "pytorch": [2, 3, 4, 5, 7, 11, 12, 15, 16, 17, 22, 23, 24, 25, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 52, 56, 93, 95, 96, 99, 100, 104, 105], "pywavelet": 109, "pywt": 133, "q": [30, 117], "qk": 105, "qk_scale": 105, "qkv_bia": 105, "qquad": [54, 113, 117, 123], "quad": [15, 20, 50, 54, 79, 83, 85, 113, 161], "quadrat": [19, 20, 22, 34, 40, 97, 114, 116, 134, 140, 199, 215, 216, 217], "qualiti": [12, 43, 44, 62, 76], "quantif": [14, 32, 60, 61, 69, 96, 115, 121, 128, 130, 150, 153, 155, 156, 161, 201, 203, 219, 220, 221, 223], "quantifi": 31, "quantiti": 156, "quantiz": [156, 161], "queri": 105, "question": [47, 60], "quickli": 59, "quickstart": 62, "quit": 0, "r": [0, 6, 10, 23, 24, 27, 29, 30, 36, 37, 43, 44, 50, 54, 69, 70, 77, 79, 81, 83, 84, 85, 87, 93, 99, 100, 106, 113, 118, 127, 148, 150, 155, 164, 166, 204], "r2": 106, "r2d2": 0, "r2r": 79, "r2r_eval": 79, "r2rloss": 87, "r_": [6, 27, 35, 166], "rachford": [45, 134, 137, 215, 216, 217], "radio": [1, 14, 61, 113, 115, 121, 128, 133, 134, 156, 161, 164, 219, 223, 224, 225], "radiointerferometri": 0, "radiu": [7, 44, 118, 119, 169, 177], "radon": [11, 20, 56, 169, 176], "rai": [169, 177], "rais": 128, "ramp": [169, 176], "rand": [11, 56, 153, 157, 162, 163, 170, 171, 223], "randn": [49, 56, 58, 148, 150, 151, 155, 156, 158, 159, 165, 167, 169, 172, 206, 210, 211, 212, 213, 217], "randn_lik": [0, 9, 27, 29, 30, 56, 70], "random": [0, 2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 49, 50, 56, 59, 61, 68, 75, 81, 84, 85, 88, 93, 94, 95, 96, 98, 99, 104, 105, 113, 115, 121, 124, 126, 128, 134, 148, 150, 151, 153, 155, 156, 158, 159, 160, 161, 165, 167, 169, 189, 190, 191, 193, 195, 197, 198, 199, 201, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 223, 227], "random_phantom": 43, "random_split": 33, "randomcrop": [12, 40, 44, 45, 63, 66], "randomli": [2, 12, 30, 44, 62, 88, 98, 125, 190, 191, 192, 194, 195, 204, 207, 209], "randommaskgener": [11, 56, 191], "randomphantomdataset": 43, "randomphaseretriev": 9, "rang": [0, 2, 7, 9, 10, 13, 14, 15, 17, 20, 29, 30, 33, 34, 35, 41, 43, 44, 52, 54, 56, 61, 62, 70, 95, 103, 105, 117, 161, 166, 199, 200, 207, 220], "rapidli": 22, "rate": [5, 62, 94, 104, 105, 190], "rather": [7, 11, 29, 41, 44, 57, 59, 130, 164], "ratio": [0, 6, 9, 11, 78, 81, 88, 105, 200, 219], "raw": [37, 41, 63, 66], "rcparam": 29, "re": [8, 11, 94], "re_init": 94, "reach": [3, 23, 24, 113, 117, 190], "read": [0, 50], "reader": [0, 52], "readi": [0, 2, 15, 30, 48], "readili": [0, 15, 29, 30], "readm": 66, "real": [0, 9, 11, 34, 49, 111, 158, 164], "real_fft": [179, 182], "real_imag": 111, "real_project": [0, 164], "realist": 49, "realiz": [0, 16, 17, 29, 62, 79, 81, 87, 88, 189], "reason": [0, 15], "rec": [3, 8, 10, 12, 22, 24, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "rec601": 149, "recal": [44, 58, 98, 215], "receiv": [35, 168], "recip": [73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "recognit": [22, 114], "recommend": [5, 7, 8, 10, 11, 12, 29, 33, 36, 37, 41, 44, 52, 54, 60, 94, 103, 107, 133, 148, 156, 167], "recomposit": 109, "recon": [0, 16, 17, 23, 25, 30, 41, 42], "recon_epl": 20, "recon_patchnr": 20, "reconstruct": [0, 13, 14, 16, 17, 19, 23, 24, 25, 27, 29, 31, 32, 33, 41, 42, 43, 48, 53, 57, 58, 59, 61, 62, 64, 67, 68, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 105, 108, 113, 115, 116, 121, 126, 128, 134, 148, 150, 153, 155, 156, 157, 159, 160, 161, 164, 165, 169, 177, 191, 197, 198, 199, 200, 201, 202, 203, 204, 205, 219, 220, 221, 223], "reconstrunct": 112, "recorrupt": 79, "recov": [0, 9, 16, 17, 206], "recreat": 150, "red": [6, 14, 26, 61, 64, 67, 99, 113, 115, 121, 128, 130, 134, 152, 153, 156, 161, 204, 220], "redefin": [0, 16, 17, 43], "reduc": [0, 5, 29, 30, 34, 35, 36, 37, 42, 97, 116, 133], "reduct": [42, 105], "redund": 15, "refer": [20, 29, 49, 53, 68, 71, 72, 76, 78, 80, 157, 219], "refin": 103, "reflect": [2, 15, 33, 146, 152, 159, 168, 178, 181, 188, 206, 208, 210, 211, 212, 213], "reformul": [41, 44], "reg": [50, 53, 54, 57, 58, 113, 120, 128, 129, 130, 131, 132, 133, 143], "reg_l2": 70, "region": 0, "regist": [73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "regnam": [17, 44, 50, 54, 113, 120, 126, 128, 129, 132, 133, 136], "regular": [2, 3, 5, 7, 9, 14, 15, 16, 17, 20, 25, 26, 29, 31, 34, 36, 40, 41, 42, 45, 50, 53, 54, 56, 58, 60, 61, 64, 67, 77, 81, 88, 96, 99, 106, 107, 113, 115, 117, 120, 121, 123, 128, 129, 130, 131, 132, 133, 134, 142, 143, 152, 153, 156, 161, 202, 203, 204, 214, 215, 216, 217, 220], "regular_mask": [81, 88], "regularis": [0, 16, 17, 29, 44, 54, 70, 113, 117, 134, 215, 216, 217], "regularizi": 20, "regval": 70, "rel": [15, 56, 156], "rel_crit": 15, "relat": [23, 41, 42], "relationship": 0, "relax": [45, 54, 99, 106, 107, 123, 135, 136, 137], "relaxation_step": 123, "releas": [2, 22, 105], "relev": [49, 113, 134, 215, 216, 217], "reli": [0, 23, 54, 128, 156, 164], "relu": [93, 96, 99], "remain": [10, 29], "remark": 30, "remov": [35, 51, 62, 89, 103, 155, 204, 205], "reparametr": 30, "repeat": [15, 43, 190, 191, 195], "replac": [40, 43, 45, 50, 58], "replic": [2, 146, 152, 159, 168, 178, 181, 188], "repositori": [47, 60, 77, 93, 95, 96, 99, 104, 105], "repres": [16, 17, 59, 97, 113, 116, 159, 191, 195, 218], "represent": 24, "reproduc": [2, 3, 4, 5, 9, 11, 12, 15, 16, 17, 22, 23, 24, 25, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 148, 150, 151, 155, 158, 165, 167, 169, 197], "request": 47, "requir": [2, 6, 10, 23, 27, 28, 34, 44, 48, 49, 51, 52, 54, 56, 57, 113, 130, 136, 169, 176, 177, 197, 199, 201, 202, 203], "requires_grad": [7, 70], "requires_grad_": [7, 11, 20, 29, 30, 41, 44, 70], "resampl": 208, "rescal": [0, 25, 29, 30, 62, 223], "rescale_mod": [9, 50, 223], "reset": 201, "reshap": [0, 109, 218], "reshape_th": 109, "resi_connect": 105, "residu": [29, 30, 90, 105, 108, 113, 201], "resiz": [9, 23, 25, 33, 34, 221], "resize_mod": [9, 23, 25, 221], "resolut": [0, 14, 26, 33, 46, 49, 61, 62, 63, 64, 66, 67, 68, 72, 82, 96, 99, 103, 104, 113, 115, 121, 126, 128, 129, 134, 152, 153, 156, 159, 161, 204, 208, 215, 217, 220, 226], "resolv": [7, 9, 15, 19, 20, 23, 24, 30, 31, 33, 34, 35, 36, 37, 50, 189], "reson": 158, "resp": 45, "respect": [2, 43, 58, 98, 123, 189], "respons": [2, 6, 33, 166, 168], "rest": 114, "restart": 107, "restor": [0, 3, 19, 20, 22, 24, 34, 40, 41, 42, 45, 49, 60, 93, 103, 105, 114, 116, 197, 199], "restorm": 49, "restrict": [11, 169, 198], "result": [9, 11, 20, 29, 30, 33, 58, 62, 156, 161, 199, 200, 202, 203, 204], "results_dir": [0, 3, 7, 9, 12, 15, 16, 17, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "retain": 156, "retrain": 20, "retriev": [13, 14, 30, 49, 61, 93, 112, 113, 115, 121, 126, 128, 134, 142, 153, 160, 161, 165, 206, 219, 220, 221, 223], "return": [0, 2, 3, 4, 7, 9, 10, 16, 17, 20, 23, 24, 25, 27, 28, 29, 30, 31, 35, 42, 43, 44, 49, 54, 62, 63, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 98, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 204, 205, 207, 208, 209, 214, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229], "return_fig": [223, 225], "rev": 124, "revers": [29, 30], "review": 166, "revisit": 29, "rewrit": 62, "rgb": [2, 10, 11, 97, 116, 149, 154, 159], "rho": [29, 30, 107], "rho_t": [29, 199], "right": [27, 29, 31, 35, 37, 41, 54, 56, 57, 58, 83, 84, 85, 115, 118, 130, 148, 156, 161, 165, 175, 193, 199, 203, 214, 225], "rm": 30, "rng": [190, 191, 195], "robust": [2, 103, 108, 169], "role": 31, "roll": [156, 172], "root": [35, 36, 37, 41, 42, 47, 48, 63, 66], "rotat": [33, 34, 35, 49, 68, 98, 169, 175, 177, 206, 210, 211, 212, 213], "rotoflip": 98, "roughli": 20, "round": 167, "routin": [54, 58], "row": [112, 191, 223], "rule": [30, 113, 115], "run": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 22, 23, 24, 25, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 62, 73, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 134, 176, 177, 197, 198, 199, 200, 201, 203, 206, 210, 211, 212, 213, 215, 216, 217], "rung": 202, "runner": [0, 6, 7, 9, 11, 19, 20, 22, 23, 24, 29, 30, 31, 33, 34, 35, 36, 37, 41, 44], "runtim": [5, 146], "rx": 169, "s3": [37, 41], "s_": 27, "s_sequential_indic": 189, "same": [2, 6, 7, 27, 34, 35, 36, 37, 43, 44, 49, 54, 56, 78, 100, 103, 106, 107, 109, 113, 115, 118, 119, 122, 131, 134, 146, 148, 152, 159, 165, 168, 176, 178, 179, 181, 182, 186, 187, 188, 215, 216, 217, 219, 222, 223, 225, 227, 228, 229], "sampl": [2, 10, 11, 24, 30, 32, 33, 35, 41, 42, 49, 56, 57, 60, 61, 62, 68, 75, 87, 88, 98, 100, 104, 115, 121, 128, 130, 147, 148, 150, 153, 155, 156, 161, 164, 165, 169, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 219, 220, 221, 223], "sample_mask": [190, 195], "sampler": [30, 57, 200, 201, 202, 203], "samples_loc": [0, 164], "samuel": 60, "sara": 0, "satellit": 56, "satisfi": [136, 138, 141, 142], "satur": [156, 161], "save": [0, 3, 4, 12, 13, 14, 16, 17, 22, 24, 25, 34, 35, 36, 37, 40, 41, 42, 43, 45, 48, 61, 62, 63, 66, 67, 105, 109, 115, 118, 126, 128, 148, 150, 155, 156, 160, 161, 165, 167, 200, 204, 215, 217, 220, 223, 224, 225, 226], "save_chain": [200, 201, 202, 203], "save_dir": [3, 4, 9, 12, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 44, 45, 48, 67, 223, 224, 226], "save_fn": 225, "save_fold": [3, 22, 24, 43, 204], "save_iter": 198, "save_model": 62, "save_path": [12, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 148, 155, 160, 165, 167], "sbr": 6, "scalar": [50, 59, 62, 86, 154, 185], "scale": [0, 3, 4, 9, 12, 16, 17, 22, 23, 24, 25, 33, 35, 36, 37, 40, 43, 44, 45, 79, 87, 103, 105, 108, 118, 193, 206, 213], "scale_out": 92, "scan": [14, 46, 61, 62, 72, 82, 101, 102, 115, 123, 128, 136, 153, 156, 161, 169, 177, 215, 217, 220], "scanvic": 33, "scatter": [0, 2, 56], "scatter_plot": 0, "scene": [6, 33, 66, 154, 166], "schedul": [12, 28, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 199], "scheme": [0, 34, 35], "schlemper": 191, "sci": 106, "scienc": 136, "score": [9, 27, 30, 31, 130], "scoreprior": [27, 31, 57, 201, 202, 203], "scratch": [34, 35, 36, 37, 62], "script": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "scunet": 49, "sd8ijjcopytxvpu6p": 33, "seamlessli": [2, 52, 218], "search": [19, 20], "second": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 54, 56, 97, 113, 116, 123, 155, 156, 158, 159, 166], "secondli": 29, "section": 29, "see": [0, 5, 6, 23, 27, 30, 31, 37, 41, 42, 44, 50, 51, 53, 54, 56, 58, 62, 68, 75, 77, 80, 81, 84, 85, 92, 93, 95, 96, 97, 99, 104, 105, 106, 107, 110, 113, 114, 116, 117, 134, 135, 144, 148, 156, 161, 166, 167, 169, 190, 191, 193, 195, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 223], "seed": [2, 3, 4, 5, 9, 11, 12, 15, 16, 17, 22, 23, 24, 25, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 148, 150, 151, 155, 158, 165, 167, 169, 197, 198, 199, 201], "seek": 15, "select": [0, 3, 7, 16, 17, 22, 23, 24, 25, 34, 40, 41, 42, 44, 45, 63, 113, 125, 190, 191, 192, 194, 195], "self": [0, 3, 6, 10, 20, 23, 24, 27, 33, 38, 43, 60, 61, 62, 63, 64, 66, 67, 68, 72, 74, 75, 77, 81, 83, 84, 85, 89, 96, 108, 115, 118, 121, 126, 128, 148, 150, 151, 155, 156, 158, 160, 161, 163, 165, 167, 197, 201, 207, 208, 215, 217, 220], "semi": 56, "semigroup": 206, "send": 47, "sens": [0, 13, 14, 30, 42, 46, 48, 61, 62, 64, 67, 68, 72, 75, 82, 115, 121, 128, 133, 141, 146, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 161, 162, 163, 167, 169, 175, 190, 191, 194, 195, 215, 217, 220, 221, 223, 226], "sensit": [83, 84, 85], "sensor": [68, 75, 148, 156, 159, 160, 161, 169], "sensor_model": [156, 161], "separ": [19, 111], "seq": [29, 30], "seq_next": 30, "sequenc": [0, 15, 29, 95, 164, 167, 185, 198, 199], "sequenti": [91, 189], "seri": 96, "serv": [54, 109], "server": [47, 60], "set": [0, 2, 4, 5, 7, 9, 11, 15, 19, 24, 27, 28, 29, 31, 33, 40, 41, 42, 43, 45, 51, 52, 56, 57, 62, 64, 66, 67, 68, 69, 70, 72, 74, 75, 77, 81, 82, 93, 94, 95, 96, 99, 103, 104, 105, 109, 118, 121, 124, 130, 133, 135, 136, 137, 143, 153, 155, 156, 157, 161, 162, 163, 164, 170, 171, 192, 201, 203, 204, 206], "set3": 4, "set3c": [3, 4, 12, 16, 17, 22, 23, 24, 40, 44, 45], "set_cov": 143, "set_cov_reg": 143, "set_descript": 20, "set_weight": 143, "setup": 62, "setup_train": 62, "setweight": 0, "sever": [15, 169, 177], "sfx": 158, "shannon": [2, 189], "shape": [0, 2, 3, 5, 9, 11, 15, 17, 19, 20, 28, 29, 30, 31, 41, 42, 54, 92, 93, 97, 101, 102, 103, 105, 106, 107, 109, 112, 116, 118, 131, 143, 144, 148, 159, 165, 167, 179, 182, 186, 187, 189, 190, 191, 193, 195, 218, 223], "share": 42, "sharpen": 8, "shear": [33, 190], "shelf": 50, "shepp": 9, "shepplogan": [9, 25], "shepplogandataset": 43, "shift": [9, 33, 156, 172, 206], "shift_max": [206, 209, 210, 211, 212, 213], "short": [12, 44], "should": [0, 5, 6, 9, 23, 25, 34, 40, 54, 62, 66, 67, 73, 79, 81, 83, 84, 85, 87, 88, 90, 92, 94, 100, 101, 102, 103, 104, 105, 109, 128, 134, 136, 138, 141, 142, 148, 154, 156, 157, 158, 159, 164, 167, 169, 172, 176, 177, 189, 193, 194, 197, 199, 201, 203, 204, 205, 206, 210, 211, 212, 213, 215, 216, 217, 223], "show": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 22, 23, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 40, 41, 42, 45, 56, 62, 67, 113, 117, 168, 204, 223, 224, 225, 226], "show_progress_bar": [12, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 67, 117, 204], "showcas": 9, "shown": [0, 6, 43, 50, 225], "shuffl": [3, 4, 12, 20, 22, 24, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 48, 93, 99], "siam": [96, 106], "side": 73, "sigma": [2, 3, 5, 6, 7, 9, 10, 11, 15, 16, 17, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 40, 43, 44, 45, 48, 49, 50, 53, 54, 56, 57, 79, 83, 84, 90, 91, 93, 95, 96, 97, 98, 100, 103, 104, 105, 108, 114, 116, 121, 126, 129, 130, 136, 140, 151, 153, 159, 161, 162, 166, 170, 175, 193, 194, 196, 197, 198, 199, 202, 203, 215], "sigma2_nois": 27, "sigma_": 170, "sigma_d": 27, "sigma_denois": [7, 22, 24, 31, 34, 40, 44, 45, 126, 129, 130], "sigma_dict": 196, "sigma_i": [30, 175], "sigma_max": [170, 196], "sigma_min": [170, 196], "sigma_n": 199, "sigma_nois": 29, "sigma_sq": [97, 116], "sigma_t": [29, 30], "sigma_tild": 30, "sigma_x": 175, "sigmagener": [56, 194], "sigmat": 30, "sign": [119, 120, 148], "signal": [2, 4, 10, 11, 50, 51, 53, 59, 62, 64, 67, 68, 74, 75, 78, 82, 89, 118, 127, 130, 133, 148, 150, 156, 159, 160, 161, 165, 166, 169, 205, 219], "signatur": 33, "signific": [27, 47], "significantli": 43, "silent": [73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "sim": [19, 20, 30, 31, 68, 79, 83, 84, 85, 98, 148, 153, 162, 165, 170, 171, 193, 203], "simeq": 30, "similar": [9, 33, 56, 59, 71, 80, 148, 155, 160, 165, 167, 185, 206, 218], "similarli": [8, 44, 48, 54, 128], "simlarli": 0, "simpl": [0, 3, 4, 7, 10, 11, 12, 23, 27, 28, 31, 35, 36, 37, 43, 45, 56, 62, 90, 158, 204], "simplest": 55, "simpli": [20, 29, 30, 42, 49, 52, 56, 172], "simplic": [0, 29, 40, 45], "simul": [56, 212], "simultan": 155, "sin": 175, "sinc": [5, 27, 30, 31, 52, 73, 90, 92, 100, 101, 102, 104, 109, 117, 118, 119, 148, 167, 176, 177, 206, 210, 211, 212, 213], "sine": 148, "singl": [2, 7, 13, 14, 15, 23, 28, 33, 34, 36, 40, 41, 42, 43, 44, 45, 49, 50, 54, 57, 59, 61, 67, 77, 103, 109, 113, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 156, 158, 161, 166, 167, 189, 215, 216, 217, 218, 220, 223, 225], "single_pixel": 23, "singlephotonlidar": 6, "singlepixelcamera": [11, 23], "singular": [10, 27, 28, 56, 147, 150, 158, 167, 197], "sinogram": 11, "site": 2, "situat": [2, 15], "size": [0, 2, 5, 6, 9, 11, 12, 15, 20, 22, 24, 27, 29, 30, 31, 34, 40, 41, 42, 43, 44, 53, 54, 56, 58, 59, 63, 65, 67, 71, 72, 76, 78, 80, 81, 83, 84, 85, 86, 88, 92, 94, 95, 97, 100, 105, 112, 113, 115, 116, 117, 118, 119, 121, 124, 125, 127, 133, 136, 140, 143, 145, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 181, 182, 186, 187, 188, 189, 190, 191, 193, 195, 196, 202, 203, 214, 218, 219, 221, 223, 225], "skew": [206, 210], "skew_max": [206, 210, 211, 212, 213], "skip": [30, 108], "slice": 158, "slide": 100, "slow": [94, 152], "slower": 2, "small": [5, 15, 20, 33, 37, 40, 45, 54, 84, 85, 97, 106, 112, 116, 133, 144, 169, 177], "smaller": [0, 3, 16, 17, 24, 54, 81, 95, 115, 128, 143, 146, 152, 159, 168, 178, 181, 188, 202, 203], "smolyakov": [106, 107], "smooth": [42, 127], "snippet": 0, "so": [0, 2, 9, 10, 30, 45, 158, 190, 191, 212], "soft": [7, 14, 15, 42, 44, 46, 61, 62, 64, 67, 72, 82, 109, 110, 115, 119, 121, 128, 133, 138, 141, 148, 156, 161, 215, 217, 220, 223, 226], "softplu": [93, 99], "softwar": [106, 107], "solut": [0, 9, 10, 15, 16, 17, 54, 58, 107, 109, 110, 113, 117, 123, 148, 156, 169, 214], "solv": [9, 24, 29, 30, 40, 44, 50, 54, 58, 60, 94, 106, 107, 113, 117, 136, 144], "solver": 131, "some": [0, 2, 5, 10, 11, 16, 17, 27, 30, 49, 50, 51, 52, 54, 56, 58, 59, 103, 125, 148, 156, 159, 161, 169], "sometim": 58, "somewhat": 5, "soon": 47, "sor": 148, "sort": 56, "sota": 57, "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "source_radiu": [169, 177], "source_select": 66, "sourcetensor": [7, 11, 29, 41, 44], "space": [0, 2, 11, 20, 33, 34, 43, 56, 90, 97, 116, 125, 164, 168, 169, 177, 190, 191, 195], "spacevaryingblur": 2, "spacial": 0, "spars": [0, 11, 91, 164, 176, 177, 185], "sparsiti": [0, 15, 17], "spatial": [0, 2, 168], "special": [210, 211, 212, 213], "specif": [2, 3, 10, 22, 24, 25, 56, 58, 113, 114, 117], "specifi": [0, 2, 3, 11, 16, 17, 22, 23, 24, 25, 44, 45, 56, 96, 128, 190, 195], "spectral": [69, 70, 142, 156, 160], "spectral_method": [9, 160], "speed": [10, 43, 67, 107], "sphinx": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "split": [19, 20, 22, 34, 40, 44, 45, 54, 63, 67, 74, 77, 81, 88, 97, 106, 107, 114, 116, 118, 123, 134, 136, 137, 140, 199, 215, 216, 217], "split_ratio": [81, 88], "splitting_ev": 81, "sqrt": [0, 9, 27, 28, 29, 30, 31, 42, 78, 106, 107, 112, 148, 167, 193, 198, 199, 203, 219], "squar": [3, 12, 29, 44, 54, 62, 74, 75, 77, 81, 82, 83, 84, 85, 144, 169, 189, 205], "sr": 105, "src": [2, 6], "ss": 62, "stabil": [31, 144], "stabilis": 202, "stabl": 223, "stack": [13, 14, 61, 149, 150, 152, 156, 159, 161, 218, 220, 223], "stage": [103, 104], "standalon": 49, "standard": [3, 6, 8, 9, 11, 15, 16, 17, 19, 20, 22, 23, 25, 28, 29, 30, 31, 44, 48, 49, 50, 53, 54, 58, 79, 82, 83, 84, 87, 95, 97, 103, 113, 114, 116, 121, 144, 145, 151, 153, 154, 159, 162, 166, 170, 175, 193, 202, 203, 215, 216, 217, 228], "standart": [24, 25, 134], "star": [58, 168, 188, 214], "start": [0, 10, 34, 35, 36, 37, 123], "state": [0, 60, 62], "state_dict": [7, 33, 34, 35, 36, 37, 44, 62], "static": [11, 30, 56, 106, 107, 109], "stationari": 56, "statist": [57, 79, 201, 202, 203], "std": [28, 31], "stem": 6, "step": [0, 2, 9, 11, 15, 16, 17, 20, 22, 23, 24, 25, 27, 31, 34, 43, 49, 50, 54, 56, 58, 62, 99, 108, 113, 117, 118, 119, 123, 127, 134, 136, 140, 145, 168, 169, 189, 190, 191, 192, 193, 194, 195, 196, 199, 202, 203, 214, 215, 216, 217], "step_siz": [12, 27, 31, 34, 35, 36, 37, 40, 44, 45, 145, 201, 202, 203], "steplr": [12, 34, 35, 36, 37, 40, 43, 44, 45], "stepsiz": [0, 3, 7, 9, 16, 17, 22, 23, 24, 25, 34, 40, 41, 42, 44, 45, 50, 54, 58, 107, 113, 115, 117, 118, 119, 120, 121, 128, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 215, 216, 217], "stepsize_du": [44, 54], "stepsize_int": [115, 128], "still": 56, "stochast": [53, 104, 105, 156, 161, 198, 202], "stop": [3, 5, 22, 23, 24, 94, 113, 114, 117, 143, 144, 145], "stopping_criterion": 143, "storag": [7, 34, 35, 36, 37], "store": [54, 56, 113, 117, 123, 146, 147, 148, 150, 152, 158, 165, 167, 168, 196, 201], "str": [12, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 63, 64, 66, 67, 71, 76, 80, 93, 95, 96, 97, 98, 99, 103, 104, 105, 108, 109, 110, 111, 113, 116, 124, 133, 134, 143, 146, 147, 148, 149, 152, 159, 165, 166, 167, 168, 169, 172, 176, 177, 178, 180, 181, 183, 188, 189, 193, 194, 196, 198, 199, 204, 206, 208, 210, 211, 212, 213, 215, 216, 217, 221, 223, 224, 225, 226], "strategi": [11, 113, 190, 195], "strength": [27, 31, 142, 157], "stretch": [206, 210], "stride": [93, 99], "strideconv": [93, 99], "string": [134, 215, 216, 217], "structur": [10, 48, 56, 63, 66, 80, 93, 158], "structural_similar": 80, "style": 47, "sub": [41, 133], "sub_net_s": [20, 124], "subband": 109, "subclass": [23, 43, 73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "subgroup": [51, 206, 210, 211, 212, 213], "subject": 15, "submit": 47, "submodul": 51, "subnetwork": [20, 124], "subpackag": 48, "subplot": [6, 29], "subsampl": [11, 148, 152, 158, 167], "subset": [34, 36, 37, 155, 192], "substract": 218, "success": 50, "suffic": 2, "suffici": [30, 35, 113], "suggest": [20, 29, 30, 60, 103, 118], "suit": 92, "sum": [9, 20, 28, 30, 31, 42, 54, 56, 123, 125, 133, 167, 194, 218], "sum_": [15, 20, 35, 41, 79, 81, 87, 88, 98, 112, 168, 188], "sum_i": [0, 97, 116, 125], "summar": [49, 53], "summat": 143, "super": [0, 3, 10, 14, 23, 26, 27, 33, 43, 46, 61, 62, 63, 64, 66, 67, 68, 72, 82, 96, 99, 113, 115, 121, 126, 128, 129, 134, 152, 153, 156, 161, 189, 201, 204, 208, 215, 217, 220, 226], "supervis": [12, 33, 38, 40, 41, 42, 43, 44, 45, 60, 61, 62, 64, 67, 68, 72, 74, 75, 77, 79, 81, 82, 83, 84, 85, 89, 96, 108, 115, 121, 126, 128, 150, 151, 155, 156, 158, 161, 163, 205, 207, 208, 215, 217, 220], "suploss": [12, 40, 41, 42, 43, 44, 45, 205], "support": [15, 91, 124, 133, 178, 179, 181, 182, 186, 187, 190, 191, 195], "suptitl": [2, 15, 29, 41, 42, 223], "sure": [14, 31, 38, 47, 61, 62, 64, 67, 72, 83, 84, 85, 89, 108, 150, 151, 156, 161, 163, 220], "suregaussianloss": [37, 51], "surepgloss": 37, "surepoissonloss": 37, "surpris": 5, "svd": [10, 150, 155], "swin": [104, 105], "swinir": 49, "swz30": 49, "synchron": [3, 4, 12, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 44, 45, 62], "synthes": [2, 189], "synthesi": 104, "synthet": 49, "system": [53, 56, 117, 144], "t": [4, 6, 11, 20, 25, 29, 30, 33, 41, 42, 51, 56, 79, 95, 100, 106, 107, 117, 127, 130, 142, 154, 156, 166, 172, 190, 191, 193, 195, 198, 199, 204, 214, 225], "t1": 15, "t10k": [37, 41], "t_g": [68, 98], "t_hist": 117, "t_i": 29, "t_im1": 29, "t_max": 43, "tabl": [34, 41, 42, 47, 53], "tachella": 60, "tag": [41, 54, 105, 113], "tail": 191, "take": [11, 20, 27, 29, 30, 37, 49, 51, 54, 62, 63, 66, 73, 84, 85, 90, 92, 93, 95, 100, 101, 102, 104, 111, 116, 117, 123, 124, 125, 169, 176, 177, 190, 206, 210, 211, 212, 213], "taken": [0, 47, 131, 191, 225], "tangent": 5, "taohuang2018": 77, "tar": [33, 62], "target": [0, 82, 164], "task": [0, 103], "tau": [0, 16, 17, 23, 37, 44, 83, 84, 85, 107, 113, 136], "tau1": 84, "tau2": 84, "tau_1": 84, "tau_2": 84, "teboul": 107, "techniqu": 56, "telescop": 0, "templat": 72, "tend": [0, 148], "tensor": [0, 2, 7, 8, 9, 10, 11, 23, 24, 29, 30, 41, 43, 44, 48, 54, 56, 59, 62, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 93, 94, 95, 96, 97, 98, 100, 103, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 207, 208, 209, 214, 218, 219, 221, 222, 223, 225, 227, 228, 229], "tensor_s": [5, 11, 12, 17, 19, 28, 30, 31, 35, 44, 54, 56, 121, 150, 155, 197, 199], "tensorlist": [8, 156, 159, 161, 222, 227, 228, 229], "tensorshap": 2, "term": [0, 3, 7, 16, 17, 22, 23, 24, 25, 29, 30, 34, 40, 41, 42, 44, 45, 50, 53, 54, 58, 97, 106, 107, 112, 113, 114, 115, 116, 117, 119, 120, 123, 128, 129, 132, 134, 136, 199, 215, 216, 217], "terminologi": 123, "terri": [0, 60], "test": [3, 9, 10, 22, 24, 47, 48, 62, 64, 66, 67, 79, 81, 87, 88, 93, 94, 96, 99, 103, 104, 110, 156, 223], "test_base_dataset": [35, 40, 41, 42, 44, 45], "test_batch_s": [12, 40, 41, 42, 43, 44, 45], "test_dataload": [3, 12, 22, 24, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 204], "test_datapoint": [35, 36, 37, 41, 42, 67], "test_dataset": [3, 4, 12, 22, 24, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 67], "test_dataset_nam": [12, 40, 44, 45], "test_img": [19, 20], "test_psnr": [12, 44, 204], "test_sampl": [41, 42], "test_std_psnr": 204, "test_transform": [12, 40, 44, 45], "text": [15, 16, 17, 33, 41, 42, 78, 79, 83, 85, 98, 113, 118, 119, 121, 133, 142, 148, 150, 155, 160, 169, 170, 173, 174, 196, 219], "tgv": 106, "th": [15, 20, 106, 107, 109, 110, 112, 120, 124, 203], "than": [0, 3, 4, 7, 11, 24, 29, 41, 44, 54, 59, 115, 128, 143, 146, 148, 152, 156, 159, 164, 167, 168, 169, 172, 178, 181, 188, 202, 203, 223], "thank": 2, "thei": [27, 42, 49, 51, 52, 56, 58, 62, 113, 128, 197], "them": [14, 40, 41, 42, 49, 51, 62, 73, 90, 92, 100, 101, 102, 104, 109, 156, 176, 177, 194, 206, 210, 211, 212, 213], "theorem": [2, 30, 58, 189, 214], "theoret": 156, "theori": [2, 54, 106, 107, 189], "therefor": 9, "theta": [5, 10, 12, 20, 35, 50, 56, 94, 175, 176, 177, 194, 198, 199], "theta2": 56, "theta_max": [33, 206, 210, 211, 212, 213], "theta_z_max": [206, 210, 211, 212, 213], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 66, 67, 68, 69, 70, 73, 74, 75, 79, 81, 83, 84, 85, 90, 91, 92, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 125, 128, 130, 135, 140, 143, 146, 148, 152, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 201, 204, 205, 206, 210, 211, 212, 213, 214, 215, 217, 226], "thin": [27, 200, 201, 202, 203], "third": [6, 166], "those": 133, "three": 136, "thres_conv": [3, 24, 113, 200], "thresh_conv": [201, 202, 203], "threshold": [7, 14, 15, 42, 44, 46, 61, 62, 64, 67, 72, 82, 109, 110, 113, 115, 119, 121, 128, 133, 138, 141, 148, 156, 161, 200, 201, 203, 215, 217, 220, 223, 226], "threshold_3d": 109, "threshold_nd": 109, "thresold_2d": 109, "thresold_func": 109, "through": [0, 2, 10, 30, 56, 68, 69, 70, 164], "thu": [24, 43, 94, 109, 110, 158, 169, 201, 202, 203], "tight": [15, 223], "tight_layout": [6, 29], "tikhonov": 54, "tild": [30, 147, 148, 150, 155, 156, 159, 161, 163, 169, 198], "tilt": [33, 206, 212], "time": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 54, 79, 81, 87, 88, 95, 97, 113, 116, 117, 148, 150, 152, 155, 164, 165, 166, 190, 191, 195, 200, 204], "time_it": [113, 117], "time_pair": 30, "timestep": [29, 30, 95, 198, 199], "tip": [202, 203], "titl": [0, 2, 5, 6, 8, 9, 10, 11, 16, 17, 23, 25, 27, 28, 29, 30, 31, 41, 42, 62, 168, 223, 225], "tk": 113, "tkbn": 0, "to_complex_denois": [9, 49], "to_logimag": 0, "to_numpi": 219, "togeth": 51, "toi": 40, "tol": [0, 54, 69, 70, 144, 145, 156, 161], "tol_int": [115, 128], "toler": [69, 70, 144, 145, 156, 161], "tomograph": 55, "tomographi": [14, 21, 26, 43, 49, 61, 62, 65, 96, 113, 115, 116, 121, 122, 124, 125, 126, 128, 134, 150, 151, 153, 156, 157, 161, 171, 219, 220, 221, 223, 224], "tool": 0, "toolbox": [2, 22, 56], "top": [0, 12, 14, 23, 27, 35, 37, 43, 44, 53, 58, 83, 84, 85, 89, 109, 110, 113, 115, 122, 127, 136, 147, 148, 150, 156, 159, 160, 161, 169, 172, 225], "topk": [109, 110], "torch": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 54, 56, 58, 59, 62, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229], "torchist": 185, "torchkbnufft": [0, 164], "torchvis": [3, 4, 12, 16, 17, 22, 24, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 48, 63, 66, 68], "torso": 95, "total": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 60, 61, 62, 75, 86, 90, 103, 106, 107, 109, 113, 115, 121, 128, 131, 134, 147, 150, 153, 156, 161, 190, 209, 219, 220, 223, 224], "totalloss": [12, 20, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62], "totensor": [3, 4, 12, 16, 17, 22, 24, 33, 35, 36, 37, 40, 41, 42, 44, 45, 48], "touch": 60, "tour": [13, 14, 60, 61, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 161, 162, 163, 167, 168, 169, 175, 189, 190, 191, 192, 193, 194, 195, 220, 221, 223], "toward": [16, 17, 185], "tqdm": [20, 29, 30, 62], "tracker": [47, 60], "tradit": [0, 95], "train": [2, 3, 4, 7, 9, 13, 14, 22, 23, 24, 25, 29, 30, 33, 48, 49, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 67, 71, 72, 79, 80, 81, 82, 87, 88, 89, 92, 93, 95, 96, 99, 103, 104, 108, 130, 150, 155, 156, 161, 201, 202, 203, 204, 215, 217, 220, 226], "train_base_dataset": [35, 40, 41, 42, 44, 45], "train_batch_s": [12, 40, 41, 42, 43, 44, 45], "train_dataload": [12, 20, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62, 205], "train_datapoint": [3, 12, 22, 24, 34, 35, 36, 37, 40, 41, 42, 44, 45, 67], "train_dataset": [3, 4, 12, 20, 22, 24, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 67], "train_dataset_nam": [12, 34, 36, 37, 40, 41, 42, 43, 44, 45], "train_img": 20, "train_test_transform": [41, 42], "train_transform": [12, 40, 44, 45], "trainabl": [7, 12, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 58, 77, 79, 81, 83, 84, 85, 108, 215, 217], "trainable_param": [7, 34, 40, 41, 42, 44, 45, 58, 215, 217], "trainer": [12, 20, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 59, 205], "training_util": [12, 44], "trajectori": [2, 193], "transact": [43, 91], "transform": [0, 3, 4, 11, 12, 14, 15, 16, 17, 20, 22, 23, 24, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 56, 61, 62, 63, 65, 66, 68, 72, 74, 91, 98, 103, 105, 108, 109, 110, 133, 148, 150, 155, 156, 158, 161, 164, 167, 169, 176, 177, 206, 207, 208, 209, 210, 211, 212, 213, 220, 221, 223], "transform_data": 48, "transformerblock": 103, "translat": [33, 34, 68, 206, 209, 210, 211, 213], "transmiss": 154, "transpos": [8, 10, 89, 93, 99, 113, 115, 117, 148, 150, 156, 159, 169, 180, 181, 182, 183], "trick": 30, "trigger": [2, 6], "trivial": [27, 154, 155], "true": [0, 2, 3, 4, 5, 7, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 50, 52, 54, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 75, 78, 80, 81, 88, 89, 90, 94, 95, 96, 98, 100, 101, 102, 103, 105, 108, 112, 113, 117, 123, 124, 127, 128, 133, 135, 136, 137, 143, 148, 152, 155, 156, 163, 164, 167, 169, 172, 176, 177, 179, 182, 197, 198, 199, 200, 201, 204, 214, 217, 219, 220, 223, 224, 225, 226], "truli": [83, 84, 85], "truth": [5, 12, 16, 17, 19, 20, 23, 25, 27, 28, 29, 30, 31, 33, 41, 42, 44, 51, 62, 82, 113, 117, 204, 214], "try": [0, 37, 41, 47, 60], "tun": 199, "tune": [20, 25, 142], "tupl": [0, 62, 92, 94, 100, 105, 113, 117, 147, 148, 152, 154, 155, 159, 164, 165, 167, 172, 175, 188, 189, 190, 191, 193, 195, 200, 201, 202, 203, 204, 205, 221, 223, 225], "turn": [2, 15, 19, 30, 49, 58, 98, 200, 214, 215], "tutori": [29, 30, 58, 214], "tv": [14, 18, 42, 60, 61, 86, 106, 107, 113, 115, 121, 128, 131, 134, 147, 150, 153, 156, 161, 219, 220, 223, 224], "tv_smooth": 42, "tvdenois": 131, "tvprior": [16, 54, 107], "tweedi": [30, 31, 57, 130], "two": [8, 19, 20, 29, 30, 34, 35, 36, 54, 71, 77, 81, 115, 123, 128, 156, 161, 169, 177, 192, 194, 218], "tx_prev": 117, "txt": 66, "ty": 113, "type": [2, 33, 42, 48, 56, 98, 99, 148, 164, 165, 169, 176, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 205, 215, 217, 222, 227, 228, 229], "type_t": 95, "typic": [54, 56, 57, 130], "u": [12, 23, 27, 29, 30, 35, 36, 37, 43, 53, 54, 58, 79, 83, 84, 85, 93, 101, 108, 112, 115, 118, 119, 121, 122, 123, 150, 156, 170, 171, 214], "u0": 43, "u2": [106, 107], "u_": [23, 44, 50, 117, 135, 136, 137, 138, 140, 141], "u_0": [113, 136], "u_adjoint": [27, 150], "u_init": [7, 44], "u_k": [23, 44, 50, 117, 136, 138, 140, 141], "ubyt": [37, 41], "uc": 20, "ula": [14, 32, 61, 69, 96, 115, 121, 128, 130, 150, 153, 155, 156, 161, 201, 219, 220, 221, 223], "ula_mean": 27, "ula_var": 27, "ultim": 47, "ulyanov": [5, 94], "un": 92, "unadjust": [27, 31, 57, 202, 203], "unbias": [37, 83, 84, 85], "uncertainti": [14, 28, 32, 60, 61, 69, 96, 115, 121, 128, 130, 150, 153, 155, 156, 161, 201, 203, 219, 220, 221, 223], "under": [20, 41, 42, 56], "underli": [53, 95, 124], "undersampl": [11, 190, 191, 195], "underset": [0, 16, 17, 20, 44, 50, 54, 97, 106, 107, 109, 110, 113, 116, 118, 119, 121, 136, 156, 161], "understood": 5, "undesir": 125, "unet": [12, 33, 35, 36, 37, 95, 104], "unfold": [7, 34, 35, 40, 46, 60, 61, 62, 64, 67, 72, 82, 96, 101, 102, 109, 115, 118, 121, 126, 128, 150, 152, 153, 155, 156, 161, 204, 214, 215, 216, 217, 220, 226], "unfolded_build": [7, 34, 41, 42, 43, 44, 45, 58], "unfolded_dr": 45, "unfolded_pgd": [41, 42], "ungrid": 164, "unifi": 53, "uniform": [0, 11, 164, 170, 171, 190, 191, 195, 213, 227], "uniformli": [49, 169, 196], "uniformnois": 20, "union": [0, 164], "uniqu": [106, 107], "unit": [8, 9, 10, 29, 148, 156], "unknown": [33, 154], "unless": 11, "unlik": [0, 91, 96, 200], "unnormalis": [191, 195], "unorgan": 79, "unrol": [7, 34, 40, 41, 42, 43, 44, 45, 49, 58, 62, 204, 205, 214], "unsqueez": [0, 4, 10, 11, 15, 16, 17, 22, 24, 28, 31, 43, 115, 150, 168], "unsupervis": [33, 35, 79, 206, 212], "untouch": 133, "up": [4, 7, 10, 20, 40, 41, 43, 45, 56, 62, 63, 95, 107, 206], "upcom": 2, "upconv": [93, 99], "updat": [20, 23, 24, 29, 30, 43, 44, 47, 54, 62, 107, 113, 117, 123, 135, 136, 137, 138, 139, 146, 147, 150, 153, 157, 161, 162, 163, 168, 171], "update_data_fidelity_fn": [113, 117], "update_metrics_fn": [113, 117], "update_paramet": [56, 146, 147, 150, 153, 157, 162, 163, 168, 171], "update_params_fn": [113, 117], "update_prior_fn": [113, 117], "upload": [5, 27, 28, 31], "upp": [184, 185], "upper": [184, 185], "upsampl": [93, 99, 105], "upsample_mod": [93, 99], "upscal": 105, "urban": [33, 66], "urban100": [33, 66], "urban100_hr": 33, "urban100_inpainting_homography_model": 33, "urban100_sr": 66, "url": [2, 5, 7, 9, 11, 19, 20, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 50, 105, 221], "us": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 66, 76, 79, 80, 81, 87, 88, 90, 91, 97, 103, 104, 105, 107, 117, 119, 143, 177, 179, 182, 184, 185, 188, 202, 205], "usag": [56, 103, 223], "use_bicubic_init": 24, "use_checkpoint": 105, "use_fft": 152, "use_filt": 176, "use_fp16": 95, "user": [27, 54, 58, 62, 67, 93, 95, 96, 99, 104, 105, 134, 151, 159, 216, 217], "userwarn": [0, 2, 6, 7, 11, 29, 41, 44], "usual": [0, 29, 30], "usv": 27, "util": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 50, 62, 97, 116, 143, 144, 145, 148, 154, 156, 159, 161, 168, 169, 197, 199, 204, 205, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "uv": 0, "uv_coordin": 0, "v": [10, 23, 27, 58, 113, 115, 117, 123, 150, 156, 160, 161, 214], "v0": [22, 105], "v_": 139, "v_adjoint": [10, 27, 150], "v_k": 23, "val": 63, "val_transform": [3, 4, 16, 17, 22, 24], "valid": [2, 17, 33, 49, 57, 115, 128, 146, 152, 159, 168, 178, 180, 181, 183, 188], "valu": [0, 5, 8, 9, 10, 11, 19, 27, 28, 29, 34, 37, 40, 41, 42, 49, 54, 56, 57, 59, 62, 78, 83, 84, 85, 94, 95, 97, 100, 105, 106, 111, 112, 113, 116, 117, 124, 130, 131, 133, 134, 143, 144, 147, 150, 157, 158, 163, 167, 169, 177, 185, 194, 197, 199, 202, 203, 215, 216, 217, 219, 223], "vanilla": [14, 26, 46, 61, 62, 64, 67, 72, 82, 96, 113, 115, 121, 126, 128, 134, 152, 153, 156, 161, 169, 215, 217, 219, 220, 221, 223, 224, 226], "var": [28, 31, 201], "var_has_converg": 201, "varepsilon": [29, 30, 198, 199], "varepsilon_t": 199, "varga": 202, "vari": [2, 56, 63, 168, 190, 191, 195], "variabl": [3, 4, 7, 16, 17, 22, 23, 24, 25, 31, 37, 43, 44, 54, 84, 85, 101, 102, 106, 107, 112, 113, 115, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 131, 132, 133, 136], "varianc": [27, 28, 29, 31, 57, 200, 201, 202, 203], "variant": [109, 110], "variat": [14, 18, 20, 60, 61, 86, 106, 107, 113, 115, 121, 128, 131, 134, 147, 150, 153, 156, 161, 219, 220, 223, 224], "variou": [11, 28, 33, 37, 49, 51, 56, 57], "vector": [27, 53, 62, 70, 83, 84, 85, 92, 94, 106, 109, 113, 150, 156, 160, 161, 185, 191, 195, 203], "verbos": [0, 3, 5, 9, 12, 16, 17, 20, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 54, 62, 67, 69, 70, 94, 106, 107, 113, 117, 143, 156, 197, 198, 199, 200, 201, 202, 203, 204, 220], "verbose_individual_loss": 62, "veri": [0, 9, 20, 30], "verifi": [66, 144, 156, 201, 203], "version": [9, 60, 63, 66, 98, 106, 107, 205, 207, 209, 218], "vertic": [49, 63, 86, 98, 190, 191, 195, 225], "vi": [12, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "via": [0, 3, 15, 19, 23, 27, 29, 30, 31, 36, 37, 48, 52, 55, 56, 57, 58, 60, 67, 75, 93, 95, 96, 97, 103, 104, 108, 116, 124, 130, 147, 148, 150, 155, 156, 160, 161, 165, 167, 168, 169, 194], "video": [190, 191, 195], "view": [3, 11, 20, 30, 31, 208], "viridi": [0, 15], "virtual": [58, 68, 214], "visibl": 0, "vision": [0, 22, 114, 188], "visit": 30, "visual": [0, 30, 40, 41, 42, 43, 45, 62], "vjp": [156, 160, 161], "vnn6ad": 33, "vol": [106, 107], "volume_data": 15, "vrv": 27, "vu": [14, 26, 50, 61, 96, 113, 115, 121, 123, 126, 128, 134, 150, 153, 156, 161, 167, 219, 220, 221, 223, 224], "w": [0, 6, 11, 15, 22, 30, 42, 43, 78, 94, 103, 105, 114, 127, 146, 147, 148, 155, 156, 158, 164, 165, 166, 167, 168, 172, 173, 174, 178, 179, 181, 182, 188, 189, 190, 191, 195, 204, 219, 223], "w_k": [168, 188], "wa": [20, 30, 55, 91, 92, 96, 103, 104, 105, 202], "wai": [7, 34, 35, 36, 37, 47, 60, 62], "walk": 10, "wandb": [40, 43, 45, 62], "wandb_setup": 62, "wandb_vi": [3, 12, 22, 24, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 62], "wang": [33, 206, 212], "want": [2, 10, 16, 17, 24, 56, 62, 69, 70], "warm": 107, "warn": 128, "wavdict": 15, "wavelet": [7, 14, 18, 41, 44, 61, 109, 110, 113, 115, 121, 128, 133, 134, 150, 153, 155, 156, 161, 219, 220, 223, 224], "waveletdenois": [7, 15, 44, 110, 133], "waveletdictdenois": 15, "waveletprior": [0, 15, 17, 41, 44], "we": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 63, 66, 69, 94, 95, 109, 117, 118, 119, 123, 156, 157, 160, 168, 172], "weight": [3, 7, 9, 12, 15, 19, 20, 22, 23, 24, 25, 30, 34, 35, 36, 37, 40, 41, 43, 44, 45, 62, 68, 75, 86, 93, 95, 96, 97, 99, 103, 104, 105, 116, 124, 142, 143, 164, 185, 215, 217], "weight_decai": [12, 33, 34, 35, 36, 37, 40, 42, 44, 45], "weiss": [20, 116, 188], "welcom": 47, "welford": 201, "well": [5, 8, 10, 16, 17, 30, 50, 51, 55, 56, 60, 68, 74, 75, 77, 81, 82, 92, 117, 123, 148, 156, 159, 169, 204, 215], "were": [33, 42], "when": [2, 3, 11, 23, 24, 27, 30, 31, 36, 42, 47, 50, 52, 75, 77, 94, 95, 107, 108, 115, 117, 124, 128, 143, 156, 163, 199], "where": [0, 3, 5, 6, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 27, 29, 30, 31, 35, 36, 37, 41, 42, 43, 44, 48, 50, 54, 56, 57, 58, 62, 63, 66, 67, 68, 69, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 120, 123, 124, 127, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 178, 179, 181, 182, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 203, 206, 214, 215, 219, 223, 226], "wherea": [27, 29, 30, 50, 62, 148, 167, 175], "whether": [69, 70, 101, 102, 105, 106, 107, 113, 125, 134, 143, 185, 200, 214, 215, 216, 217, 221, 226], "which": [3, 4, 7, 8, 9, 11, 15, 16, 17, 19, 20, 22, 24, 27, 28, 29, 30, 31, 34, 36, 37, 40, 41, 42, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 67, 69, 74, 75, 77, 81, 82, 83, 84, 85, 93, 96, 103, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 152, 155, 156, 161, 164, 167, 169, 176, 177, 182, 185, 197, 198, 201, 204, 205, 210, 211, 212, 213, 215, 217, 221, 225], "while": [5, 9, 10, 34, 50, 54, 73, 90, 92, 100, 101, 102, 104, 113, 143, 176, 177, 206, 210, 211, 212, 213], "white": [19, 29, 30, 56, 146, 147, 152, 156], "whiten": 0, "whole": [19, 20, 35, 36, 37, 108, 116, 201], "whose": [54, 72, 154, 169, 225, 226], "why": [29, 30], "widehat": [15, 29, 30, 198, 199], "wider": 62, "width": [15, 65, 95, 101, 102, 116, 158, 169, 209, 223], "wiki": [2, 80, 144, 189], "wikimedia": [5, 27, 28, 31], "wikipedia": [2, 5, 27, 28, 31, 80, 144, 189], "window": [100, 105], "window_s": 105, "wise": [73, 154], "withbia": 103, "within": [49, 52, 56, 73, 90, 92, 100, 101, 102, 104, 176, 177, 206, 210, 211, 212, 213], "without": [33, 47, 56, 62, 148, 159, 161, 169], "work": [0, 5, 6, 7, 11, 12, 24, 28, 29, 30, 41, 44, 94, 103], "worker": 67, "workflow": 47, "world": [5, 27, 28, 31, 33], "would": 0, "wrap": [34, 40, 41, 42, 45, 49, 91], "wrapper": [22, 59, 66], "write": [15, 16, 17, 24, 29, 30, 43, 52, 54, 62, 133, 198, 199], "written": [51, 54, 113], "wv": [0, 7, 15, 17, 41, 44, 109, 110, 133], "wv_list": 0, "wvdim": [15, 109, 110, 133], "wx": 41, "x": [0, 3, 4, 5, 6, 8, 9, 10, 11, 15, 16, 17, 20, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 41, 42, 43, 44, 50, 51, 53, 54, 56, 57, 58, 62, 65, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 222, 227, 228, 229], "x0": [29, 30, 43, 156], "x0_pred": 30, "x0_t": 30, "x2": [11, 106, 107], "x64": 2, "x_": [15, 23, 27, 31, 41, 42, 44, 50, 54, 58, 113, 117, 123, 135, 136, 137, 138, 139, 140, 141, 142, 156, 199, 203, 215], "x_0": [113, 136], "x_adj": 56, "x_bar": 27, "x_cur": 15, "x_dagger": [56, 156], "x_est": 9, "x_gd_rand": 9, "x_gd_spec": 9, "x_grai": 2, "x_gt": [0, 9, 16, 17, 23, 25, 113, 117, 214], "x_hat": [15, 33, 50, 58, 217], "x_hist": 117, "x_i": 75, "x_in": 69, "x_init": [0, 7, 44, 113, 116, 117, 161, 198, 199, 201], "x_k": [23, 31, 41, 42, 44, 50, 54, 58, 113, 117, 123, 135, 136, 138, 139, 140, 141, 142, 203, 215], "x_lin": [5, 16, 17, 23, 25, 27, 28, 31], "x_model": [0, 16, 17, 23, 25], "x_n": 15, "x_net": [51, 62, 68, 71, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86], "x_noisi": 29, "x_out": 19, "x_phase": 9, "x_phase_gd_rand": 9, "x_phase_gd_spec": 9, "x_phase_pnp": 9, "x_phase_spec": 9, "x_pnp": 9, "x_prev": [15, 23, 113, 117], "x_prox": [29, 56], "x_prox_scal": 29, "x_rgb": 2, "x_sampl": 29, "x_sampled_sc": 29, "x_spec": 9, "x_stretch_factor_min": [206, 210, 211, 212, 213], "x_t": [30, 199, 206, 210, 211, 212, 213], "x_true": [29, 30], "x_tv": 16, "x_wv": 17, "xhat": [6, 15, 28, 29, 30, 113, 197, 199], "xlabel": 29, "xlin": [8, 10], "xlin2": 10, "xlsx": 66, "xprox": 10, "xprox2": 10, "xset": [50, 53, 54, 56, 113, 115, 156, 161], "xt": 30, "xt_next": 30, "xxx": [48, 66], "y": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 23, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 41, 42, 43, 44, 50, 51, 53, 54, 56, 57, 58, 62, 67, 68, 70, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 94, 95, 97, 101, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 127, 135, 136, 137, 138, 139, 142, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 188, 193, 197, 198, 199, 201, 203, 204, 205, 206, 214, 215, 217], "y1": 56, "y2": [10, 56], "y_": [6, 166], "y_1": [8, 81, 88], "y_2": [8, 81], "y_bar": 27, "y_denois": 29, "y_i": [35, 75, 112], "y_in": 69, "y_scale": 29, "y_stretch_factor_min": [206, 210, 211, 212, 213], "yann": [37, 41], "yet": 5, "yield": [41, 42, 133], "ylabel": 29, "yosida": [57, 130], "you": [0, 2, 4, 10, 14, 15, 28, 29, 30, 31, 34, 35, 36, 37, 40, 45, 47, 56, 60, 66], "your": [10, 13, 14, 23, 32, 47, 59, 60, 61, 64, 67, 100, 114, 115, 121, 128, 130, 147, 150, 151, 153, 156, 161, 201, 203, 219, 220, 221, 223], "yscale": 9, "yset": [50, 53, 54, 56, 113, 115, 156, 161], "yyi": 48, "yyyi": 62, "z": [0, 5, 23, 43, 50, 54, 56, 57, 79, 83, 84, 85, 94, 117, 119, 122, 123, 127, 130, 135, 137, 138, 150, 152, 153, 156, 161, 162, 164, 170, 203, 206], "z10": 189, "z11": 189, "z4": 189, "z5": [2, 189], "z6": [2, 189], "z7": 189, "z8": 189, "z9": 189, "z_": [15, 23, 27, 44, 54, 58, 113, 123, 135, 136, 137, 138, 203, 215], "z_0": 136, "z_i": [79, 87], "z_k": [23, 31, 44, 54, 58, 113, 123, 135, 136, 137, 138, 215], "z_p": 15, "z_prev": 23, "zenodo": [169, 177], "zernik": [2, 189], "zernike_polynomi": [2, 189], "zero": [0, 2, 6, 8, 10, 11, 20, 27, 29, 30, 42, 56, 59, 62, 109, 112, 143, 146, 147, 152, 155, 156, 164, 168, 191, 207, 229], "zero_grad": [20, 62], "zeros_lik": [11, 15, 42, 43, 54, 156], "zeta": [29, 199], "zhang": [3, 22, 96, 114], "zhou": 29, "zip": [4, 12, 14, 16, 22, 30, 44, 45, 63, 66], "zoom": [206, 225], "zoom_factor_min": [206, 210, 211, 212, 213], "zoran": [20, 116], "zuo": [22, 114], "zygalaki": 202, "\u00f6ktem": 43}, "titles": ["Radio interferometric imaging with deepinverse", "Computation times", "A tour of blur operators", "Image deblurring with custom deep explicit prior.", "Creating your own dataset", "Reconstructing an image using the deep image prior.", "Single photon lidar operator for depth ranging.", "Saving and loading models", "Stacking and concatenating forward operators.", "Random phase retrieval and reconstruction methods.", "Creating a forward operator.", "A tour of forward sensing operators", "Training a reconstruction network.", "Computation times", "Examples", "3D wavelet denoising", "Image deblurring with Total-Variation (TV) prior", "Image inpainting with wavelet prior", "Computation times", "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting", "Patch priors for limited-angle computed tomography", "Computation times", "DPIR method for PnP image deblurring.", "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)", "Regularization by Denoising (RED) for Super-Resolution.", "Vanilla PnP for computed tomography (CT).", "Computation times", "Building your custom sampling algorithm.", "Image reconstruction with a diffusion model", "Implementing DiffPIR", "Implementing DPS", "Uncertainty quantification with PnP-ULA.", "Computation times", "Image transformations for Equivariant Imaging", "Self-supervised learning with Equivariant Imaging for MRI.", "Self-supervised learning from incomplete measurements of multiple operators.", "Self-supervised denoising with the Neighbor2Neighbor loss.", "Self-supervised denoising with the SURE loss.", "Computation times", "Computation times", "Deep Equilibrium (DEQ) algorithms for image deblurring", "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing", "Learned iterative custom prior", "Learned Primal-Dual algorithm for CT scan.", "Unfolded Chambolle-Pock for constrained image inpainting", "Vanilla Unfolded algorithm for super-resolution", "Computation times", "How to Contribute", "Datasets", "Denoisers", "Iterative Reconstruction (PnP, RED, etc.)", "Loss", "Using multiple GPUs", "Math Notation", "Optim", "Other Reconstruction Methods", "Physics", "Diffusion Algorithms", "Unfolded Algorithms", "Utils", "DeepInverse: a Pytorch library for imaging with deep learning", "Computation times", "Trainer", "DIV2K", "HDF5Dataset", "PatchDataset", "Urban100HR", "generate_dataset", "EILoss", "FNEJacobianSpectralNorm", "JacobianSpectralNorm", "LPIPS", "Loss", "LpNorm", "MCLoss", "MOILoss", "NIQE", "Neighbor2Neighbor", "PSNR", "R2RLoss", "SSIM", "SplittingLoss", "SupLoss", "SureGaussianLoss", "SurePGLoss", "SurePoissonLoss", "TVLoss", "r2r_eval", "splitting_eval", "ArtifactRemoval", "AutoEncoder", "BM3D", "ConvDecoder", "DRUNet", "DeepImagePrior", "DiffUNet", "DnCNN", "EPLLDenoiser", "EquivariantDenoiser", "GSDRUNet", "MedianFilter", "PDNet_DualBlock", "PDNet_PrimalBlock", "Restormer", "SCUNet", "SwinIR", "TGVDenoiser", "TVDenoiser", "UNet", "WaveletDenoiser", "WaveletDictDenoiser", "to_complex_denoiser", "AmplitudeLoss", "BaseOptim", "DPIR", "DataFidelity", "EPLL", "FixedPoint", "IndicatorL2", "L1", "L1Prior", "L2", "LogPoissonLikelihood", "OptimIterator", "PatchNR", "PatchPrior", "PnP", "PoissonLikelihood", "Prior", "RED", "ScorePrior", "TVPrior", "Tikhonov", "WaveletPrior", "optim_builder", "ADMMIteration", "CPIteration", "DRSIteration", "FISTAIteration", "GDIteration", "HQSIteration", "PGDIteration", "SMIteration", "GaussianMixtureModel", "conjugate_gradient", "gradient_descent", "Blur", "BlurFFT", "CompressedSensing", "Decolorize", "DecomposablePhysics", "Denoising", "Downsampling", "GaussianNoise", "Haze", "Inpainting", "LinearPhysics", "LogPoissonNoise", "MRI", "Pansharpen", "PhaseRetrieval", "Physics", "PoissonGaussianNoise", "PoissonNoise", "RadioInterferometry", "RandomPhaseRetrieval", "SinglePhotonLidar", "SinglePixelCamera", "SpaceVaryingBlur", "Tomography", "UniformGaussianNoise", "UniformNoise", "adjoint_function", "bicubic_filter", "bilinear_filter", "gaussian_blur", "IRadon", "Radon", "conv2d", "conv2d_fft", "conv3d", "conv_transpose2d", "conv_transpose2d_fft", "conv_transpose3d", "histogram", "histogramdd", "multiplier", "multiplier_adjoint", "product_convolution2d", "DiffractionBlurGenerator", "EquispacedMaskGenerator", "GaussianMaskGenerator", "GeneratorMixture", "MotionBlurGenerator", "PhysicsGenerator", "RandomMaskGenerator", "SigmaGenerator", "DDRM", "DPS", "DiffPIR", "DiffusionSampler", "MonteCarlo", "SKRock", "ULA", "test", "train", "Homography", "Rotate", "Scale", "Shift", "Affine", "Euclidean", "PanTiltRotate", "Similarity", "BaseDEQ", "BaseUnfold", "DEQ_builder", "unfolded_builder", "TensorList", "cal_psnr", "get_freer_gpu", "load_url_image", "ones_like", "plot", "plot_curves", "plot_inset", "plot_parameters", "rand_like", "randn_like", "zeros_like"], "titleterms": {"3d": 15, "A": [2, 11], "The": [0, 29, 30], "adjoint_funct": 172, "admmiter": 135, "advanc": 14, "affin": 210, "algorithm": [3, 5, 15, 16, 17, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 40, 41, 42, 43, 45, 50, 57, 58], "all": 29, "amplitudeloss": 112, "an": [5, 17, 29, 50], "angl": 20, "appli": 6, "approxim": 30, "artifactremov": 89, "autoencod": 90, "back": 55, "base": [3, 4, 12, 15, 16, 17, 22, 23, 24, 34, 35, 36, 37, 40, 41, 42, 44, 45], "basedeq": 214, "baseoptim": 113, "baseunfold": 215, "basic": 14, "benefit": 10, "bicubic_filt": 173, "bilinear_filt": 174, "blur": [2, 3, 11, 16, 22, 56, 146], "blurfft": 147, "bm3d": 91, "brigg": 0, "build": 27, "cal_psnr": 219, "camera": 11, "carlo": [28, 57], "chain": 57, "chambol": 44, "class": [24, 27], "classic": 49, "comparison": 9, "complex": 49, "compress": [11, 41, 42, 56], "compressedsens": 148, "comput": [1, 11, 13, 18, 20, 21, 25, 26, 32, 38, 39, 46, 61], "concaten": 8, "condat": 23, "conjugate_gradi": 144, "constrain": 44, "construct": 9, "contribut": 47, "conv2d": 178, "conv2d_fft": 179, "conv3d": 180, "conv_transpose2d": 181, "conv_transpose2d_fft": 182, "conv_transpose3d": 183, "convdecod": 92, "correct": 9, "cpiter": 136, "creat": [4, 6, 10, 15, 27, 28, 31], "ct": [25, 43], "custom": [3, 10, 23, 24, 27, 42, 43], "data": [3, 4, 7, 12, 15, 16, 17, 22, 23, 24, 25, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 54], "datafidel": 115, "dataload": 4, "dataset": [3, 4, 12, 16, 17, 22, 23, 24, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48], "ddrm": 197, "deblur": [3, 16, 22, 40], "decolor": [11, 149], "decompos": 10, "decomposablephys": 150, "deep": [3, 5, 40, 49, 50, 58, 60], "deepimageprior": 94, "deepinvers": [0, 60], "defin": [3, 5, 7, 12, 23, 27, 28, 30, 31, 40, 41, 42, 43, 44, 45, 56], "definit": [20, 24], "degrad": [3, 4, 12, 16, 17, 22, 23, 24, 34, 35, 40, 41, 42, 43, 44, 45], "dehaz": 56, "denois": [9, 11, 15, 19, 24, 28, 29, 30, 36, 37, 49, 151], "depend": 56, "depth": 6, "deq": 40, "deq_build": 216, "descent": 9, "develop": 60, "diffpir": [29, 199], "diffract": 2, "diffractionblurgener": 189, "diffunet": 95, "diffus": [28, 30, 57], "diffusionsampl": 200, "dip": 5, "distribut": 56, "div2k": 63, "dncnn": 96, "downsampl": 152, "dp": [30, 198], "dpir": [22, 114], "drsiter": 137, "drunet": 93, "dual": [23, 43], "dykstra": 15, "eiloss": 68, "em": 20, "epll": [19, 20, 116], "eplldenois": 97, "equilibrium": [40, 58], "equispacedmaskgener": 190, "equivari": [33, 34, 49], "equivariantdenois": 98, "etc": 50, "euclidean": 211, "evalu": [3, 16, 17, 22, 23, 24, 25], "exampl": [14, 28, 62, 64, 65, 67, 68, 69, 71, 72, 74, 75, 77, 78, 82, 83, 84, 85, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 108, 109, 110, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 141, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 175, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226], "expect": 19, "explicit": 3, "explor": [16, 17], "extens": 15, "featur": 60, "fidel": [29, 43, 54], "filter": [6, 55], "find": 60, "fistaiter": 138, "fixedpoint": 117, "fnejacobianspectralnorm": 69, "forward": [5, 6, 7, 8, 10, 11, 12, 20, 23, 25, 27, 28, 31, 44, 56], "from": [5, 9, 11, 27, 28, 31, 35], "fstep": 23, "function": 56, "gaussian_blur": 175, "gaussianmaskgener": 191, "gaussianmixturemodel": 143, "gaussiannois": 153, "gditer": 139, "gener": [2, 3, 4, 5, 6, 8, 9, 10, 12, 16, 17, 22, 27, 28, 29, 31, 34, 35, 36, 37, 40, 41, 42, 44, 45, 54, 56], "generate_dataset": 67, "generatormixtur": 192, "get": 60, "get_freer_gpu": 220, "gpu": 52, "gradient": [9, 41, 42], "gradient_desc": 145, "groundtruth": 0, "gsdrunet": 99, "gstep": 23, "haze": 154, "hd5dataset": 48, "hdf5dataset": 64, "help": 60, "histogram": 184, "histogramdd": 185, "homographi": 206, "how": 47, "hqsiter": 140, "imag": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 48, 50, 56, 60], "implement": [29, 30, 50], "import": 0, "incomplet": 35, "indicatorl2": 118, "initi": 9, "inpaint": [11, 17, 19, 44, 155], "instal": 60, "interferometr": [0, 56], "internet": [5, 9, 11, 27, 28, 31], "introduct": [51, 56], "invers": [3, 16, 17, 22, 23, 25, 29, 30], "involv": 24, "iradon": 176, "iter": [15, 27, 41, 42, 43, 50, 54], "jacobianspectralnorm": 70, "knee": 34, "l1": 119, "l1prior": 120, "l2": 121, "langevin": 57, "lead": 60, "learn": [14, 34, 35, 41, 42, 43, 51, 55, 60], "librari": 60, "lidar": [6, 56], "like": 15, "likelihood": [19, 31], "limit": 20, "linear": [10, 56], "linearphys": 156, "list": 53, "lista": 41, "load": [2, 3, 4, 5, 7, 9, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "load_url_imag": 221, "log": 19, "logpoissonlikelihood": 122, "logpoissonnois": 157, "loop": 20, "loss": [36, 37, 51, 72], "low": [40, 45], "lpip": 71, "lpnorm": 73, "magnet": 56, "markov": 57, "match": 6, "math": 53, "mathemat": 53, "mcloss": 74, "mcmc": 31, "measur": [0, 5, 6, 9, 27, 28, 31, 35, 41, 42], "medianfilt": 100, "method": [9, 22, 55], "metric": 51, "mmse": 28, "model": [5, 6, 7, 12, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 43, 44], "modul": 23, "moiloss": 75, "mont": [28, 57], "montecarlo": 201, "motion": 2, "motionblurgener": 193, "mri": [11, 34, 158], "multipl": [15, 35, 52], "multipli": 186, "multiplier_adjoint": 187, "natur": 0, "neighbor2neighbor": [36, 77], "network": [12, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 51], "new": 56, "niqe": 76, "nois": [5, 20, 27, 28, 31, 56], "noisi": [36, 37], "notat": 53, "ones_lik": 222, "oper": [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 20, 22, 23, 24, 25, 27, 28, 31, 34, 35, 40, 41, 42, 43, 44, 45, 56], "optim": [3, 14, 16, 17, 23, 54], "optim_build": 134, "optimiter": 123, "other": [55, 59], "our": 10, "overal": 9, "own": 4, "packag": 0, "pan": 11, "pansharpen": 159, "pantiltrot": 212, "paramet": [20, 25, 34, 35, 36, 37, 40, 41, 42, 43, 45, 54, 56], "particular": 24, "patch": [14, 19, 20], "patchdataset": [48, 65], "patchnr": [20, 124], "patchprior": 125, "path": [3, 4, 7, 12, 15, 16, 17, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "pattern": 0, "pdnet": 43, "pdnet_dualblock": 101, "pdnet_primalblock": 102, "pgditer": 141, "phantom": 43, "phase": [9, 56], "phaseretriev": 160, "photon": [6, 56], "physic": [3, 56, 161], "physicsgener": 194, "pixel": 11, "pixelwis": 56, "plai": 14, "plot": [5, 6, 16, 17, 20, 23, 25, 27, 28, 31, 41, 42, 45, 59, 223], "plot_curv": 224, "plot_inset": 225, "plot_paramet": 226, "plug": 14, "pnp": [9, 22, 23, 24, 25, 31, 45, 50, 126], "pock": 44, "poissongaussiannois": 162, "poissonlikelihood": 127, "poissonnois": 163, "precondit": 27, "predefin": 50, "pretrain": 49, "primal": [23, 43], "prior": [0, 3, 5, 14, 16, 17, 20, 24, 27, 31, 42, 43, 50, 54, 128], "problem": [0, 3, 15, 16, 17, 22, 23, 24, 25, 29, 30], "product_convolution2d": 188, "project": 55, "proxim": [41, 42], "psnr": 78, "put": 29, "pytorch": 60, "quantif": 31, "r2r_eval": 87, "r2rloss": 79, "radio": [0, 56], "radiointerferometri": 164, "radon": 177, "rand_lik": 227, "randn_lik": 228, "random": [9, 43], "randommaskgener": 195, "randomphaseretriev": 165, "rang": 6, "reconstruct": [3, 5, 9, 12, 20, 28, 34, 35, 44, 50, 55], "recov": 6, "red": [24, 50, 129], "regular": [24, 51], "remot": 56, "requir": 0, "resolut": [11, 24, 40, 45, 56], "reson": 56, "restorm": 103, "result": [3, 4, 5, 6, 7, 12, 15, 16, 17, 22, 23, 24, 25, 27, 28, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "retriev": [9, 56], "ri": 0, "rotat": 207, "run": [5, 20, 27, 28, 31], "sampl": [0, 14, 27, 28, 29, 31], "sampler": [27, 28, 31], "save": [7, 44], "scale": 208, "scan": 43, "schedul": 30, "scoreprior": 130, "scunet": 104, "self": [14, 34, 35, 36, 37, 51], "sens": [11, 41, 56], "set": [3, 12, 16, 17, 20, 22, 23, 25, 34, 35, 36, 37, 44], "setup": [3, 4, 7, 9, 12, 15, 16, 17, 22, 23, 24, 25, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45], "sharpen": 11, "shift": 209, "sigmagener": 196, "signal": [6, 9], "similar": 213, "simul": 0, "singl": [6, 11, 56], "singlephotonlidar": 166, "singlepixelcamera": 167, "skrock": 202, "smiter": 142, "soft": 41, "solv": [0, 3, 15, 16, 17, 22, 23, 25], "spacevaryingblur": 168, "spectral": 9, "splitting_ev": 88, "splittingloss": 81, "ssim": 80, "stack": 8, "standard": 27, "start": 60, "step": [29, 30], "subsampl": 35, "summari": 49, "super": [11, 24, 45, 56], "supervis": [14, 34, 35, 36, 37, 51], "suploss": 82, "sure": 37, "suregaussianloss": 83, "surepgloss": 84, "surepoissonloss": 85, "swinir": 105, "symbol": 53, "tensorlist": [59, 218], "term": 43, "test": [2, 12, 19, 20, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 59, 204], "tgvdenois": 106, "thi": 24, "threshold": 41, "tikhonov": 132, "time": [1, 13, 18, 21, 26, 32, 38, 39, 46, 61], "to_complex_denois": 111, "togeth": 29, "toi": [6, 8, 10], "tomographi": [11, 20, 25, 56, 169], "total": 16, "tour": [2, 11], "train": [12, 20, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 59, 205], "trainabl": 43, "trainer": 62, "transform": [33, 51], "tv": 16, "tvdenois": 107, "tvloss": 86, "tvprior": 131, "ula": [27, 31, 203], "uncertainti": 31, "unet": 108, "unfold": [14, 41, 42, 43, 44, 45, 58], "unfolded_build": 217, "uniformgaussiannois": 170, "uniformnois": 171, "up": [3, 12, 16, 17, 22, 23, 25, 34, 35, 36, 37, 44], "urban100hr": 66, "us": [5, 10, 15, 29, 30, 52, 62, 64, 65, 67, 68, 69, 71, 72, 74, 75, 77, 78, 82, 83, 84, 85, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 108, 109, 110, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 141, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 175, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226], "util": [51, 54, 58, 59], "vanilla": [25, 45], "variat": 16, "verifi": [8, 10], "visual": 9, "volum": 15, "vu": 23, "wavelet": [0, 15, 17], "waveletdenois": 109, "waveletdictdenois": 110, "waveletprior": 133, "weight": [0, 42, 49], "your": [4, 27, 29, 30], "zeros_lik": 229}})